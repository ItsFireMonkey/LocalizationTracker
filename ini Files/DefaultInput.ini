[CurrentIniVersion]
Version=1
Preserve=/Script/FortniteGame.FortConsole

[/Script/Engine.PlayerInput]
-DebugExecBindings=(Key=F1,Command="viewmode wireframe", bIgnoreShift=True)
-DebugExecBindings=(Key=F2,Command="viewmode unlit")
-DebugExecBindings=(Key=F3,Command="viewmode lit")
-DebugExecBindings=(Key=F4,Command="viewmode lit_detaillighting")
-DebugExecBindings=(Key=F5,Command="viewmode shadercomplexity")
-DebugExecBindings=(Key=B,Command="ToggleSpeaking true | OnRelease ToggleSpeaking false")
-DebugExecBindings=(Key=Escape,Command="CloseEditorViewport")

+DebugExecBindings=(Key=F1,Command="viewmode wireframe", Control=True)
+DebugExecBindings=(Key=F2,Command="viewmode unlit", Control=True)
+DebugExecBindings=(Key=F3,Command="viewmode lit", Control=True)
+DebugExecBindings=(Key=F4,Command="viewmode lit_detaillighting", Control=True)
+DebugExecBindings=(Key=F5,Command="viewmode shadercomplexity", Control=True)
+DebugExecBindings=(Key=RightBracket, Command="ToggleTargetInfoAI")
+DebugExecBindings=(Key=LeftBracket, Command="BugIt QuickBug")
+DebugExecBindings=(Key=Pause,Command="Pause")
+DebugExecBindings=(Key=Escape,Command="CloseEditorViewport", bIgnoreShift=True)

; --- Debug camera binds
+DebugExecBindings=(Key=Delete,Command="Camera Default")
+DebugExecBindings=(Key=End,Command="Camera FirstPerson")
+DebugExecBindings=(Key=PageDown,Command="Camera ThirdPerson")
+DebugExecBindings=(Key=PageUp,Command="Camera Fixed")
+DebugExecBindings=(Key=Home,Command="Camera FixedTracking")
+DebugExecBindings=(Key=Insert,Command="Camera FreeCam")

; --- Perf/Mem commands
DebugExecBindings=(Key=Num0,Command="memreport")
DebugExecBindings=(Key=Num.,Command="memreport -full")
DebugExecBindings=(Key=Num1,Command="startfpschart")
DebugExecBindings=(Key=Num2,Command="stopfpschart")
DebugExecBindings=(Key=Num4,Command="stat startfile")
DebugExecBindings=(Key=Num5,Command="cheat stat startfile")
DebugExecBindings=(Key=Num7,Command="stat stopfile")
DebugExecBindings=(Key=Num8,Command="cheat stat stopfile")

; --- ShowDebug commands
+DebugExecBindings=(Key=Comma,Command="ShowDebug AbilitySystem",Shift=true)
+DebugExecBindings=(Key=Period,Command="CycleDebugAbilitySystem",Shift=true)
;+DebugExecBindings=(Key=Period,Command="AbilitySystem.Debug.NextCategory",Shift=true)
+DebugExecBindings=(Key=Slash,Command="ShowDebug",Shift=true)

[/Script/FortniteGame.FortPlayerInput]
bReduceAimAssistWhileScoped=true
; Keyboard/Mouse (KBM)
CampaignDefaultKBMPresetName="ConfigKBM_Campaign"
AthenaDefaultKBMPresetName="ConfigKBM_Athena"
+CampaignKBMResetToDefaultPresetNames="ConfigKBMResetToDefault_Campaign"
+CampaignKBMResetToDefaultPresetNames="ConfigKBMResetToDefault_Campaign2"
+AthenaKBMResetToDefaultPresetNames="ConfigKBMResetToDefault_Athena"
+AthenaKBMResetToDefaultPresetNames="ConfigKBMResetToDefault_Athena2"
; Gamepad Presets
DefaultGamepadPresetName="ConfigG"
DefaultGamepadPresetNameAthena="ConfigG_Athena"
DefaultGamepadPresetNameAthenaMobile="ConfigG_Athena"
CustomGamepadPresetNameAthena="ConfigCustom_Athena"

+FortPlayerInputSettingsNames="ConfigKBM_Campaign"
+FortPlayerInputSettingsNames="ConfigKBM_Athena"
+FortPlayerInputSettingsNames="ConfigKBMResetToDefault_Campaign"
+FortPlayerInputSettingsNames="ConfigKBMResetToDefault_Campaign2"
+FortPlayerInputSettingsNames="ConfigKBMResetToDefault_Athena"
+FortPlayerInputSettingsNames="ConfigKBMResetToDefault_Athena2"
+FortPlayerInputSettingsNames="ConfigD"
+FortPlayerInputSettingsNames="ConfigE"
+FortPlayerInputSettingsNames="ConfigF"
+FortPlayerInputSettingsNames="ConfigG"
+FortPlayerInputSettingsNames="ConfigD_Athena"
+FortPlayerInputSettingsNames="ConfigE_Athena"
+FortPlayerInputSettingsNames="ConfigF_Athena"
+FortPlayerInputSettingsNames="ConfigG_Athena"
+FortPlayerInputSettingsNames="ConfigH_Athena"
+FortPlayerInputSettingsNames="ConfigCustom_Athena"

+InputActionTypeFriendlyNames=LOCTEXT("ButtonPress", "Press")
+InputActionTypeFriendlyNames=LOCTEXT("MouseClick", "Click")
+InputActionTypeFriendlyNames=LOCTEXT("ButtonHold", "Hold")
+InputActionTypeFriendlyNames=LOCTEXT("ButtonRelease", "Release")

; Group Contexts - Combat
; NOTE: DO NOT put duplicate action names into different action groups, ie "Fire" in Combat and Building.
;	These group contexts are meant to compare if two action names are in the same group. This helps when doing custom bindings.
;	See UFortPlayerInput::AreInputActionsInSameGroup.
+InputActionGroupContexts=(ActionName="Fire", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadSprint", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="Reload", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="Use", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="UseOrReload", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="CrouchOrRepair", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="Crouch", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="AutoRun", InputActionGroup=Combat)

+InputActionGroupContexts=(ActionName="GamepadSelectNextWeapon", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadSelectPreviousWeapon", InputActionGroup=Combat)

+InputActionGroupContexts=(ActionName="GamepadTapSelectNextWeapon", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadTapSelectPreviousWeapon", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadTapSelectNextWeaponForModalAbilities", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadTapSelectPreviousWeaponForModalAbilities", InputActionGroup=Combat)

+InputActionGroupContexts=(ActionName="Target", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadAbility1", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadAbility2", InputActionGroup=Combat)

+InputActionGroupContexts=(ActionName="GamepadAbility1PartA", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadAbility1PartB", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadAbility2PartA", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadAbility2PartB", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadAbility3PartA", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadAbility3PartB", InputActionGroup=Combat)

+InputActionGroupContexts=(ActionName="HotbarKey8", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="HotbarKey9", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadImproveOrSpotActor", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="SpotActor", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="PlaceMapMarkerInWorld", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="PlaceEnemyMarkerInWorld", InputActionGroup=Combat)

+InputActionGroupContexts=(ActionName="GamepadToggleFullScreenMap", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadToggleInventory", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadSquadQuickChatPicker", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadEmotePicker", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadLockerEmote1", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadLockerEmote2", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadLockerEmote3", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadLockerEmote4", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadLockerEmote5", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadLockerEmote6", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadReplayLastEmote", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadEmotePickerOrReplayLastEmoteHold", InputActionGroup=Combat)
+InputActionGroupContexts=(ActionName="GamepadStartRecordingHighlights", InputActionGroup=Combat)

; Group Contexts - Building
+InputActionGroupContexts=(ActionName="BuildConfirm", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadNextBuilding", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadPreviousBuilding", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadTrapPicker", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadTrapPickerWhenTrapSelected", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadUseOrTrapPicker", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadUseOrTrapPickerAndPlace", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="RotatePrimitiveClockwise", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="ChangeMaterial", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="SwitchToSelectedBuildingType", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadBuildingSlot1", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadBuildingSlot2", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadBuildingSlot3", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadBuildingSlot4", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadRepairHoldOrRotateBuildingPiece", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadChangeMaterialOrHarvestHold", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="CrouchWhileBuilding", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="CrouchOrRepairWhileBuilding", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadSprintWhileBuilding", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadToggleFullScreenMapWhileBuilding", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadToggleInventoryWhileBuilding", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadSquadQuickChatPickerWhileBuilding", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadEmotePickerWhileBuilding", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadReplayLastEmoteWhileBuilding", InputActionGroup=Building)
+InputActionGroupContexts=(ActionName="GamepadEmotePickerOrReplayLastEmoteHoldWhileBuilding", InputActionGroup=Building)

; Group Contexts - Combat And Building
+InputActionGroupContexts=(ActionName="PerformBuildingEditInteraction", InputActionGroup=CombatAndBuilding)
+InputActionGroupContexts=(ActionName="PerformBuildingImprovementInteraction", InputActionGroup=CombatAndBuilding)
+InputActionGroupContexts=(ActionName="GamepadSwitchModeOrEditBuilding", InputActionGroup=CombatAndBuilding)
+InputActionGroupContexts=(ActionName="GamepadSwitchMode", InputActionGroup=CombatAndBuilding)

; Group Contexts - movement
; This group is really important so we'll treat it like AllModes in code.
+InputActionGroupContexts=(ActionName="MoveForward", InputActionGroup=Movement)
+InputActionGroupContexts=(ActionName="MoveForward_Gamepad", InputActionGroup=Movement)
+InputActionGroupContexts=(ActionName="MoveRight", InputActionGroup=Movement)
+InputActionGroupContexts=(ActionName="MoveRight_Gamepad", InputActionGroup=Movement)

; Group Contexts - Edit
+InputActionGroupContexts=(ActionName="EditSelect", InputActionGroup=Edit)
+InputActionGroupContexts=(ActionName="BuildingEditReset", InputActionGroup=Edit)
+InputActionGroupContexts=(ActionName="CompleteBuildingEditInteraction", InputActionGroup=Edit)
+InputActionGroupContexts=(ActionName="CrouchWhileEditing", InputActionGroup=Edit)
+InputActionGroupContexts=(ActionName="CrouchOrRepairWhileEditing", InputActionGroup=Edit)
+InputActionGroupContexts=(ActionName="GamepadSprintWhileEditing", InputActionGroup=Edit)
+InputActionGroupContexts=(ActionName="GamepadToggleFullScreenMapWhileEditing", InputActionGroup=Edit)
+InputActionGroupContexts=(ActionName="GamepadToggleInventoryWhileEditing", InputActionGroup=Edit)
+InputActionGroupContexts=(ActionName="GamepadSquadQuickChatPickerWhileEditing", InputActionGroup=Edit)
+InputActionGroupContexts=(ActionName="GamepadEmotePickerWhileEditing", InputActionGroup=Edit)
+InputActionGroupContexts=(ActionName="GamepadReplayLastEmoteWhileEditing", InputActionGroup=Edit)
+InputActionGroupContexts=(ActionName="GamepadEmotePickerOrReplayLastEmoteHoldWhileEditing", InputActionGroup=Edit)

; Group Contexts - Death
+InputActionGroupContexts=(ActionName="ResurrectHere", InputActionGroup=Death)
+InputActionGroupContexts=(ActionName="RespawnAtStart", InputActionGroup=Death)

; Group Contexts - Cinematic
+InputActionGroupContexts=(ActionName="SkipCutscene", InputActionGroup=Cinematic)

; Group Contexts - Picker
+InputActionGroupContexts=(ActionName="PickerConfirm", InputActionGroup=Picker)
+InputActionGroupContexts=(ActionName="PickerCancel", InputActionGroup=Picker)
+InputActionGroupContexts=(ActionName="PickerNextOption", InputActionGroup=Picker)
+InputActionGroupContexts=(ActionName="PickerPreviousOption", InputActionGroup=Picker)
+InputActionGroupContexts=(ActionName="PickerNextWheel", InputActionGroup=Picker)
+InputActionGroupContexts=(ActionName="PickerPreviousWheel", InputActionGroup=Picker)
+InputActionGroupContexts=(ActionName="PickerNull", InputActionGroup=Picker)

; Group Contexts - Other
+InputActionGroupContexts=(ActionName="ToggleFullScreenMap", InputActionGroup=Other)
+InputActionGroupContexts=(ActionName="ToggleInventory", InputActionGroup=Other)
+InputActionGroupContexts=(ActionName="SocialPicker", InputActionGroup=Other)
+InputActionGroupContexts=(ActionName="SquadQuickChatPicker", InputActionGroup=Other)
+InputActionGroupContexts=(ActionName="ChatPicker", InputActionGroup=Other)
+InputActionGroupContexts=(ActionName="EmotePicker", InputActionGroup=Other)
+InputActionGroupContexts=(ActionName="NotePicker", InputActionGroup=Other)
+InputActionGroupContexts=(ActionName="LockerEmote1", InputActionGroup=Other)
+InputActionGroupContexts=(ActionName="LockerEmote2", InputActionGroup=Other)
+InputActionGroupContexts=(ActionName="LockerEmote3", InputActionGroup=Other)
+InputActionGroupContexts=(ActionName="LockerEmote4", InputActionGroup=Other)
+InputActionGroupContexts=(ActionName="LockerEmote5", InputActionGroup=Other)
+InputActionGroupContexts=(ActionName="LockerEmote6", InputActionGroup=Other)
+InputActionGroupContexts=(ActionName="ReplayLastEmote", InputActionGroup=Other)
+InputActionGroupContexts=(ActionName="OpenVoteDialog", InputActionGroup=Other)

; Group Contexts - Spectating
+InputActionGroupContexts=(ActionName="SwitchSpectatedPlayerUp", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SwitchSpectatedPlayerDown", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="HoverDrone_IncreaseSpeed", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="HoverDrone_DecreaseSpeed", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="ToggleSpectatorHUD", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="TogglePauseState", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="ToggleReplaySequencer", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="NextSpectatorCameraMode", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="PrevSpectatorCameraMode", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="ArmProjectileCam", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectatorSpecialAction", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectateNextPlayer", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectatePrevPlayer", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectateNextSquad", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectatePrevSquad", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectateNextTeam", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectatePrevTeam", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectateLastAttacker", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="ResetSpectatorCameraMode", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="HoverDrone_IncreaseSpeed", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="HoverDrone_FaceLocationDisable", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="TriggerLightningFlash", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="NextArenaCam", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="PrevArenaCam", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignSpectatorCameraToHotKey0", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignSpectatorCameraToHotKey1", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignSpectatorCameraToHotKey2", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignSpectatorCameraToHotKey3", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignSpectatorCameraToHotKey4", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignSpectatorCameraToHotKey5", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignSpectatorCameraToHotKey6", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignSpectatorCameraToHotKey7", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignSpectatorCameraToHotKey8", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignSpectatorCameraToHotKey9", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignReplayShotStartToHotKey0", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignReplayShotStartToHotKey1", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignReplayShotStartToHotKey2", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignReplayShotStartToHotKey3", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignReplayShotStartToHotKey4", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignReplayShotStartToHotKey5", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignReplayShotStartToHotKey6", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignReplayShotStartToHotKey7", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignReplayShotStartToHotKey8", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="AssignReplayShotStartToHotKey9", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="InvokeSpectatorCamHotKey0", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="InvokeSpectatorCamHotKey1", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="InvokeSpectatorCamHotKey2", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="InvokeSpectatorCamHotKey3", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="InvokeSpectatorCamHotKey4", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="InvokeSpectatorCamHotKey5", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="InvokeSpectatorCamHotKey6", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="InvokeSpectatorCamHotKey7", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="InvokeSpectatorCamHotKey8", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="InvokeSpectatorCamHotKey9", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectatorCameraMode0", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectatorCameraMode1", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectatorCameraMode2", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectatorCameraMode3", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectatorCameraMode4", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectatorCameraMode5", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectatorCameraMode6", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectatorCameraMode7", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectatorCameraMode8", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectatorCameraMode9", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectatorZoomOut", InputActionGroup=Spectating)
;+InputActionGroupContexts=(ActionName="ToggleBroadcastOffAirOverlay", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="ToggleBroadcastNetUI", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SortEventMatchInfoByEliminations", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SortEventMatchInfoByPlace", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="ToggleSquadIdsOnEventMatchScoreboard", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="ToggleScoreOnEventMatchScoreboard", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SortEventMatchInfoByScore", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="ToggleEventMatchScoreboardGroupByTeam", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="ReplaySpeedIncrease",InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="ReplaySpeedDecrease",InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="SpectatorZoomIn",InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="BroadcastToggleSquadIds",InputActionGroup=Spectating)
; BattleMap
+InputActionGroupContexts=(ActionName="BattleMapToggleShowAllSquadMembers", InputActionGroup=Spectating)
+InputActionGroupContexts=(ActionName="BattleMapToggleShowNearbyChests", InputActionGroup=Spectating)

; Group Contexts - FullscreenMap
+InputActionGroupContexts=(ActionName="SetMapCursor", InputActionGroup=FullscreenMap)
+InputActionGroupContexts=(ActionName="RemoveMapCursor_Mouse", InputActionGroup=FullscreenMap)
+InputActionGroupContexts=(ActionName="RemoveMapCursor_Gamepad", InputActionGroup=FullscreenMap)
+InputActionGroupContexts=(ActionName="MapZoomIn_Gamepad",InputActionGroup=FullscreenMap)
+InputActionGroupContexts=(ActionName="MapZoomOut_Gamepad",InputActionGroup=FullscreenMap)
+InputActionGroupContexts=(ActionName="Map_SwitchContext",InputActionGroup=FullscreenMap)
+InputActionGroupContexts=(ActionName="Map_PinUnpinVisibility",InputActionGroup=FullscreenMap)

; Group Contexts - All Modes
; Certain things need to be considered available in all places, like going into edit mode and anything that goes from one mode to another.
; These need to share a single function call so they don't cause other actions to fire off after going from one mode to another.
+InputActionGroupContexts=(ActionName="GamepadNextWeaponOrHarvestHold", InputActionGroup=AllModes)
+InputActionGroupContexts=(ActionName="GamepadNextWeaponOrAltInteractOrHarvestHold", InputActionGroup=AllModes)
+InputActionGroupContexts=(ActionName="SwitchQuickbar", InputActionGroup=AllModes)
+InputActionGroupContexts=(ActionName="GamepadToggleHarvestWeapon", InputActionGroup=AllModes)
+InputActionGroupContexts=(ActionName="GamepadToggleHarvestWeaponOrAltInteract", InputActionGroup=AllModes)
+InputActionGroupContexts=(ActionName="GamepadJump", InputActionGroup=AllModes)
+InputActionGroupContexts=(ActionName="GamepadEscapeKey", InputActionGroup=AllModes)
+InputActionGroupContexts=(ActionName="Jump", InputActionGroup=AllModes)
+InputActionGroupContexts=(ActionName="Sprint", InputActionGroup=AllModes)
+InputActionGroupContexts=(ActionName="TogglePickAxe", InputActionGroup=AllModes)
+InputActionGroupContexts=(ActionName="SlotUp", InputActionGroup=AllModes)
+InputActionGroupContexts=(ActionName="SlotDown", InputActionGroup=AllModes)
+InputActionGroupContexts=(ActionName="TrapPicker", InputActionGroup=AllModes)
+InputActionGroupContexts=(ActionName="PushToTalk", InputActionGroup=AllModes)

; Group Contexts - Shopping Cart
+InputActionGroupContexts=(ActionName="ShoppingCartChangeSeat", InputActionGroup=ShoppingCart)
; Driver
+InputActionGroupContexts=(ActionName="ShoppingCartCoast", InputActionGroup=ShoppingCartDriver)
+InputActionGroupContexts=(ActionName="ShoppingCartExit", InputActionGroup=ShoppingCartDriver)
+InputActionGroupContexts=(ActionName="ShoppingCartPitchForward", InputActionGroup=ShoppingCartDriver)
+InputActionGroupContexts=(ActionName="ShoppingCartPitchForward_Gamepad", InputActionGroup=ShoppingCartDriver)
+InputActionGroupContexts=(ActionName="ShoppingCartPitchForwardSecondary", InputActionGroup=ShoppingCartDriver)
+InputActionGroupContexts=(ActionName="GamepadShoppingCartExit", InputActionGroup=ShoppingCartDriver)
; Passenger
+InputActionGroupContexts=(ActionName="ShoppingCartUseOrExit", InputActionGroup=ShoppingCartPassenger)
+InputActionGroupContexts=(ActionName="GamepadShoppingCartUseOrExit", InputActionGroup=ShoppingCartPassenger)

; Group Contexts - Cannon
+InputActionGroupContexts=(ActionName="CannonChangeSeat", InputActionGroup=Cannon)
+InputActionGroupContexts=(ActionName="CannonShoot", InputActionGroup=Cannon)
+InputActionGroupContexts=(ActionName="GamepadCannonShoot", InputActionGroup=Cannon)
; Driver
+InputActionGroupContexts=(ActionName="CannonCoast", InputActionGroup=CannonDriver)
+InputActionGroupContexts=(ActionName="CannonExit", InputActionGroup=CannonDriver)
+InputActionGroupContexts=(ActionName="CannonPitchForward", InputActionGroup=CannonDriver)
+InputActionGroupContexts=(ActionName="CannonPitchForward_Gamepad", InputActionGroup=CannonDriver)
+InputActionGroupContexts=(ActionName="CannonPitchForwardSecondary", InputActionGroup=CannonDriver)
+InputActionGroupContexts=(ActionName="GamepadCannonCoast", InputActionGroup=CannonDriver)
+InputActionGroupContexts=(ActionName="GamepadCannonExit", InputActionGroup=CannonDriver)
; Passenger
+InputActionGroupContexts=(ActionName="CannonUseOrExit", InputActionGroup=CannonPassenger)
+InputActionGroupContexts=(ActionName="GamepadCannonUseOrExit", InputActionGroup=CannonPassenger)

; Group Contexts - Golf Cart
+InputActionGroupContexts=(ActionName="GolfCartChangeSeat", InputActionGroup=GolfCart)
; Driver
+InputActionGroupContexts=(ActionName="GolfCartEBrake", InputActionGroup=GolfCartDriver)
+InputActionGroupContexts=(ActionName="GolfCartExit", InputActionGroup=GolfCartDriver)
+InputActionGroupContexts=(ActionName="GolfCartHonk", InputActionGroup=GolfCartDriver)
+InputActionGroupContexts=(ActionName="GolfCartPitchForward", InputActionGroup=GolfCartDriver)
+InputActionGroupContexts=(ActionName="GolfCartPitchForward_Gamepad", InputActionGroup=GolfCartDriver)
+InputActionGroupContexts=(ActionName="GolfCartPitchForwardSecondary", InputActionGroup=GolfCartDriver)
+InputActionGroupContexts=(ActionName="GamepadGolfCartEBrakeLeft", InputActionGroup=GolfCartDriver)
+InputActionGroupContexts=(ActionName="GamepadGolfCartEBrakeRight", InputActionGroup=GolfCartDriver)
+InputActionGroupContexts=(ActionName="GamepadGolfCartExit", InputActionGroup=GolfCartDriver)
+InputActionGroupContexts=(AxisName="GamepadGolfCartForward", InputActionGroup=GolfCartDriver)
+InputActionGroupContexts=(AxisName="GamepadGolfCartReverse", InputActionGroup=GolfCartDriver)
; Passengers
+InputActionGroupContexts=(ActionName="GolfCartUseOrExit", InputActionGroup=GolfCartPassenger)
+InputActionGroupContexts=(ActionName="GamepadGolfCartUseOrExit", InputActionGroup=GolfCartPassenger)

; Group Contexts - Quad Crasher
+InputActionGroupContexts=(ActionName="QuadCrasherChangeSeat", InputActionGroup=QuadCrasher)
; Driver
+InputActionGroupContexts=(ActionName="QuadCrasherBoost", InputActionGroup=QuadCrasherDriver)
+InputActionGroupContexts=(ActionName="QuadCrasherExit", InputActionGroup=QuadCrasherDriver)
+InputActionGroupContexts=(ActionName="QuadCrasherHonk", InputActionGroup=QuadCrasherDriver)
+InputActionGroupContexts=(ActionName="QuadCrasherPitchForward", InputActionGroup=QuadCrasherDriver)
+InputActionGroupContexts=(ActionName="QuadCrasherPitchForward_Gamepad", InputActionGroup=QuadCrasherDriver)
+InputActionGroupContexts=(ActionName="QuadCrasherPitchForwardSecondary", InputActionGroup=QuadCrasherDriver)
+InputActionGroupContexts=(ActionName="GamepadQuadCrasherBoostLeft", InputActionGroup=QuadCrasherDriver)
+InputActionGroupContexts=(ActionName="GamepadQuadCrasherBoostRight", InputActionGroup=QuadCrasherDriver)
+InputActionGroupContexts=(ActionName="GamepadQuadCrasherBoostExtra", InputActionGroup=QuadCrasherDriver)
+InputActionGroupContexts=(ActionName="GamepadQuadCrasherExit", InputActionGroup=QuadCrasherDriver)
+InputActionGroupContexts=(AxisName="GamepadQuadCrasherForward", InputActionGroup=QuadCrasherDriver)
+InputActionGroupContexts=(AxisName="GamepadQuadCrasherReverse", InputActionGroup=QuadCrasherDriver)
; Passenger
+InputActionGroupContexts=(ActionName="QuadCrasherUseOrExit", InputActionGroup=QuadCrasherPassenger)
+InputActionGroupContexts=(ActionName="GamepadQuadCrasherUseOrExit", InputActionGroup=QuadCrasherPassenger)

; Group Contexts - Biplane
+InputActionGroupContexts=(ActionName="BiplaneChangeSeat", InputActionGroup=Biplane)
; Driver
+InputActionGroupContexts=(ActionName="BiplaneBoost", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="BiplaneShoot", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="BiplaneFreelook", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="BiplaneRollRight", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="BiplaneRollLeft", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="BiplaneRollInvert", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="BiplaneStartEngine", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="BiplaneStopEngine", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="BiplaneTaxiBackwards", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="BiplaneExit", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="BiplanePitchForward", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="BiplanePitchForward_Gamepad", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="BiplanePitchForwardSecondary", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="GamepadBiplaneBoost", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="GamepadBiplaneShoot", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="GamepadBiplaneRollRight", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="GamepadBiplaneRollLeft", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="GamepadBiplaneStartEngine", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="GamepadBiplaneStopEngine", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="GamepadBiplaneTaxiBackwards", InputActionGroup=BiplaneDriver)
+InputActionGroupContexts=(ActionName="GamepadBiplaneExit", InputActionGroup=BiplaneDriver)
; Passengers
+InputActionGroupContexts=(ActionName="BiplaneUseOrExit", InputActionGroup=BiplanePassenger)
+InputActionGroupContexts=(ActionName="GamepadBiplaneUseOrExit", InputActionGroup=BiplanePassenger)

; Group Contexts - Hamsterball
+InputActionGroupContexts=(ActionName="HamsterballBoost", InputActionGroup=Hamsterball)
+InputActionGroupContexts=(ActionName="HamsterballShoot", InputActionGroup=Hamsterball)
+InputActionGroupContexts=(ActionName="HamsterballRetract", InputActionGroup=Hamsterball)
+InputActionGroupContexts=(ActionName="HamsterballExit", InputActionGroup=Hamsterball)
+InputActionGroupContexts=(ActionName="HamsterballPitchForward", InputActionGroup=Hamsterball)
+InputActionGroupContexts=(ActionName="HamsterballPitchForward_Gamepad", InputActionGroup=Hamsterball)
+InputActionGroupContexts=(ActionName="HamsterballPitchForwardSecondary", InputActionGroup=Hamsterball)
+InputActionGroupContexts=(ActionName="GamepadHamsterballBoostLeft", InputActionGroup=Hamsterball)
+InputActionGroupContexts=(ActionName="GamepadHamsterballBoostRight", InputActionGroup=Hamsterball)
+InputActionGroupContexts=(ActionName="GamepadHamsterballShoot", InputActionGroup=Hamsterball)
+InputActionGroupContexts=(ActionName="GamepadHamsterballRetract", InputActionGroup=Hamsterball)
+InputActionGroupContexts=(ActionName="GamepadHamsterballExit", InputActionGroup=Hamsterball)

; Group Contexts - Jackal
+InputActionGroupContexts=(ActionName="JackalUseOrExit", InputActionGroup=Jackal)
+InputActionGroupContexts=(ActionName="JackalBoost", InputActionGroup=Jackal)
+InputActionGroupContexts=(ActionName="JackalJump", InputActionGroup=Jackal)
+InputActionGroupContexts=(ActionName="JackalPitchForward", InputActionGroup=Jackal)
+InputActionGroupContexts=(ActionName="JackalPitchForward_Gamepad", InputActionGroup=Jackal)
+InputActionGroupContexts=(ActionName="JackalPitchForwardSecondary", InputActionGroup=Jackal)
+InputActionGroupContexts=(ActionName="GamepadJackalBoostLeft", InputActionGroup=Jackal)
+InputActionGroupContexts=(ActionName="GamepadJackalBoostRight", InputActionGroup=Jackal)
+InputActionGroupContexts=(ActionName="GamepadJackalUseOrExit", InputActionGroup=Jackal)
+InputActionGroupContexts=(ActionName="GamepadJackalJump", InputActionGroup=Jackal)

; Group Contexts - Ostrich
+InputActionGroupContexts=(ActionName="OstrichChangeSeat", InputActionGroup=Ostrich)
; Driver
+InputActionGroupContexts=(ActionName="OstrichBoost", InputActionGroup=OstrichDriver)
+InputActionGroupContexts=(ActionName="OstrichJump", InputActionGroup=OstrichDriver)
+InputActionGroupContexts=(ActionName="OstrichSelfDestructDriver", InputActionGroup=OstrichDriver)
+InputActionGroupContexts=(ActionName="OstrichStomp", InputActionGroup=OstrichDriver)
+InputActionGroupContexts=(ActionName="OstrichHonk", InputActionGroup=OstrichDriver)
+InputActionGroupContexts=(ActionName="OstrichExitDriver", InputActionGroup=OstrichDriver)
+InputActionGroupContexts=(ActionName="OstrichPitchForward", InputActionGroup=OstrichDriver)
+InputActionGroupContexts=(ActionName="OstrichPitchForward_Gamepad", InputActionGroup=OstrichDriver)
+InputActionGroupContexts=(ActionName="OstrichPitchForwardSecondary", InputActionGroup=OstrichDriver)
+InputActionGroupContexts=(ActionName="GamepadOstrichJump", InputActionGroup=OstrichDriver)
+InputActionGroupContexts=(ActionName="GamepadOstrichBoost", InputActionGroup=OstrichDriver)
+InputActionGroupContexts=(ActionName="GamepadOstrichSelfDestructDriver", InputActionGroup=OstrichDriver)
+InputActionGroupContexts=(ActionName="GamepadOstrichStomp", InputActionGroup=OstrichDriver)
+InputActionGroupContexts=(ActionName="GamepadOstrichHonk", InputActionGroup=OstrichDriver)
; Passenger
+InputActionGroupContexts=(ActionName="OstrichShieldBoost", InputActionGroup=OstrichPassenger)
+InputActionGroupContexts=(ActionName="OstrichSelfDestructPassenger", InputActionGroup=OstrichPassenger)
+InputActionGroupContexts=(ActionName="OstrichShotgun", InputActionGroup=OstrichPassenger)
+InputActionGroupContexts=(ActionName="OstrichMissiles", InputActionGroup=OstrichPassenger)
+InputActionGroupContexts=(ActionName="OstrichExitPassenger", InputActionGroup=OstrichPassenger)
+InputActionGroupContexts=(ActionName="GamepadOstrichShieldBoost", InputActionGroup=OstrichPassenger)
+InputActionGroupContexts=(ActionName="GamepadOstrichSelfDestructPassenger", InputActionGroup=OstrichPassenger)
+InputActionGroupContexts=(ActionName="GamepadOstrichShotgun", InputActionGroup=OstrichPassenger)
+InputActionGroupContexts=(ActionName="GamepadOstrichMissiles", InputActionGroup=OstrichPassenger)

; Group Contexts - Meatball
+InputActionGroupContexts=(ActionName="MeatballChangeSeat", InputActionGroup=Meatball)
; Driver
+InputActionGroupContexts=(ActionName="MeatballBoost", InputActionGroup=MeatballDriver)
+InputActionGroupContexts=(ActionName="MeatballShoot", InputActionGroup=MeatballDriver)
+InputActionGroupContexts=(ActionName="MeatballTargeting", InputActionGroup=MeatballDriver)
+InputActionGroupContexts=(ActionName="MeatballExit", InputActionGroup=MeatballDriver)
+InputActionGroupContexts=(ActionName="MeatballPitchForward", InputActionGroup=MeatballDriver)
+InputActionGroupContexts=(ActionName="MeatballPitchForward_Gamepad", InputActionGroup=MeatballDriver)
+InputActionGroupContexts=(ActionName="MeatballPitchForwardSecondary", InputActionGroup=MeatballDriver)
+InputActionGroupContexts=(ActionName="GamepadMeatballBoostLeft", InputActionGroup=MeatballDriver)
+InputActionGroupContexts=(ActionName="GamepadMeatballBoostRight", InputActionGroup=MeatballDriver)
+InputActionGroupContexts=(ActionName="GamepadMeatballShoot", InputActionGroup=MeatballDriver)
+InputActionGroupContexts=(ActionName="GamepadMeatballTargeting", InputActionGroup=MeatballDriver)
+InputActionGroupContexts=(ActionName="GamepadMeatballExit", InputActionGroup=MeatballDriver)
; Passenger
+InputActionGroupContexts=(ActionName="MeatballUseOrExit", InputActionGroup=MeatballPassenger)
+InputActionGroupContexts=(ActionName="GamepadMeatballUseOrExit", InputActionGroup=MeatballPassenger)

; Group Contexts - Hoagie
+InputActionGroupContexts=(ActionName="HoagieMoveUp", InputActionGroup=HoagieDriver)
+InputActionGroupContexts=(ActionName="HoagieMoveDownButton", InputActionGroup=HoagieDriver)
+InputActionGroupContexts=(ActionName="HoagieMoveUpButton", InputActionGroup=HoagieDriver)
+InputActionGroupContexts=(ActionName="GamepadHoagieMoveUp", InputActionGroup=HoagieDriver)
+InputActionGroupContexts=(ActionName="HoagieExit", InputActionGroup=HoagieDriver)
+InputActionGroupContexts=(ActionName="GamepadHoagieExit", InputActionGroup=HoagieDriver)
+InputActionGroupContexts=(ActionName="HoagieChangeSeats", InputActionGroup=HoagieDriver)
+InputActionGroupContexts=(ActionName="HoagieBoost", InputActionGroup=HoagieDriver)
+InputActionGroupContexts=(ActionName="HoagieHonk", InputActionGroup=HoagieDriver)
+InputActionGroupContexts=(ActionName="GamepadHoagieHonk", InputActionGroup=HoagieDriver)

; Group Contexts - Mounted Turret
+InputActionGroupContexts=(ActionName="MountedTurretExit", InputActionGroup=MountedTurret)
+InputActionGroupContexts=(ActionName="GamepadMountedTurretExit", InputActionGroup=MountedTurret)
+InputActionGroupContexts=(ActionName="GamepadMountedTurretJump", InputActionGroup=MountedTurret)

; Group Contexts - DBNO Carry
+InputActionGroupContexts=(ActionName="DBNOCarryHoist", InputActionGroup=DBNOCarryStart)
+InputActionGroupContexts=(ActionName="DBNOCarryThrow", InputActionGroup=DBNOCarry)
+InputActionGroupContexts=(ActionName="DBNOCarryDrop", InputActionGroup=DBNOCarryStop)

; Group Contexts - Interaction
+InputActionGroupContexts=(ActionName="AlternateInteractCarry", InputActionGroup=InteractionStart)
+InputActionGroupContexts=(ActionName="AlternateInteractPlace", InputActionGroup=InteractionStop)

; Group Contexts - Creative All
+InputActionGroupContexts=(ActionName="ToggleCreativePhone", InputActionGroup=CreativeAll)
+InputActionGroupContexts=(ActionName="GamepadToggleHarvestOrHoldCreativePhone", InputActionGroup=CreativeAll)
+InputActionGroupContexts=(ActionName="GamepadToggleCreativePhoneWeapon", InputActionGroup=CreativeAll)
+InputActionGroupContexts=(ActionName="ToggleQuickMenu", InputActionGroup=CreativeAll)
; Group Contexts - Creative Move Tool - Equipped
+InputActionGroupContexts=(ActionName="CreativeMoveToolEquippedGrabOrLetGo", InputActionGroup=CreativeMoveToolEquipped)
+InputActionGroupContexts=(ActionName="CreativeMoveToolEquippedCopyGrabOrDuplicate", InputActionGroup=CreativeMoveToolEquipped)
+InputActionGroupContexts=(ActionName="PossessPropActivate", InputActionGroup=CreativeMoveToolEquipped)
+InputActionGroupContexts=(ActionName="CreativeMoveToolEquippedDelete", InputActionGroup=CreativeMoveToolEquipped)
+InputActionGroupContexts=(ActionName="CreativeMoveToolMultiSelect", InputActionGroup=CreativeMoveToolEquipped)
+InputActionGroupContexts=(ActionName="CreativeMoveToolClearMultiSelect", InputActionGroup=CreativeMoveToolEquipped)
+InputActionGroupContexts=(ActionName="GamepadCreativeQuickbarSelectNext", InputActionGroup=CreativeMoveToolEquipped)
+InputActionGroupContexts=(ActionName="GamepadCreativeQuickbarSelectPrevious", InputActionGroup=CreativeMoveToolEquipped)
+InputActionGroupContexts=(ActionName="CreativeQuickbarActivateClutch", InputActionGroup=CreativeMoveToolEquipped)
+InputActionGroupContexts=(ActionName="CreativeQuickbarKey1", InputActionGroup=CreativeMoveToolEquipped)
+InputActionGroupContexts=(ActionName="CreativeQuickbarKey2", InputActionGroup=CreativeMoveToolEquipped)
+InputActionGroupContexts=(ActionName="CreativeQuickbarKey3", InputActionGroup=CreativeMoveToolEquipped)
+InputActionGroupContexts=(ActionName="CreativeQuickbarKey4", InputActionGroup=CreativeMoveToolEquipped)
+InputActionGroupContexts=(ActionName="CreativeQuickbarKey5", InputActionGroup=CreativeMoveToolEquipped)
+InputActionGroupContexts=(ActionName="CreativeQuickbarKey6", InputActionGroup=CreativeMoveToolEquipped)
+InputActionGroupContexts=(ActionName="CreativeQuickbarKey7", InputActionGroup=CreativeMoveToolEquipped)
+InputActionGroupContexts=(ActionName="CreativeQuickbarKey8", InputActionGroup=CreativeMoveToolEquipped)
; Group Contexts - Creative Move Tool - MoveObjectsFreely
+InputActionGroupContexts=(ActionName="CreativeMoveObjectsFreelyLetGo", InputActionGroup=CreativeMoveObjectsFreely)
+InputActionGroupContexts=(ActionName="CreativeMoveObjectsFreelyDuplicate", InputActionGroup=CreativeMoveObjectsFreely)
+InputActionGroupContexts=(ActionName="CreativeMoveObjectsFreelyDropToFloor", InputActionGroup=CreativeMoveObjectsFreely)
+InputActionGroupContexts=(ActionName="CreativeMoveObjectsFreelyRotateClockwise", InputActionGroup=CreativeMoveObjectsFreely)
+InputActionGroupContexts=(ActionName="CreativeMoveObjectsFreelyRotateCounterclockwise", InputActionGroup=CreativeMoveObjectsFreely)
+InputActionGroupContexts=(ActionName="CreativeMoveObjectsFreelySwitchAxis", InputActionGroup=CreativeMoveObjectsFreely)
+InputActionGroupContexts=(ActionName="CreativeMoveObjectsFreelyPush", InputActionGroup=CreativeMoveObjectsFreely)
+InputActionGroupContexts=(ActionName="CreativeMoveObjectsFreelyPull", InputActionGroup=CreativeMoveObjectsFreely)
+InputActionGroupContexts=(ActionName="CreativeMoveObjectsFreelyExit", InputActionGroup=CreativeMoveObjectsFreely)
+InputActionGroupContexts=(ActionName="CreativeMoveObjectsFreelyChangePrecisionLevel", InputActionGroup=CreativeMoveObjectsFreely)
+InputActionGroupContexts=(ActionName="CreativeMoveObjectsFreelyQuickbarClearFocusedSlot", InputActionGroup=CreativeMoveObjectsFreely)
; Group Contexts - Creative Move Tool - MoveBuildingsOnGrid
+InputActionGroupContexts=(ActionName="CreativeMoveBuildingsOnGridLetGo", InputActionGroup=CreativeMoveBuildingsOnGrid)
+InputActionGroupContexts=(ActionName="CreativeMoveBuildingsOnGridDuplicate", InputActionGroup=CreativeMoveBuildingsOnGrid)
+InputActionGroupContexts=(ActionName="CreativeMoveBuildingsOnGridRotateClockwise", InputActionGroup=CreativeMoveBuildingsOnGrid)
+InputActionGroupContexts=(ActionName="CreativeMoveBuildingsOnGridRotateCounterclockwise", InputActionGroup=CreativeMoveBuildingsOnGrid)
+InputActionGroupContexts=(ActionName="CreativeMoveBuildingsOnGridMirror", InputActionGroup=CreativeMoveBuildingsOnGrid)
+InputActionGroupContexts=(ActionName="CreativeMoveBuildingsOnGridExit", InputActionGroup=CreativeMoveBuildingsOnGrid)
+InputActionGroupContexts=(ActionName="CreativeMoveBuildingsOnGridChangePrecisionLevel", InputActionGroup=CreativeMoveBuildingsOnGrid)
; Group Contexts - Creative Island Panel
+InputActionGroupContexts=(ActionName="CreativeIslandPanelSupportAffiliate", InputActionGroup=CreativeIslandPanel)
+InputActionGroupContexts=(ActionName="CreativeIslandPanelStartMinigame", InputActionGroup=CreativeIslandPanel)
+InputActionGroupContexts=(ActionName="CreativeIslandPanelToggleDetails", InputActionGroup=CreativeIslandPanel)
+InputActionGroupContexts=(ActionName="CreativeToggleReady", InputActionGroup=CreativeIslandPanel)
; Group Contexts - Creative Flying
+InputActionGroupContexts=(ActionName="CreativeFlyUp", InputActionGroup=CreativeFlying)
+InputActionGroupContexts=(ActionName="CreativeFlyDown", InputActionGroup=CreativeFlying)
+InputActionGroupContexts=(ActionName="CreativeToggleGhost", InputActionGroup=CreativeFlying)
+InputActionGroupContexts=(ActionName="CreativeToggleHeatmap", InputActionGroup=CreativeFlying)
; Group Contexts - Creative Prop Selector - Equipped
+InputActionGroupContexts=(ActionName="PossessedPropPlace", InputActionGroup=PropSelectorEquipped)
+InputActionGroupContexts=(ActionName="PossessedPropCancel", InputActionGroup=PropSelectorEquipped)
+InputActionGroupContexts=(ActionName="PossessedPropMakeNoise", InputActionGroup=PropSelectorEquipped)

; Group Contexts - Battle Lab
+InputActionGroupContexts=(ActionName="BattleLabDevicePicker", InputActionGroup=BattleLab)
+InputActionGroupContexts=(ActionName="GamepadBattleLabDevicePicker", InputActionGroup=BattleLab)

; Action Groups Exempt From AllModes Check - Groups that are exempt from AllModes when checking if the input action is in the same group (see UFortPlayerInput::AreInputActionsInSameGroup).
+InputActionGroupExemptFromAllModesCheck=ShoppingCart
+InputActionGroupExemptFromAllModesCheck=ShoppingCartDriver
+InputActionGroupExemptFromAllModesCheck=ShoppingCartPassenger
+InputActionGroupExemptFromAllModesCheck=Cannon
+InputActionGroupExemptFromAllModesCheck=CannonDriver
+InputActionGroupExemptFromAllModesCheck=CannonPassenger
+InputActionGroupExemptFromAllModesCheck=GolfCart
+InputActionGroupExemptFromAllModesCheck=GolfCartDriver
+InputActionGroupExemptFromAllModesCheck=GolfCartPassenger
+InputActionGroupExemptFromAllModesCheck=QuadCrasher
+InputActionGroupExemptFromAllModesCheck=QuadCrasherDriver
+InputActionGroupExemptFromAllModesCheck=QuadCrasherPassenger
+InputActionGroupExemptFromAllModesCheck=Biplane
+InputActionGroupExemptFromAllModesCheck=BiplaneDriver
+InputActionGroupExemptFromAllModesCheck=BiplanePassenger
+InputActionGroupExemptFromAllModesCheck=Hamsterball
+InputActionGroupExemptFromAllModesCheck=Jackal
+InputActionGroupExemptFromAllModesCheck=Ostrich
+InputActionGroupExemptFromAllModesCheck=OstrichDriver
+InputActionGroupExemptFromAllModesCheck=OstrichPassenger
+InputActionGroupExemptFromAllModesCheck=Meatball
+InputActionGroupExemptFromAllModesCheck=MeatballDriver
+InputActionGroupExemptFromAllModesCheck=MeatballPassenger
+InputActionGroupExemptFromAllModesCheck=HoagieDriver
+InputActionGroupExemptFromAllModesCheck=MountedTurret
+InputActionGroupExemptFromAllModesCheck=FullscreenMap
+InputActionGroupExemptFromAllModesCheck=Spectating
+InputActionGroupExemptFromAllModesCheck=Picker
+InputActionGroupExemptFromAllModesCheck=CreativeAll
+InputActionGroupExemptFromAllModesCheck=CreativeMoveToolEquipped
+InputActionGroupExemptFromAllModesCheck=CreativeMoveObjectsFreely
+InputActionGroupExemptFromAllModesCheck=CreativeMoveBuildingsOnGrid
+InputActionGroupExemptFromAllModesCheck=CreativeFlying
+InputActionGroupExemptFromAllModesCheck=CreativeIslandPanel
+InputActionGroupExemptFromAllModesCheck=PropSelectorEquipped
+InputActionGroupExemptFromAllModesCheck=DBNOCarryStart
+InputActionGroupExemptFromAllModesCheck=DBNOCarryStop
+InputActionGroupExemptFromAllModesCheck=DBNOCarry
+InputActionGroupExemptFromAllModesCheck=InteractionStart
+InputActionGroupExemptFromAllModesCheck=InteractionStop
+InputActionGroupExemptFromAllModesCheck=BattleLab


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Adding input configs :
; 1) Add to the FortPlayerInputSettingsNames in this document
; 2) Name following the appropriate conventions and mode (ConfigD, ConfigE, etc. or ConfigD_Athena, etc.)
; 3) Ensure the new config has an input command representing each input row in the settings (UFortInputOptions::ConstructKeyBindList())
; 4) Ensure the new config works with the controller settings tab list
; 5) Keep keyboard/mouse config separate from gamepad configs.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CONFIG KBM (StW - Keyboard/Mouse)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ConfigKBM_Campaign FortPlayerInputSettings]
; Localized Strings - ConfigKBM_Campaign
FriendlyName=LOCTEXT("StandardConfiguration", "Keyboard/Mouse")

; Settings - ConfigKBM_Campaign
bBuildingPickerOnlyChoosesCategories=true
bWeaponPickerShowOnlySlottedItems=true
bTrapPickerUsesRadial=true
bRadialClosesOnRelease=true
NumActiveTrapSlots=1
bWeaponSlotsAreSharedWhenUsingGamepad=false
bEditModeUsableFromCombatMode=true
HoldInputTime=0.25
HoldCraftAmmoTime=0.75
bEnabledForCampaign=false
bEnabledForAthena=false

; Combat - ConfigKBM_Campaign
+ActionMappings=(ActionName="Fire", Key=LeftMouseButton)
+ActionMappings=(ActionName="Reload", Key=R)
+ActionMappings=(ActionName="Target", Key=RightMouseButton)
+ActionMappings=(ActionName="AutoRun", Key=Equals)
+ActionMappings=(ActionName="AutoRun", Key=NumLock)
+ActionMappings=(ActionName="Use", Key=E)

+ActionMappings=(ActionName="HotbarKey1", Key=F)
+ActionMappings=(ActionName="HotbarKey2", Key=One)
+ActionMappings=(ActionName="HotbarKey3", Key=Two)
+ActionMappings=(ActionName="HotbarKey4", Key=Three)
+ActionMappings=(ActionName="HotbarKey5", Key=F1)
+ActionMappings=(ActionName="HotbarKey6", Key=F2)
+ActionMappings=(ActionName="HotbarKey7", Key=Four)
+ActionMappings=(ActionName="HotbarKey8", Key=Five)
+ActionMappings=(ActionName="HotbarKey9", Key=Six)

+ActionMappings=(ActionName="SpotActor", Key=MiddleMouseButton)

; Direct play Emotes (not bound by default) - ConfigKBM_Campaign
+ActionMappings=(ActionName="LockerEmote1")
+ActionMappings=(ActionName="LockerEmote2")
+ActionMappings=(ActionName="LockerEmote3")
+ActionMappings=(ActionName="LockerEmote4")
+ActionMappings=(ActionName="LockerEmote5")
+ActionMappings=(ActionName="LockerEmote6")
+ActionMappings=(ActionName="ReplayLastEmote")

; Building Only - ConfigKBM_Campaign
+ActionMappings=(ActionName="BuildConfirm", Key=LeftMouseButton)
+ActionMappings=(ActionName="EditSelect", Key=LeftMouseButton)
+ActionMappings=(ActionName="RotatePrimitiveClockwise", Key=R)
+ActionMappings=(ActionName="BuildingEditReset", Key=RightMouseButton)
+ActionMappings=(ActionName="ChangeMaterial", Key=RightMouseButton)
+ActionMappings=(ActionName="SwitchToSelectedBuildingType", Key=P)

+ActionMappings=(ActionName="HotbarKeyF1", Key=Z)
+ActionMappings=(ActionName="HotbarKeyF1", Key=ThumbMouseButton2)
+ActionMappings=(ActionName="HotbarKeyF2", Key=X)
+ActionMappings=(ActionName="HotbarKeyF3", Key=C)
+ActionMappings=(ActionName="HotbarKeyF3", Key=ThumbMouseButton)
+ActionMappings=(ActionName="HotbarKeyF4", Key=V)
+ActionMappings=(ActionName="HotbarKeyF5", Key=Y)

; All Modes - ConfigKBM_Campaign
+ActionMappings=(ActionName="Jump", Key=SpaceBar)
+ActionMappings=(ActionName="Sprint", Key=LeftShift)
+ActionMappings=(ActionName="PerformBuildingImprovementInteraction", Key=H)
+ActionMappings=(ActionName="PerformBuildingEditInteraction", Key=G)
+ActionMappings=(ActionName="SwitchQuickbar", Key=Q)
+ActionMappings=(ActionName="TogglePickAxe", Key=L)
+ActionMappings=(ActionName="SlotUp", Key=MouseScrollDown)
+ActionMappings=(ActionName="SlotDown", Key=MouseScrollUp)
+ActionMappings=(ActionName="TrapPicker", Key=F3)

; Edit - ConfigKBM_Campaign
+ActionMappings=(ActionName="CompleteBuildingEditInteraction", Key=G)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Vehicle - ConfigKBM_Campaign

; Mounted Turret - ConfigKBM_Campaign
+ActionMappings=(ActionName="MountedTurretExit", Key=E)

; END VEHICLES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Death - ConfigKBM_Campaign
+ActionMappings=(ActionName="ResurrectHere", Key=LeftMouseButton)
+ActionMappings=(ActionName="RespawnAtStart", Key=RightMouseButton)

; Picker - ConfigKBM_Campaign
+ActionMappings=(ActionName="PickerConfirm", Key=LeftMouseButton)
+ActionMappings=(ActionName="PickerCancel", Key=RightMouseButton)
+ActionMappings=(ActionName="PickerCancel", Key=Escape)
; We shouldn't continue to add PickerCancel actions but instead set up the picker action to cancel on the PickerInputComponent.
+ActionMappings=(ActionName="PickerCancel", Key=N)
+ActionMappings=(ActionName="PickerCancel", Key=Y)

+ActionMappings=(ActionName="PickerOption1", Key=One)
+ActionMappings=(ActionName="PickerOption2", Key=Two)
+ActionMappings=(ActionName="PickerOption3", Key=Three)
+ActionMappings=(ActionName="PickerOption4", Key=Four)
+ActionMappings=(ActionName="PickerOption5", Key=Five)
+ActionMappings=(ActionName="PickerOption6", Key=Six)
+ActionMappings=(ActionName="PickerOption7", Key=Seven)
+ActionMappings=(ActionName="PickerOption8", Key=Eight)

+ActionMappings=(ActionName="PickerNextOption")
+ActionMappings=(ActionName="PickerPreviousOption")
+ActionMappings=(ActionName="PickerNextWheel", Key=MouseScrollUp)
+ActionMappings=(ActionName="PickerPreviousWheel", Key=MouseScrollDown)
+ActionMappings=(ActionName="FrontEndPickerNextWheel", Key=MouseScrollUp)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheel", Key=MouseScrollDown)
+ActionMappings=(ActionName="EndOfZonePickerConfirm", Key=LeftMouseButton)

; PickerNull hides inputs by ignoring them while the Picker is up
+ActionMappings=(ActionName="PickerNull", Key=E)
+ActionMappings=(ActionName="PickerNull", Key=F)
+ActionMappings=(ActionName="PickerNull", Key=G)
+ActionMappings=(ActionName="PickerNull", Key=R)
+ActionMappings=(ActionName="PickerNull", Key=V)
+ActionMappings=(ActionName="PickerNull", Key=Q)
+ActionMappings=(ActionName="PickerNull", Key=F1)
+ActionMappings=(ActionName="PickerNull", Key=F2)
+ActionMappings=(ActionName="PickerNull", Key=F3)
+ActionMappings=(ActionName="PickerNull", Key=F4)
+ActionMappings=(ActionName="PickerNull", Key=F5)
+ActionMappings=(ActionName="PickerNull", Key=F6)
+ActionMappings=(ActionName="PickerNull", Key=F7)
+ActionMappings=(ActionName="PickerNull", Key=MiddleMouseButton)

; Meta - ConfigKBM_Campaign
+ActionMappings=(ActionName="Chat", Key=Enter)
+ActionMappings=(ActionName="ChatWithSlash", Key=Slash)

+ActionMappings=(ActionName="ChatPicker", Key=F4)
+ActionMappings=(ActionName="EmotePicker", Key=B)
+ActionMappings=(ActionName="NotePicker", Key=N)

+ActionMappings=(ActionName="EscapeKey", Key=Escape)
+ActionMappings=(ActionName="EscapeKey", Key=F10)

+ActionMappings=(ActionName="ToggleInventory", Key=Tab)
+ActionMappings=(ActionName="ToggleInventory", Key=I)

+ActionMappings=(ActionName="ToggleFullScreenMap", Key=M)

+ActionMappings=(ActionName="MenuMoveLeft", Key=Left)
+ActionMappings=(ActionName="MenuMoveRight", Key=Right)
+ActionMappings=(ActionName="MenuMoveUp", Key=Up)
+ActionMappings=(ActionName="MenuMoveDown", Key=Down)
+ActionMappings=(ActionName="MenuSelectTile", Key=SpaceBar)

+ActionMappings=(ActionName="SkipCutscene", Key=SpaceBar)
+ActionMappings=(ActionName="SkipCutscene", Key=Escape)

+ActionMappings=(ActionName="ToggleCursorMode", Key=LeftAlt)
+ActionMappings=(ActionName="ToggleCursorMode", Key=RightAlt)

+ActionMappings=(ActionName="LobbyCameraZoomOut", Key=MouseScrollDown)
+ActionMappings=(ActionName="LobbyCameraZoomIn", Key=MouseScrollUp)

+ActionMappings=(ActionName="CycleHeroBackward",Key=NumPadFive)
+ActionMappings=(ActionName="CycleHeroForward",Key=NumPadSix)
+ActionMappings=(ActionName="SaveCurrentLocation",Key=NumPadEight)
+ActionMappings=(ActionName="TeleportToSavedLocation",Key=NumPadNine)

+ActionMappings=(ActionName="PushToTalk", Key=T)

+ActionMappings=(ActionName="SetMapCursor", Key=LeftMouseButton)
+ActionMappings=(ActionName="RemoveMapCursor_Mouse", Key=RightMouseButton)
+ActionMappings=(ActionName="Map_SwitchContext", Key=T)
+ActionMappings=(ActionName="Map_PinUnpinVisibility", Key=Y)

+ActionMappings=(ActionName="OpenVoteDialog", Key=J)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CONFIG KBM (Athena - Keyboard/Mouse)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ConfigKBM_Athena FortPlayerInputSettings]
; Localized Strings - ConfigKBM_Athena
FriendlyName=LOCTEXT("StandardConfiguration", "Keyboard/Mouse")

; Settings - ConfigKBM_Athena
bBuildingPickerOnlyChoosesCategories=true
bWeaponPickerShowOnlySlottedItems=true
bTrapPickerUsesRadial=true
bRadialClosesOnRelease=true
NumActiveTrapSlots=1
bWeaponSlotsAreSharedWhenUsingGamepad=false
bEditModeUsableFromCombatMode=true
HoldInputTime=0.25
HoldCraftAmmoTime=0.75
bEnabledForCampaign=false
bEnabledForAthena=false

; Combat - ConfigKBM_Athena
+ActionMappings=(ActionName="Fire", Key=LeftMouseButton)
+ActionMappings=(ActionName="Reload", Key=R)
+ActionMappings=(ActionName="Target", Key=RightMouseButton)
+ActionMappings=(ActionName="AutoRun", Key=Equals)
+ActionMappings=(ActionName="AutoRun", Key=NumLock)
+ActionMappings=(ActionName="Crouch", Key=LeftControl)
+ActionMappings=(ActionName="Use", Key=E)

+ActionMappings=(ActionName="HotbarKey1", Key=F)
+ActionMappings=(ActionName="HotbarKey2", Key=One)
+ActionMappings=(ActionName="HotbarKey3", Key=Two)
+ActionMappings=(ActionName="HotbarKey4", Key=Three)
+ActionMappings=(ActionName="HotbarKey5", Key=Four)
+ActionMappings=(ActionName="HotbarKey6", Key=Five)
+ActionMappings=(ActionName="HotbarKey7", Key=Invalid)
+ActionMappings=(ActionName="HotbarKey8", Key=Invalid)
+ActionMappings=(ActionName="HotbarKey9", Key=Invalid)

+ActionMappings=(ActionName="PlaceMapMarkerInWorld", Key=MiddleMouseButton)
+ActionMappings=(ActionName="PlaceEnemyMarkerInWorld")

; Direct play Emotes (not bound by default) - ConfigKBM_Athena
+ActionMappings=(ActionName="LockerEmote1")
+ActionMappings=(ActionName="LockerEmote2")
+ActionMappings=(ActionName="LockerEmote3")
+ActionMappings=(ActionName="LockerEmote4")
+ActionMappings=(ActionName="LockerEmote5")
+ActionMappings=(ActionName="LockerEmote6")
+ActionMappings=(ActionName="ReplayLastEmote")

; Building Only - ConfigKBM_Athena
+ActionMappings=(ActionName="BuildConfirm", Key=LeftMouseButton)
+ActionMappings=(ActionName="EditSelect", Key=LeftMouseButton)
+ActionMappings=(ActionName="RotatePrimitiveClockwise", Key=R)
+ActionMappings=(ActionName="BuildingEditReset", Key=RightMouseButton)
+ActionMappings=(ActionName="ChangeMaterial", Key=RightMouseButton)
+ActionMappings=(ActionName="CrouchWhileBuilding", Key=LeftControl)

+ActionMappings=(ActionName="HotbarKeyF1", Key=Z)
+ActionMappings=(ActionName="HotbarKeyF1", Key=ThumbMouseButton2)
+ActionMappings=(ActionName="HotbarKeyF2", Key=X)
+ActionMappings=(ActionName="HotbarKeyF3", Key=C)
+ActionMappings=(ActionName="HotbarKeyF3", Key=ThumbMouseButton)
+ActionMappings=(ActionName="HotbarKeyF4", Key=V)
+ActionMappings=(ActionName="HotbarKeyF5", Key=Y)

; All Modes - ConfigKBM_Athena
+ActionMappings=(ActionName="Jump", Key=SpaceBar)
+ActionMappings=(ActionName="Sprint", Key=LeftShift)
+ActionMappings=(ActionName="PerformBuildingImprovementInteraction", Key=H)
+ActionMappings=(ActionName="PerformBuildingEditInteraction", Key=G)
+ActionMappings=(ActionName="SwitchQuickbar", Key=Q)
+ActionMappings=(ActionName="TogglePickAxe", Key=L)
+ActionMappings=(ActionName="SlotUp", Key=MouseScrollDown)
+ActionMappings=(ActionName="SlotDown", Key=MouseScrollUp)
+ActionMappings=(ActionName="TrapPicker", Key=F3)

; Edit - ConfigKBM_Athena
+ActionMappings=(ActionName="CompleteBuildingEditInteraction", Key=G)
+ActionMappings=(ActionName="CrouchWhileEditing", Key=LeftControl)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Vehicle - ConfigKBM_Athena

; Shopping Cart - ConfigKBM_Athena
+ActionMappings=(ActionName="ShoppingCartCoast", Key=SpaceBar)
+ActionMappings=(ActionName="ShoppingCartExit", Key=E)
+ActionMappings=(ActionName="ShoppingCartUseOrExit", Key=E)
+ActionMappings=(ActionName="ShoppingCartChangeSeat", Key=LeftControl)

; Ship Cannon - ConfigKBM_Athena
+ActionMappings=(ActionName="CannonCoast", Key=SpaceBar)
+ActionMappings=(ActionName="CannonShoot", Key=LeftMouseButton)
+ActionMappings=(ActionName="CannonExit", Key=E)
+ActionMappings=(ActionName="CannonUseOrExit", Key=E)
+ActionMappings=(ActionName="CannonChangeSeat", Key=LeftControl)

; Golf Cart - ConfigKBM_Athena
+ActionMappings=(ActionName="GolfCartEBrake", Key=SpaceBar)
+ActionMappings=(ActionName="GolfCartExit", Key=E)
+ActionMappings=(ActionName="GolfCartUseOrExit", Key=E)
+ActionMappings=(ActionName="GolfCartChangeSeat", Key=LeftControl)
+ActionMappings=(ActionName="GolfCartHonk", Key=RightMouseButton)

; Quad Crasher - ConfigKBM_Athena
+ActionMappings=(ActionName="QuadCrasherBoost", Key=SpaceBar)
+ActionMappings=(ActionName="QuadCrasherExit", Key=E)
+ActionMappings=(ActionName="QuadCrasherUseOrExit", Key=E)
+ActionMappings=(ActionName="QuadCrasherChangeSeat", Key=LeftControl)
+ActionMappings=(ActionName="QuadCrasherHonk", Key=RightMouseButton)

; Biplane - ConfigKBM_Athena
+ActionMappings=(ActionName="BiplaneBoost", Key=SpaceBar)
+ActionMappings=(ActionName="BiplaneShoot", Key=LeftMouseButton)
+ActionMappings=(ActionName="BiplaneFreelook", Key=RightMouseButton)
+ActionMappings=(ActionName="BiplaneRollRight", Key=C)
+ActionMappings=(ActionName="BiplaneRollLeft", Key=Z)
+ActionMappings=(ActionName="BiplaneRollInvert", Key=X)
+ActionMappings=(ActionName="BiplaneStartEngine", Key=W)
+ActionMappings=(ActionName="BiplaneStartEngine", Key=SpaceBar)
+ActionMappings=(ActionName="BiplaneStopEngine", Key=LeftShift)
+ActionMappings=(ActionName="BiplaneTaxiBackwards", Key=S)
+ActionMappings=(ActionName="BiplaneTaxiBackwards", Key=LeftShift)
+ActionMappings=(ActionName="BiplaneExit", Key=E)
+ActionMappings=(ActionName="BiplaneUseOrExit", Key=E)
+ActionMappings=(ActionName="BiplaneChangeSeat", Key=LeftControl)

; Hamsterball - ConfigKBM_Athena
+ActionMappings=(ActionName="HamsterballBoost", Key=SpaceBar)
+ActionMappings=(ActionName="HamsterballShoot", Key=LeftMouseButton)
+ActionMappings=(ActionName="HamsterballRetract", Key=RightMouseButton)
+ActionMappings=(ActionName="HamsterballExit", Key=E)

; Jackal - ConfigKBM_Athena
+ActionMappings=(ActionName="JackalBoost", Key=LeftShift)
+ActionMappings=(ActionName="JackalUseOrExit", Key=E)
+ActionMappings=(ActionName="JackalJump", Key=SpaceBar)

; Mounted Turret - ConfigKBM_Athena
+ActionMappings=(ActionName="MountedTurretExit", Key=E)

; Ostrich - ConfigKBM_Athena
+ActionMappings=(ActionName="OstrichBoost", Key=LeftShift)
+ActionMappings=(ActionName="OstrichJump", Key=SpaceBar)
+ActionMappings=(ActionName="OstrichStomp", Key=LeftMouseButton)
+ActionMappings=(ActionName="OstrichHonk", Key=RightMouseButton)
+ActionMappings=(ActionName="OstrichSelfDestructDriver", Key=Delete)
+ActionMappings=(ActionName="OstrichExitDriver", Key=E)
+ActionMappings=(ActionName="OstrichShotgun", Key=LeftMouseButton)
+ActionMappings=(ActionName="OstrichMissiles", Key=RightMouseButton)
+ActionMappings=(ActionName="OstrichShieldBoost", Key=Q)
+ActionMappings=(ActionName="OstrichSelfDestructPassenger", Key=Delete)
+ActionMappings=(ActionName="OstrichExitPassenger", Key=E)
+ActionMappings=(ActionName="OstrichChangeSeat", Key=LeftControl)

; Meatball - ConfigKBM_Athena
+ActionMappings=(ActionName="MeatballBoost", Key=LeftShift)
+ActionMappings=(ActionName="MeatballShoot", Key=LeftMouseButton)
+ActionMappings=(ActionName="MeatballTargeting", Key=RightMouseButton)
+ActionMappings=(ActionName="MeatballExit", Key=E)
+ActionMappings=(ActionName="MeatballUseOrExit", Key=E)
+ActionMappings=(ActionName="MeatballChangeSeat", Key=LeftControl)

; Hoagie - ConfigKBM_Athena
+ActionMappings=(ActionName="HoagieExit", Key=E)
+ActionMappings=(ActionName="HoagieChangeSeats", Key=LeftControl)
+ActionMappings=(ActionName="HoagieBoost", Key=LeftShift)
+ActionMappings=(ActionName="HoagieMoveDownButton", Key=RightMouseButton)
+ActionMappings=(ActionName="HoagieMoveUpButton", Key=LeftMouseButton)
+ActionMappings=(ActionName="HoagieHonk", Key=B)

; END VEHICLES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; DBNO Carry - ConfigKBM_Athena
+ActionMappings=(ActionName="DBNOCarryHoist", Key=F)
+ActionMappings=(ActionName="DBNOCarryThrow", Key=LeftMouseButton)
+ActionMappings=(ActionName="DBNOCarryDrop", Key=F)

; Interaction - ConfigKBM_Athena
+ActionMappings=(ActionName="AlternateInteractCarry", Key=F)
+ActionMappings=(ActionName="AlternateInteractPlace", Key=F)

; Creative Move Tool - CreativeAll - ConfigKBM_Athena
+ActionMappings=(ActionName="ToggleCreativePhone", Key=Tilde)
+ActionMappings=(ActionName="ToggleCreativePhone", Key=P)
+ActionMappings=(ActionName="ToggleQuickMenu", Key=B)
; Creative Move Tool - Equipped - ConfigKBM_Athena
+ActionMappings=(ActionName="CreativeMoveToolEquippedGrabOrLetGo", Key=RightMouseButton)
+ActionMappings=(ActionName="CreativeMoveToolEquippedCopyGrabOrDuplicate", Key=LeftMouseButton)
+ActionMappings=(ActionName="PossessPropActivate", Key=LeftMouseButton)
+ActionMappings=(ActionName="CreativeMoveToolEquippedDelete", Key=X)
+ActionMappings=(ActionName="CreativeMoveToolMultiSelect", Key=R)
+ActionMappings=(ActionName="CreativeMoveToolClearMultiSelect", Key=)
+ActionMappings=(ActionName="CreativeQuickbarKey1", Key=One)
+ActionMappings=(ActionName="CreativeQuickbarKey2", Key=Two)
+ActionMappings=(ActionName="CreativeQuickbarKey3", Key=Three)
+ActionMappings=(ActionName="CreativeQuickbarKey4", Key=Four)
+ActionMappings=(ActionName="CreativeQuickbarKey5", Key=Five)
+ActionMappings=(ActionName="CreativeQuickbarKey6", Key=Six)
+ActionMappings=(ActionName="CreativeQuickbarKey7", Key=Seven)
+ActionMappings=(ActionName="CreativeQuickbarKey8", Key=Eight)
; Creative Move Tool - MoveObjectsFreely - ConfigKBM_Athena
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDuplicate", Key=LeftMouseButton)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDropToFloor", Key=G)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateClockwise", Key=R)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateCounterclockwise", Key=E)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelySwitchAxis", Key=Tab)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPush", Key=F)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPull", Key=C)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyExit", Key=RightMouseButton)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyExit", Key=Escape)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyChangePrecisionLevel", Key=V)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyQuickbarClearFocusedSlot", Key=X)
; Creative Move Tool - MoveBuildingsOnGrid - ConfigKBM_Athena
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridDuplicate", Key=LeftMouseButton)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateClockwise", Key=R)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateCounterclockwise", Key=Z)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridMirror", Key=M)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridExit", Key=RightMouseButton)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridExit", Key=Escape)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridChangePrecisionLevel", Key=V)
; Creative Flying - ConfigKBM_Athena
+ActionMappings=(ActionName="CreativeFlyUp", Key=LeftShift)
+ActionMappings=(ActionName="CreativeFlyDown", Key=LeftControl)
+ActionMappings=(ActionName="CreativeToggleGhost", Key=N)
+ActionMappings=(ActionName="CreativeToggleHeatmap", Key=T)
; Creative Island Panel - ConfigKBM_Athena
+ActionMappings=(ActionName="CreativeIslandPanelSupportAffiliate", Key=Q)
+ActionMappings=(ActionName="CreativeIslandPanelStartMinigame", Key=E)
+ActionMappings=(ActionName="CreativeIslandPanelToggleDetails", Key=H)
+ActionMappings=(ActionName="CreativeToggleReady", Key=R)
; Creative Prop Selector - ConfigKBM_Athena
+ActionMappings=(ActionName="PossessedPropPlace", Key=LeftControl)
+ActionMappings=(ActionName="PossessedPropCancel", Key=RightMouseButton)
+ActionMappings=(ActionName="PossessedPropMakeNoise", Key=R)

; Picker - ConfigKBM_Athena
+ActionMappings=(ActionName="PickerConfirm", Key=LeftMouseButton)
+ActionMappings=(ActionName="PickerCancel", Key=RightMouseButton)
+ActionMappings=(ActionName="PickerCancel", Key=Escape)
; We shouldn't continue to add PickerCancel actions but instead set up the picker action to cancel on the PickerInputComponent.
+ActionMappings=(ActionName="PickerCancel", Key=Y)

+ActionMappings=(ActionName="PickerOption1", Key=One)
+ActionMappings=(ActionName="PickerOption2", Key=Two)
+ActionMappings=(ActionName="PickerOption3", Key=Three)
+ActionMappings=(ActionName="PickerOption4", Key=Four)
+ActionMappings=(ActionName="PickerOption5", Key=Five)
+ActionMappings=(ActionName="PickerOption6", Key=Six)
+ActionMappings=(ActionName="PickerOption7", Key=Seven)
+ActionMappings=(ActionName="PickerOption8", Key=Eight)

+ActionMappings=(ActionName="PickerNextOption")
+ActionMappings=(ActionName="PickerPreviousOption")
+ActionMappings=(ActionName="PickerNextWheel", Key=MouseScrollUp)
+ActionMappings=(ActionName="PickerPreviousWheel", Key=MouseScrollDown)
+ActionMappings=(ActionName="FrontEndPickerNextWheel", Key=MouseScrollUp)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheel", Key=MouseScrollDown)

; PickerNull hides inputs by ignoring them while the Picker is up
+ActionMappings=(ActionName="PickerNull", Key=E)
+ActionMappings=(ActionName="PickerNull", Key=F)
+ActionMappings=(ActionName="PickerNull", Key=G)
+ActionMappings=(ActionName="PickerNull", Key=R)
+ActionMappings=(ActionName="PickerNull", Key=V)
+ActionMappings=(ActionName="PickerNull", Key=Q)
+ActionMappings=(ActionName="PickerNull", Key=F1)
+ActionMappings=(ActionName="PickerNull", Key=F2)
+ActionMappings=(ActionName="PickerNull", Key=F3)
+ActionMappings=(ActionName="PickerNull", Key=F4)
+ActionMappings=(ActionName="PickerNull", Key=F5)
+ActionMappings=(ActionName="PickerNull", Key=F6)
+ActionMappings=(ActionName="PickerNull", Key=F7)
+ActionMappings=(ActionName="PickerNull", Key=MiddleMouseButton)

; Replay - ConfigKBM_Athena
+ActionMappings=(ActionName="HoverDrone_IncreaseSpeed", Key=Equals)
+ActionMappings=(ActionName="HoverDrone_DecreaseSpeed", Key=Hyphen)
+ActionMappings=(ActionName="ToggleSpectatorHUD",Key=H)
+ActionMappings=(ActionName="TogglePauseState",Key=SpaceBar)
+ActionMappings=(ActionName="ReplaySpeedIncrease",Key=G)
+ActionMappings=(ActionName="ReplaySpeedDecrease",bShift=True, Key=G)
+ActionMappings=(ActionName="ToggleReplaySequencer",Key=U)
+ActionMappings=(ActionName="NextSpectatorCameraMode",Key=C)
+ActionMappings=(ActionName="PrevSpectatorCameraMode",bShift=True,Key=C)
+ActionMappings=(ActionName="ArmProjectileCam", bShift=True,Key=P)
+ActionMappings=(ActionName="SpectatorSpecialAction", Key=B)
+ActionMappings=(ActionName="SpectateNextPlayer",Key=Period)
+ActionMappings=(ActionName="SpectatePrevPlayer",Key=Comma)
+ActionMappings=(ActionName="SpectateNextSquad",Key=O)
+ActionMappings=(ActionName="SpectatePrevSquad",Key=I)
+ActionMappings=(ActionName="SpectateNextTeam",Key=L)
+ActionMappings=(ActionName="SpectatePrevTeam",Key=K)
+ActionMappings=(ActionName="SpectateLastAttacker",Key=P)
+ActionMappings=(ActionName="ResetSpectatorCameraMode",Key=R)
+ActionMappings=(ActionName="HoverDrone_FaceLocationToggle",Key=F)
+ActionMappings=(ActionName="HoverDrone_FaceLocationDisable",bShift=True,Key=F)
+ActionMappings=(ActionName="TriggerLightningFlash",bShift=True,Key=L)
+ActionMappings=(ActionName="NextArenaCam",bShift=True,Key=K)
+ActionMappings=(ActionName="PrevArenaCam",bShift=True,Key=J)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey0",bCtrl=True,Key=NumPadZero)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey1",bCtrl=True,Key=NumPadOne)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey2",bCtrl=True,Key=NumPadTwo)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey3",bCtrl=True,Key=NumPadThree)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey4",bCtrl=True,Key=NumPadFour)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey5",bCtrl=True,Key=NumPadFive)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey6",bCtrl=True,Key=NumPadSix)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey7",bCtrl=True,Key=NumPadSeven)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey8",bCtrl=True,Key=NumPadEight)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey9",bCtrl=True,Key=NumPadNine)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey0",bCtrl=True,bAlt=True,Key=NumPadZero)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey1",bCtrl=True,bAlt=True,Key=NumPadOne)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey2",bCtrl=True,bAlt=True,Key=NumPadTwo)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey3",bCtrl=True,bAlt=True,Key=NumPadThree)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey4",bCtrl=True,bAlt=True,Key=NumPadFour)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey5",bCtrl=True,bAlt=True,Key=NumPadFive)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey6",bCtrl=True,bAlt=True,Key=NumPadSix)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey7",bCtrl=True,bAlt=True,Key=NumPadSeven)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey8",bCtrl=True,bAlt=True,Key=NumPadEight)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey9",bCtrl=True,bAlt=True,Key=NumPadNine)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey0",Key=NumPadZero)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey1",Key=NumPadOne)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey2",Key=NumPadTwo)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey3",Key=NumPadThree)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey4",Key=NumPadFour)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey5",Key=NumPadFive)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey6",Key=NumPadSix)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey7",Key=NumPadSeven)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey8",Key=NumPadEight)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey9",Key=NumPadNine)
+ActionMappings=(ActionName="SpectatorCameraMode0",Key=One)
+ActionMappings=(ActionName="SpectatorCameraMode1",Key=Two)
+ActionMappings=(ActionName="SpectatorCameraMode2",Key=Three)
+ActionMappings=(ActionName="SpectatorCameraMode3",Key=Four)
+ActionMappings=(ActionName="SpectatorCameraMode4",Key=Five)
+ActionMappings=(ActionName="SpectatorCameraMode5",Key=Six)
+ActionMappings=(ActionName="SpectatorCameraMode6",Key=Seven)
+ActionMappings=(ActionName="SpectatorCameraMode7",Key=Eight)
+ActionMappings=(ActionName="SpectatorCameraMode8",Key=Nine)
+ActionMappings=(ActionName="SpectatorCameraMode9",Key=Zero)
+ActionMappings=(ActionName="SpectatorZoomOut",Key=LeftMouseButton)
;+ActionMappings=(ActionName="ToggleBroadcastOffAirOverlay",bShift=True,Key=Backspace)
+ActionMappings=(ActionName="ToggleBroadcastNetUI",bCtrl=True,Key=Backspace)
+ActionMappings=(ActionName="SortEventMatchInfoByEliminations",bShift=True,Key=One)
+ActionMappings=(ActionName="SortEventMatchInfoByPlace",bShift=True,Key=Two)
+ActionMappings=(ActionName="ToggleSquadIdsOnEventMatchScoreboard",bShift=True,Key=Three)
+ActionMappings=(ActionName="ToggleScoreOnEventMatchScoreboard",bShift=True,Key=Four)
+ActionMappings=(ActionName="SortEventMatchInfoByScore",bShift=True,Key=Five)
+ActionMappings=(ActionName="ToggleEventMatchScoreboardGroupByTeam",bShift=True,Key=Six)
; Axis Mappings aren't picked up correctly by keybind widgets, so as a workaround we have UI specific action bindings
+ActionMappings=(ActionName="ReplayUIIncreaseDistance",Key=E)
+ActionMappings=(ActionName="ReplayUIDecreaseDistance",Key=Q)
+ActionMappings=(ActionName="BroadcastToggleSquadIds",Key=LeftAlt)
; BattleMap
+ActionMappings=(ActionName="BattleMapToggleShowAllSquadMembers",bCtrl=True,bAlt=True,Key=S)
+ActionMappings=(ActionName="BattleMapToggleShowNearbyChests",bCtrl=True,bAlt=True,Key=D)


; Meta - ConfigKBM_Athena
+ActionMappings=(ActionName="Chat", Key=Enter)
+ActionMappings=(ActionName="ChatWithSlash", Key=Slash)

+ActionMappings=(ActionName="SquadQuickChatPicker", Key=F4)
+ActionMappings=(ActionName="BattleLabDevicePicker", Key=F4)
+ActionMappings=(ActionName="EmotePicker", Key=B)

+ActionMappings=(ActionName="EscapeKey", Key=Escape)
+ActionMappings=(ActionName="EscapeKey", Key=F10)

+ActionMappings=(ActionName="ToggleInventory", Key=Tab)
+ActionMappings=(ActionName="ToggleInventory", Key=I)

+ActionMappings=(ActionName="ToggleFullScreenMap", Key=M)

+ActionMappings=(ActionName="MenuMoveLeft", Key=Left)
+ActionMappings=(ActionName="MenuMoveRight", Key=Right)
+ActionMappings=(ActionName="MenuMoveUp", Key=Up)
+ActionMappings=(ActionName="MenuMoveDown", Key=Down)
+ActionMappings=(ActionName="MenuSelectTile", Key=SpaceBar)

+ActionMappings=(ActionName="SkipCutscene", Key=SpaceBar)
+ActionMappings=(ActionName="SkipCutscene", Key=Escape)

+ActionMappings=(ActionName="ToggleCursorMode", Key=LeftAlt)
+ActionMappings=(ActionName="ToggleCursorMode", Key=RightAlt)

+ActionMappings=(ActionName="LobbyCameraZoomOut", Key=MouseScrollDown)
+ActionMappings=(ActionName="LobbyCameraZoomIn", Key=MouseScrollUp)

+ActionMappings=(ActionName="CycleHeroBackward",Key=NumPadFive)
+ActionMappings=(ActionName="CycleHeroForward",Key=NumPadSix)
+ActionMappings=(ActionName="SaveCurrentLocation",Key=NumPadEight)
+ActionMappings=(ActionName="TeleportToSavedLocation",Key=NumPadNine)

+ActionMappings=(ActionName="PushToTalk", Key=T)

+ActionMappings=(ActionName="SetMapCursor", Key=LeftMouseButton)
+ActionMappings=(ActionName="RemoveMapCursor_Mouse", Key=RightMouseButton)
+ActionMappings=(ActionName="Map_SwitchContext", Key=T)
+ActionMappings=(ActionName="Map_PinUnpinVisibility", Key=Y)

+ActionMappings=(ActionName="OpenVoteDialog", Key=J)
+ActionMappings=(ActionName="GameChannelRecommendationHold", Key=E)
+ActionMappings=(ActionName="SubscriptionNudgeHold", Key=E)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CONFIG KBM RESET TO DEFAULTS (StW - Keyboard/Mouse)
; This should be an exact copy of ConfigKBM so we can allow reset to default.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ConfigKBMResetToDefault_Campaign FortPlayerInputSettings]
; Localized Strings - ConfigKBMResetToDefault_Campaign
FriendlyName=LOCTEXT("StandardConfiguration", "Standard (Default)")
Description=LOCTEXT("ConfigKBMResetToDefault_CampaignDescription", "Default controls with building buttons below the movement keys.")
SubDescription=LOCTEXT("ConfigKBMResetToDefault_CampaignSubDescription", "(This is the default control set)")

; Settings - ConfigKBMResetToDefault_Campaign
bBuildingPickerOnlyChoosesCategories=true
bWeaponPickerShowOnlySlottedItems=true
bTrapPickerUsesRadial=true
bRadialClosesOnRelease=true
NumActiveTrapSlots=1
bWeaponSlotsAreSharedWhenUsingGamepad=false
bEditModeUsableFromCombatMode=true
HoldInputTime=0.25
HoldCraftAmmoTime=0.75
bEnabledForCampaign=false
bEnabledForAthena=false

; Combat - ConfigKBMResetToDefault_Campaign
+ActionMappings=(ActionName="Fire", Key=LeftMouseButton)
+ActionMappings=(ActionName="Reload", Key=R)
+ActionMappings=(ActionName="Target", Key=RightMouseButton)
+ActionMappings=(ActionName="AutoRun", Key=Equals)
+ActionMappings=(ActionName="AutoRun", Key=NumLock)
+ActionMappings=(ActionName="Use", Key=E)

+ActionMappings=(ActionName="HotbarKey1", Key=)
+ActionMappings=(ActionName="HotbarKey2", Key=One)
+ActionMappings=(ActionName="HotbarKey3", Key=Two)
+ActionMappings=(ActionName="HotbarKey4", Key=Three)
+ActionMappings=(ActionName="HotbarKey5", Key=F1)
+ActionMappings=(ActionName="HotbarKey6", Key=F2)
+ActionMappings=(ActionName="HotbarKey7", Key=Four)
+ActionMappings=(ActionName="HotbarKey8", Key=Five)
+ActionMappings=(ActionName="HotbarKey9", Key=Six)

+ActionMappings=(ActionName="SpotActor", Key=MiddleMouseButton)

; Direct play Emotes (not bound by default) - ConfigKBMResetToDefault_Campaign
+ActionMappings=(ActionName="LockerEmote1")
+ActionMappings=(ActionName="LockerEmote2")
+ActionMappings=(ActionName="LockerEmote3")
+ActionMappings=(ActionName="LockerEmote4")
+ActionMappings=(ActionName="LockerEmote5")
+ActionMappings=(ActionName="LockerEmote6")
+ActionMappings=(ActionName="ReplayLastEmote")

; Building Only - ConfigKBMResetToDefault_Campaign
+ActionMappings=(ActionName="BuildConfirm", Key=LeftMouseButton)
+ActionMappings=(ActionName="EditSelect", Key=LeftMouseButton)
+ActionMappings=(ActionName="RotatePrimitiveClockwise", Key=R)
+ActionMappings=(ActionName="BuildingEditReset", Key=RightMouseButton)
+ActionMappings=(ActionName="ChangeMaterial", Key=RightMouseButton)
+ActionMappings=(ActionName="SwitchToSelectedBuildingType", Key=P)

+ActionMappings=(ActionName="HotbarKeyF1", Key=Z)
+ActionMappings=(ActionName="HotbarKeyF1", Key=ThumbMouseButton2)
+ActionMappings=(ActionName="HotbarKeyF2", Key=X)
+ActionMappings=(ActionName="HotbarKeyF3", Key=C)
+ActionMappings=(ActionName="HotbarKeyF3", Key=ThumbMouseButton)
+ActionMappings=(ActionName="HotbarKeyF4", Key=V)
+ActionMappings=(ActionName="HotbarKeyF5", Key=Y)

; All Modes - ConfigKBMResetToDefault_Campaign
+ActionMappings=(ActionName="Jump", Key=SpaceBar)
+ActionMappings=(ActionName="Sprint", Key=LeftShift)
+ActionMappings=(ActionName="PerformBuildingImprovementInteraction", Key=H)
+ActionMappings=(ActionName="PerformBuildingEditInteraction", Key=G)
+ActionMappings=(ActionName="SwitchQuickbar", Key=Q)
+ActionMappings=(ActionName="TogglePickAxe", Key=F)
+ActionMappings=(ActionName="SlotUp", Key=MouseScrollDown)
+ActionMappings=(ActionName="SlotDown", Key=MouseScrollUp)
+ActionMappings=(ActionName="TrapPicker", Key=F3)

; Edit - ConfigKBMResetToDefault_Campaign
+ActionMappings=(ActionName="CompleteBuildingEditInteraction", Key=G)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Vehicle - ConfigKBMResetToDefault_Campaign

; Mounted Turret - ConfigKBMResetToDefault_Campaign
+ActionMappings=(ActionName="MountedTurretExit", Key=E)

; END VEHICLES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Death - ConfigKBMResetToDefault_Campaign
+ActionMappings=(ActionName="ResurrectHere", Key=LeftMouseButton)
+ActionMappings=(ActionName="RespawnAtStart", Key=RightMouseButton)

; Picker - ConfigKBMResetToDefault_Campaign
+ActionMappings=(ActionName="PickerConfirm", Key=LeftMouseButton)
+ActionMappings=(ActionName="PickerCancel", Key=RightMouseButton)
+ActionMappings=(ActionName="PickerCancel", Key=Escape)
; We shouldn't continue to add PickerCancel actions but instead set up the picker action to cancel on the PickerInputComponent.
+ActionMappings=(ActionName="PickerCancel", Key=N)
+ActionMappings=(ActionName="PickerCancel", Key=Y)

+ActionMappings=(ActionName="PickerOption1", Key=One)
+ActionMappings=(ActionName="PickerOption2", Key=Two)
+ActionMappings=(ActionName="PickerOption3", Key=Three)
+ActionMappings=(ActionName="PickerOption4", Key=Four)
+ActionMappings=(ActionName="PickerOption5", Key=Five)
+ActionMappings=(ActionName="PickerOption6", Key=Six)
+ActionMappings=(ActionName="PickerOption7", Key=Seven)
+ActionMappings=(ActionName="PickerOption8", Key=Eight)

+ActionMappings=(ActionName="PickerNextOption")
+ActionMappings=(ActionName="PickerPreviousOption")
+ActionMappings=(ActionName="PickerNextWheel", Key=MouseScrollUp)
+ActionMappings=(ActionName="PickerPreviousWheel", Key=MouseScrollDown)
+ActionMappings=(ActionName="FrontEndPickerNextWheel", Key=MouseScrollUp)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheel", Key=MouseScrollDown)
+ActionMappings=(ActionName="EndOfZonePickerConfirm", Key=LeftMouseButton)

; PickerNull hides inputs by ignoring them while the Picker is up
+ActionMappings=(ActionName="PickerNull", Key=E)
+ActionMappings=(ActionName="PickerNull", Key=F)
+ActionMappings=(ActionName="PickerNull", Key=G)
+ActionMappings=(ActionName="PickerNull", Key=R)
+ActionMappings=(ActionName="PickerNull", Key=V)
+ActionMappings=(ActionName="PickerNull", Key=Q)
+ActionMappings=(ActionName="PickerNull", Key=F1)
+ActionMappings=(ActionName="PickerNull", Key=F2)
+ActionMappings=(ActionName="PickerNull", Key=F3)
+ActionMappings=(ActionName="PickerNull", Key=F4)
+ActionMappings=(ActionName="PickerNull", Key=F5)
+ActionMappings=(ActionName="PickerNull", Key=F6)
+ActionMappings=(ActionName="PickerNull", Key=F7)
+ActionMappings=(ActionName="PickerNull", Key=MiddleMouseButton)

; Meta - ConfigKBMResetToDefault_Campaign
+ActionMappings=(ActionName="Chat", Key=Enter)
+ActionMappings=(ActionName="ChatWithSlash", Key=Slash)

+ActionMappings=(ActionName="ChatPicker", Key=F4)
+ActionMappings=(ActionName="EmotePicker", Key=B)
+ActionMappings=(ActionName="NotePicker", Key=N)

+ActionMappings=(ActionName="EscapeKey", Key=Escape)
+ActionMappings=(ActionName="EscapeKey", Key=F10)

+ActionMappings=(ActionName="ToggleInventory", Key=Tab)
+ActionMappings=(ActionName="ToggleInventory", Key=I)

+ActionMappings=(ActionName="ToggleFullScreenMap", Key=M)

+ActionMappings=(ActionName="MenuMoveLeft", Key=Left)
+ActionMappings=(ActionName="MenuMoveRight", Key=Right)
+ActionMappings=(ActionName="MenuMoveUp", Key=Up)
+ActionMappings=(ActionName="MenuMoveDown", Key=Down)
+ActionMappings=(ActionName="MenuSelectTile", Key=SpaceBar)

+ActionMappings=(ActionName="SkipCutscene", Key=SpaceBar)
+ActionMappings=(ActionName="SkipCutscene", Key=Escape)

+ActionMappings=(ActionName="ToggleCursorMode", Key=LeftAlt)
+ActionMappings=(ActionName="ToggleCursorMode", Key=RightAlt)

+ActionMappings=(ActionName="LobbyCameraZoomOut", Key=MouseScrollDown)
+ActionMappings=(ActionName="LobbyCameraZoomIn", Key=MouseScrollUp)

+ActionMappings=(ActionName="CycleHeroBackward",Key=NumPadFive)
+ActionMappings=(ActionName="CycleHeroForward",Key=NumPadSix)
+ActionMappings=(ActionName="SaveCurrentLocation",Key=NumPadEight)
+ActionMappings=(ActionName="TeleportToSavedLocation",Key=NumPadNine)

+ActionMappings=(ActionName="PushToTalk", Key=T)

+ActionMappings=(ActionName="SetMapCursor", Key=LeftMouseButton)
+ActionMappings=(ActionName="RemoveMapCursor_Mouse", Key=RightMouseButton)
+ActionMappings=(ActionName="Map_SwitchContext", Key=T)
+ActionMappings=(ActionName="Map_PinUnpinVisibility", Key=Y)

+ActionMappings=(ActionName="OpenVoteDialog", Key=J)



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CONFIG KBM RESET TO DEFAULTS (StW - Keyboard/Mouse)
; This should be an exact copy of ConfigKBM so we can allow reset to default.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ConfigKBMResetToDefault_Campaign2 FortPlayerInputSettings]
; Localized Strings - ConfigKBMResetToDefault_Campaign2
FriendlyName=LOCTEXT("StandardConfiguration", "Old School")
Description=LOCTEXT("ConfigKBMResetToDefault_Campaign2Description", "Original controls for Fortnite.")
SubDescription=LOCTEXT("ConfigKBMResetToDefault_Campaign2SubDescription", "")

; Settings - ConfigKBMResetToDefault_Campaign2
bBuildingPickerOnlyChoosesCategories=true
bWeaponPickerShowOnlySlottedItems=true
bTrapPickerUsesRadial=true
bRadialClosesOnRelease=true
NumActiveTrapSlots=1
bWeaponSlotsAreSharedWhenUsingGamepad=false
bEditModeUsableFromCombatMode=true
HoldInputTime=0.25
HoldCraftAmmoTime=0.75
bEnabledForCampaign=false
bEnabledForAthena=false

; Combat - ConfigKBMResetToDefault_Campaign2
+ActionMappings=(ActionName="Fire", Key=LeftMouseButton)
+ActionMappings=(ActionName="Reload", Key=R)
+ActionMappings=(ActionName="Target", Key=RightMouseButton)
+ActionMappings=(ActionName="AutoRun", Key=Equals)
+ActionMappings=(ActionName="AutoRun", Key=NumLock)
+ActionMappings=(ActionName="Use", Key=E)

+ActionMappings=(ActionName="HotbarKey1", Key=One)
+ActionMappings=(ActionName="HotbarKey2", Key=Two)
+ActionMappings=(ActionName="HotbarKey3", Key=Three)
+ActionMappings=(ActionName="HotbarKey4", Key=Four)
+ActionMappings=(ActionName="HotbarKey5", Key=Five)
+ActionMappings=(ActionName="HotbarKey6", Key=Six)
+ActionMappings=(ActionName="HotbarKey7", Key=Z)
+ActionMappings=(ActionName="HotbarKey8", Key=X)
+ActionMappings=(ActionName="HotbarKey9", Key=C)

+ActionMappings=(ActionName="SpotActor", Key=MiddleMouseButton)

; Direct play Emotes (not bound by default) - ConfigKBMResetToDefault_Campaign2
+ActionMappings=(ActionName="LockerEmote1")
+ActionMappings=(ActionName="LockerEmote2")
+ActionMappings=(ActionName="LockerEmote3")
+ActionMappings=(ActionName="LockerEmote4")
+ActionMappings=(ActionName="LockerEmote5")
+ActionMappings=(ActionName="LockerEmote6")
+ActionMappings=(ActionName="ReplayLastEmote")

; Building Only - ConfigKBMResetToDefault_Campaign2
+ActionMappings=(ActionName="BuildConfirm", Key=LeftMouseButton)
+ActionMappings=(ActionName="EditSelect", Key=LeftMouseButton)
+ActionMappings=(ActionName="RotatePrimitiveClockwise", Key=R)
+ActionMappings=(ActionName="BuildingEditReset", Key=RightMouseButton)
+ActionMappings=(ActionName="ChangeMaterial", Key=RightMouseButton)
+ActionMappings=(ActionName="SwitchToSelectedBuildingType", Key=P)

+ActionMappings=(ActionName="HotbarKeyF1", Key=F1)
+ActionMappings=(ActionName="HotbarKeyF2", Key=F2)
+ActionMappings=(ActionName="HotbarKeyF3", Key=F3)
+ActionMappings=(ActionName="HotbarKeyF4", Key=F4)
+ActionMappings=(ActionName="HotbarKeyF5", Key=F5)

; All Modes - ConfigKBMResetToDefault_Campaign2
+ActionMappings=(ActionName="Jump", Key=SpaceBar)
+ActionMappings=(ActionName="Sprint", Key=LeftShift)
+ActionMappings=(ActionName="PerformBuildingImprovementInteraction", Key=F)
+ActionMappings=(ActionName="PerformBuildingImprovementInteraction", Key=ThumbMouseButton2)
+ActionMappings=(ActionName="PerformBuildingEditInteraction", Key=G)
+ActionMappings=(ActionName="SwitchQuickbar", Key=Q)
+ActionMappings=(ActionName="SwitchQuickbar", Key=ThumbMouseButton)
+ActionMappings=(ActionName="TogglePickAxe", Key=L)
+ActionMappings=(ActionName="SlotUp", Key=MouseScrollDown)
+ActionMappings=(ActionName="SlotDown", Key=MouseScrollUp)
+ActionMappings=(ActionName="TrapPicker", Key=T)

; Edit - ConfigKBMResetToDefault_Campaign2
+ActionMappings=(ActionName="CompleteBuildingEditInteraction", Key=G)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Vehicle - ConfigKBMResetToDefault_Campaign2

; Mounted Turret - ConfigKBMResetToDefault_Campaign2
+ActionMappings=(ActionName="MountedTurretExit", Key=E)

; END VEHICLES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Death - ConfigKBMResetToDefault_Campaign2
+ActionMappings=(ActionName="ResurrectHere", Key=LeftMouseButton)
+ActionMappings=(ActionName="RespawnAtStart", Key=RightMouseButton)

; Picker - ConfigKBMResetToDefault_Campaign2
+ActionMappings=(ActionName="PickerConfirm", Key=LeftMouseButton)
+ActionMappings=(ActionName="PickerCancel", Key=RightMouseButton)
+ActionMappings=(ActionName="PickerCancel", Key=Escape)
; We shouldn't continue to add PickerCancel actions but instead set up the picker action to cancel on the PickerInputComponent.
+ActionMappings=(ActionName="PickerCancel", Key=N)
+ActionMappings=(ActionName="PickerCancel", Key=Y)

+ActionMappings=(ActionName="PickerOption1", Key=One)
+ActionMappings=(ActionName="PickerOption2", Key=Two)
+ActionMappings=(ActionName="PickerOption3", Key=Three)
+ActionMappings=(ActionName="PickerOption4", Key=Four)
+ActionMappings=(ActionName="PickerOption5", Key=Five)
+ActionMappings=(ActionName="PickerOption6", Key=Six)
+ActionMappings=(ActionName="PickerOption7", Key=Seven)
+ActionMappings=(ActionName="PickerOption8", Key=Eight)

+ActionMappings=(ActionName="PickerNextOption")
+ActionMappings=(ActionName="PickerPreviousOption")
+ActionMappings=(ActionName="PickerNextWheel", Key=MouseScrollUp)
+ActionMappings=(ActionName="PickerPreviousWheel", Key=MouseScrollDown)
+ActionMappings=(ActionName="FrontEndPickerNextWheel", Key=MouseScrollUp)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheel", Key=MouseScrollDown)
+ActionMappings=(ActionName="EndOfZonePickerConfirm", Key=LeftMouseButton)

; PickerNull hides inputs by ignoring them while the Picker is up
+ActionMappings=(ActionName="PickerNull", Key=E)
+ActionMappings=(ActionName="PickerNull", Key=F)
+ActionMappings=(ActionName="PickerNull", Key=G)
+ActionMappings=(ActionName="PickerNull", Key=R)
+ActionMappings=(ActionName="PickerNull", Key=V)
+ActionMappings=(ActionName="PickerNull", Key=Q)
+ActionMappings=(ActionName="PickerNull", Key=F1)
+ActionMappings=(ActionName="PickerNull", Key=F2)
+ActionMappings=(ActionName="PickerNull", Key=F3)
+ActionMappings=(ActionName="PickerNull", Key=F4)
+ActionMappings=(ActionName="PickerNull", Key=F5)
+ActionMappings=(ActionName="PickerNull", Key=F6)
+ActionMappings=(ActionName="PickerNull", Key=F7)
+ActionMappings=(ActionName="PickerNull", Key=MiddleMouseButton)

; Meta - ConfigKBMResetToDefault_Campaign2
+ActionMappings=(ActionName="Chat", Key=Enter)
+ActionMappings=(ActionName="ChatWithSlash", Key=Slash)

+ActionMappings=(ActionName="ChatPicker", Key=V)
+ActionMappings=(ActionName="EmotePicker", Key=B)
+ActionMappings=(ActionName="NotePicker", Key=N)

+ActionMappings=(ActionName="EscapeKey", Key=Escape)
+ActionMappings=(ActionName="EscapeKey", Key=F10)

+ActionMappings=(ActionName="ToggleInventory", Key=I)

+ActionMappings=(ActionName="ToggleFullScreenMap", Key=M)
+ActionMappings=(ActionName="ToggleFullScreenMap", Key=Tab)

+ActionMappings=(ActionName="MenuMoveLeft", Key=Left)
+ActionMappings=(ActionName="MenuMoveRight", Key=Right)
+ActionMappings=(ActionName="MenuMoveUp", Key=Up)
+ActionMappings=(ActionName="MenuMoveDown", Key=Down)
+ActionMappings=(ActionName="MenuSelectTile", Key=SpaceBar)

+ActionMappings=(ActionName="SkipCutscene", Key=SpaceBar)
+ActionMappings=(ActionName="SkipCutscene", Key=Escape)

+ActionMappings=(ActionName="ToggleCursorMode", Key=LeftAlt)
+ActionMappings=(ActionName="ToggleCursorMode", Key=RightAlt)

+ActionMappings=(ActionName="LobbyCameraZoomOut", Key=MouseScrollDown)
+ActionMappings=(ActionName="LobbyCameraZoomIn", Key=MouseScrollUp)

+ActionMappings=(ActionName="CycleHeroBackward",Key=NumPadFive)
+ActionMappings=(ActionName="CycleHeroForward",Key=NumPadSix)
+ActionMappings=(ActionName="SaveCurrentLocation",Key=NumPadEight)
+ActionMappings=(ActionName="TeleportToSavedLocation",Key=NumPadNine)

+ActionMappings=(ActionName="PushToTalk", Key=Y)

+ActionMappings=(ActionName="SetMapCursor", Key=LeftMouseButton)
+ActionMappings=(ActionName="RemoveMapCursor_Mouse", Key=RightMouseButton)
+ActionMappings=(ActionName="Map_SwitchContext", Key=T)
+ActionMappings=(ActionName="Map_PinUnpinVisibility", Key=Y)

+ActionMappings=(ActionName="OpenVoteDialog", Key=J)



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CONFIG KBM RESET TO DEFAULTS (Athena - Keyboard/Mouse)
; This should be an exact copy of ConfigKBM so we can allow reset to default.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ConfigKBMResetToDefault_Athena FortPlayerInputSettings]
; Localized Strings - ConfigKBMResetToDefault_Athena
FriendlyName=LOCTEXT("StandardConfiguration", "Standard (Default)")
Description=LOCTEXT("ConfigKBMResetToDefault_AthenaDescription", "Default controls with building buttons below the movement keys.")
SubDescription=LOCTEXT("ConfigKBMResetToDefault_AthenaSubDescription", "(This is the default control set)")

; Settings - ConfigKBMResetToDefault_Athena
bBuildingPickerOnlyChoosesCategories=true
bWeaponPickerShowOnlySlottedItems=true
bTrapPickerUsesRadial=true
bRadialClosesOnRelease=true
NumActiveTrapSlots=1
bWeaponSlotsAreSharedWhenUsingGamepad=false
bEditModeUsableFromCombatMode=true
HoldInputTime=0.25
HoldCraftAmmoTime=0.75
bEnabledForCampaign=false
bEnabledForAthena=false

; Combat - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="Fire", Key=LeftMouseButton)
+ActionMappings=(ActionName="Reload", Key=R)
+ActionMappings=(ActionName="Target", Key=RightMouseButton)
+ActionMappings=(ActionName="AutoRun", Key=Equals)
+ActionMappings=(ActionName="AutoRun", Key=NumLock)
+ActionMappings=(ActionName="Crouch", Key=LeftControl)
+ActionMappings=(ActionName="Use", Key=E)

+ActionMappings=(ActionName="HotbarKey1", Key=Invalid)
+ActionMappings=(ActionName="HotbarKey2", Key=One)
+ActionMappings=(ActionName="HotbarKey3", Key=Two)
+ActionMappings=(ActionName="HotbarKey4", Key=Three)
+ActionMappings=(ActionName="HotbarKey5", Key=Four)
+ActionMappings=(ActionName="HotbarKey6", Key=Five)
+ActionMappings=(ActionName="HotbarKey7", Key=Invalid)
+ActionMappings=(ActionName="HotbarKey8", Key=Invalid)
+ActionMappings=(ActionName="HotbarKey9", Key=Invalid)

+ActionMappings=(ActionName="PlaceMapMarkerInWorld", Key=MiddleMouseButton)
+ActionMappings=(ActionName="PlaceEnemyMarkerInWorld")

; Direct play Emotes (not bound by default) - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="LockerEmote1")
+ActionMappings=(ActionName="LockerEmote2")
+ActionMappings=(ActionName="LockerEmote3")
+ActionMappings=(ActionName="LockerEmote4")
+ActionMappings=(ActionName="LockerEmote5")
+ActionMappings=(ActionName="LockerEmote6")
+ActionMappings=(ActionName="ReplayLastEmote")

; Building Only - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="BuildConfirm", Key=LeftMouseButton)
+ActionMappings=(ActionName="EditSelect", Key=LeftMouseButton)
+ActionMappings=(ActionName="RotatePrimitiveClockwise", Key=R)
+ActionMappings=(ActionName="BuildingEditReset", Key=RightMouseButton)
+ActionMappings=(ActionName="ChangeMaterial", Key=RightMouseButton)
+ActionMappings=(ActionName="CrouchWhileBuilding", Key=LeftControl)

+ActionMappings=(ActionName="HotbarKeyF1", Key=Z)
+ActionMappings=(ActionName="HotbarKeyF1", Key=ThumbMouseButton2)
+ActionMappings=(ActionName="HotbarKeyF2", Key=X)
+ActionMappings=(ActionName="HotbarKeyF3", Key=C)
+ActionMappings=(ActionName="HotbarKeyF3", Key=ThumbMouseButton)
+ActionMappings=(ActionName="HotbarKeyF4", Key=V)
+ActionMappings=(ActionName="HotbarKeyF5", Key=Y)

; All Modes - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="Jump", Key=SpaceBar)
+ActionMappings=(ActionName="Sprint", Key=LeftShift)
+ActionMappings=(ActionName="PerformBuildingImprovementInteraction", Key=H)
+ActionMappings=(ActionName="PerformBuildingEditInteraction", Key=G)
+ActionMappings=(ActionName="SwitchQuickbar", Key=Q)
+ActionMappings=(ActionName="TogglePickAxe", Key=F)
+ActionMappings=(ActionName="SlotUp", Key=MouseScrollDown)
+ActionMappings=(ActionName="SlotDown", Key=MouseScrollUp)
+ActionMappings=(ActionName="TrapPicker", Key=F3)

; Edit - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="CompleteBuildingEditInteraction", Key=G)
+ActionMappings=(ActionName="CrouchWhileEditing", Key=LeftControl)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Vehicle - ConfigKBMResetToDefault_Athena

; Shopping Cart - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="ShoppingCartCoast", Key=SpaceBar)
+ActionMappings=(ActionName="ShoppingCartExit", Key=E)
+ActionMappings=(ActionName="ShoppingCartUseOrExit", Key=E)
+ActionMappings=(ActionName="ShoppingCartChangeSeat", Key=LeftControl)

; Ship Cannon - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="CannonCoast", Key=SpaceBar)
+ActionMappings=(ActionName="CannonShoot", Key=LeftMouseButton)
+ActionMappings=(ActionName="CannonExit", Key=E)
+ActionMappings=(ActionName="CannonUseOrExit", Key=E)
+ActionMappings=(ActionName="CannonChangeSeat", Key=LeftControl)

; Golf Cart - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="GolfCartEBrake", Key=SpaceBar)
+ActionMappings=(ActionName="GolfCartExit", Key=E)
+ActionMappings=(ActionName="GolfCartUseOrExit", Key=E)
+ActionMappings=(ActionName="GolfCartChangeSeat", Key=LeftControl)
+ActionMappings=(ActionName="GolfCartHonk", Key=RightMouseButton)

; Quad Crasher - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="QuadCrasherBoost", Key=SpaceBar)
+ActionMappings=(ActionName="QuadCrasherExit", Key=E)
+ActionMappings=(ActionName="QuadCrasherUseOrExit", Key=E)
+ActionMappings=(ActionName="QuadCrasherChangeSeat", Key=LeftControl)
+ActionMappings=(ActionName="QuadCrasherHonk", Key=RightMouseButton)

; Biplane - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="BiplaneBoost", Key=SpaceBar)
+ActionMappings=(ActionName="BiplaneShoot", Key=LeftMouseButton)
+ActionMappings=(ActionName="BiplaneFreelook", Key=RightMouseButton)
+ActionMappings=(ActionName="BiplaneRollRight", Key=C)
+ActionMappings=(ActionName="BiplaneRollLeft", Key=Z)
+ActionMappings=(ActionName="BiplaneRollInvert", Key=X)
+ActionMappings=(ActionName="BiplaneStartEngine", Key=W)
+ActionMappings=(ActionName="BiplaneStartEngine", Key=SpaceBar)
+ActionMappings=(ActionName="BiplaneStopEngine", Key=LeftShift)
+ActionMappings=(ActionName="BiplaneTaxiBackwards", Key=S)
+ActionMappings=(ActionName="BiplaneTaxiBackwards", Key=LeftShift)
+ActionMappings=(ActionName="BiplaneExit", Key=E)
+ActionMappings=(ActionName="BiplaneUseOrExit", Key=E)
+ActionMappings=(ActionName="BiplaneChangeSeat", Key=LeftControl)

; Hamsterball - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="HamsterballBoost", Key=SpaceBar)
+ActionMappings=(ActionName="HamsterballShoot", Key=LeftMouseButton)
+ActionMappings=(ActionName="HamsterballRetract", Key=RightMouseButton)
+ActionMappings=(ActionName="HamsterballExit", Key=E)

; Jackal - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="JackalBoost", Key=LeftShift)
+ActionMappings=(ActionName="JackalUseOrExit", Key=E)
+ActionMappings=(ActionName="JackalJump", Key=SpaceBar)

; Mounted Turret - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="MountedTurretExit", Key=E)

; Ostrich - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="OstrichBoost", Key=LeftShift)
+ActionMappings=(ActionName="OstrichJump", Key=SpaceBar)
+ActionMappings=(ActionName="OstrichStomp", Key=LeftMouseButton)
+ActionMappings=(ActionName="OstrichHonk", Key=RightMouseButton)
+ActionMappings=(ActionName="OstrichSelfDestructDriver", Key=Delete)
+ActionMappings=(ActionName="OstrichExitDriver", Key=E)
+ActionMappings=(ActionName="OstrichShotgun", Key=LeftMouseButton)
+ActionMappings=(ActionName="OstrichMissiles", Key=RightMouseButton)
+ActionMappings=(ActionName="OstrichShieldBoost", Key=Q)
+ActionMappings=(ActionName="OstrichSelfDestructPassenger", Key=Delete)
+ActionMappings=(ActionName="OstrichExitPassenger", Key=E)
+ActionMappings=(ActionName="OstrichChangeSeat", Key=LeftControl)

; Meatball - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="MeatballBoost", Key=LeftShift)
+ActionMappings=(ActionName="MeatballShoot", Key=LeftMouseButton)
+ActionMappings=(ActionName="MeatballTargeting", Key=RightMouseButton)
+ActionMappings=(ActionName="MeatballExit", Key=E)
+ActionMappings=(ActionName="MeatballUseOrExit", Key=E)
+ActionMappings=(ActionName="MeatballChangeSeat", Key=LeftControl)

; Hoagie - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="HoagieExit", Key=E)
+ActionMappings=(ActionName="HoagieChangeSeats", Key=LeftControl)
+ActionMappings=(ActionName="HoagieBoost", Key=LeftShift)
+ActionMappings=(ActionName="HoagieMoveDownButton", Key=RightMouseButton)
+ActionMappings=(ActionName="HoagieMoveUpButton", Key=LeftMouseButton)
+ActionMappings=(ActionName="HoagieHonk", Key=B)

; END VEHICLES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; DBNO Carry - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="DBNOCarryHoist", Key=F)
+ActionMappings=(ActionName="DBNOCarryThrow", Key=LeftMouseButton)
+ActionMappings=(ActionName="DBNOCarryDrop", Key=F)

; Interaction - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="AlternateInteractCarry", Key=F)
+ActionMappings=(ActionName="AlternateInteractPlace", Key=F)

; Creative Move Tool - CreativeAll - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="ToggleCreativePhone", Key=Tilde)
+ActionMappings=(ActionName="ToggleCreativePhone", Key=P)
+ActionMappings=(ActionName="ToggleQuickMenu", Key=B)
; Creative Move Tool - Equipped - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="CreativeMoveToolEquippedGrabOrLetGo", Key=RightMouseButton)
+ActionMappings=(ActionName="CreativeMoveToolEquippedCopyGrabOrDuplicate", Key=LeftMouseButton)
+ActionMappings=(ActionName="PossessPropActivate", Key=LeftMouseButton)
+ActionMappings=(ActionName="CreativeMoveToolEquippedDelete", Key=X)
+ActionMappings=(ActionName="CreativeMoveToolMultiSelect", Key=R)
+ActionMappings=(ActionName="CreativeMoveToolClearMultiSelect", Key=)
+ActionMappings=(ActionName="CreativeQuickbarKey1", Key=One)
+ActionMappings=(ActionName="CreativeQuickbarKey2", Key=Two)
+ActionMappings=(ActionName="CreativeQuickbarKey3", Key=Three)
+ActionMappings=(ActionName="CreativeQuickbarKey4", Key=Four)
+ActionMappings=(ActionName="CreativeQuickbarKey5", Key=Five)
+ActionMappings=(ActionName="CreativeQuickbarKey6", Key=Six)
+ActionMappings=(ActionName="CreativeQuickbarKey7", Key=Seven)
+ActionMappings=(ActionName="CreativeQuickbarKey8", Key=Eight)
; Creative Move Tool - MoveObjectsFreely - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDuplicate", Key=LeftMouseButton)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDropToFloor", Key=G)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateClockwise", Key=R)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateCounterclockwise", Key=E)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelySwitchAxis", Key=Tab)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPush", Key=F)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPull", Key=C)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyExit", Key=RightMouseButton)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyExit", Key=Escape)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyChangePrecisionLevel", Key=V)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyQuickbarClearFocusedSlot", Key=X)
; Creative Move Tool - MoveBuildingsOnGrid - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridDuplicate", Key=LeftMouseButton)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateClockwise", Key=R)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateCounterclockwise", Key=Z)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridMirror", Key=M)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridExit", Key=RightMouseButton)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridExit", Key=Escape)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridChangePrecisionLevel", Key=V)
; Creative Flying - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="CreativeFlyUp", Key=LeftShift)
+ActionMappings=(ActionName="CreativeFlyDown", Key=LeftControl)
+ActionMappings=(ActionName="CreativeToggleGhost", Key=N)
+ActionMappings=(ActionName="CreativeToggleHeatmap", Key=T)
; Creative Island Panel - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="CreativeIslandPanelSupportAffiliate", Key=Q)
+ActionMappings=(ActionName="CreativeIslandPanelStartMinigame", Key=E)
+ActionMappings=(ActionName="CreativeIslandPanelToggleDetails", Key=H)
+ActionMappings=(ActionName="CreativeToggleReady", Key=R)
; Creative Prop Selector - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="PossessedPropPlace", Key=LeftControl)
+ActionMappings=(ActionName="PossessedPropCancel", Key=RightMouseButton)
+ActionMappings=(ActionName="PossessedPropMakeNoise", Key=R)

; Picker - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="PickerConfirm", Key=LeftMouseButton)
+ActionMappings=(ActionName="PickerCancel", Key=RightMouseButton)
+ActionMappings=(ActionName="PickerCancel", Key=Escape)
; We shouldn't continue to add PickerCancel actions but instead set up the picker action to cancel on the PickerInputComponent.
+ActionMappings=(ActionName="PickerCancel", Key=Y)

+ActionMappings=(ActionName="PickerOption1", Key=One)
+ActionMappings=(ActionName="PickerOption2", Key=Two)
+ActionMappings=(ActionName="PickerOption3", Key=Three)
+ActionMappings=(ActionName="PickerOption4", Key=Four)
+ActionMappings=(ActionName="PickerOption5", Key=Five)
+ActionMappings=(ActionName="PickerOption6", Key=Six)
+ActionMappings=(ActionName="PickerOption7", Key=Seven)
+ActionMappings=(ActionName="PickerOption8", Key=Eight)

+ActionMappings=(ActionName="PickerNextOption")
+ActionMappings=(ActionName="PickerPreviousOption")
+ActionMappings=(ActionName="PickerNextWheel", Key=MouseScrollUp)
+ActionMappings=(ActionName="PickerPreviousWheel", Key=MouseScrollDown)
+ActionMappings=(ActionName="FrontEndPickerNextWheel", Key=MouseScrollUp)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheel", Key=MouseScrollDown)

; PickerNull hides inputs by ignoring them while the Picker is up
+ActionMappings=(ActionName="PickerNull", Key=E)
+ActionMappings=(ActionName="PickerNull", Key=F)
+ActionMappings=(ActionName="PickerNull", Key=G)
+ActionMappings=(ActionName="PickerNull", Key=R)
+ActionMappings=(ActionName="PickerNull", Key=V)
+ActionMappings=(ActionName="PickerNull", Key=Q)
+ActionMappings=(ActionName="PickerNull", Key=F1)
+ActionMappings=(ActionName="PickerNull", Key=F2)
+ActionMappings=(ActionName="PickerNull", Key=F3)
+ActionMappings=(ActionName="PickerNull", Key=F4)
+ActionMappings=(ActionName="PickerNull", Key=F5)
+ActionMappings=(ActionName="PickerNull", Key=F6)
+ActionMappings=(ActionName="PickerNull", Key=F7)
+ActionMappings=(ActionName="PickerNull", Key=MiddleMouseButton)

; Replay - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="HoverDrone_IncreaseSpeed", Key=Equals)
+ActionMappings=(ActionName="HoverDrone_DecreaseSpeed", Key=Hyphen)
+ActionMappings=(ActionName="ToggleSpectatorHUD",Key=H)
+ActionMappings=(ActionName="TogglePauseState",Key=SpaceBar)
+ActionMappings=(ActionName="ReplaySpeedIncrease",Key=G)
+ActionMappings=(ActionName="ReplaySpeedDecrease",bShift=True, Key=G)
+ActionMappings=(ActionName="ToggleReplaySequencer",Key=U)
+ActionMappings=(ActionName="NextSpectatorCameraMode",Key=C)
+ActionMappings=(ActionName="PrevSpectatorCameraMode",bShift=True,Key=C)
+ActionMappings=(ActionName="ArmProjectileCam", bShift=True,Key=P)
+ActionMappings=(ActionName="SpectatorSpecialAction", Key=B)
+ActionMappings=(ActionName="SpectateNextPlayer",Key=Period)
+ActionMappings=(ActionName="SpectatePrevPlayer",Key=Comma)
+ActionMappings=(ActionName="SpectateNextSquad",Key=O)
+ActionMappings=(ActionName="SpectatePrevSquad",Key=I)
+ActionMappings=(ActionName="SpectateNextTeam",Key=L)
+ActionMappings=(ActionName="SpectatePrevTeam",Key=K)
+ActionMappings=(ActionName="SpectateLastAttacker",Key=P)
+ActionMappings=(ActionName="ResetSpectatorCameraMode",Key=R)
+ActionMappings=(ActionName="HoverDrone_FaceLocationToggle",Key=F)
+ActionMappings=(ActionName="HoverDrone_FaceLocationDisable",bShift=True,Key=F)
+ActionMappings=(ActionName="TriggerLightningFlash",bShift=True,Key=L)
+ActionMappings=(ActionName="NextArenaCam",bShift=True,Key=K)
+ActionMappings=(ActionName="PrevArenaCam",bShift=True,Key=J)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey0",bCtrl=True,Key=NumPadZero)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey1",bCtrl=True,Key=NumPadOne)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey2",bCtrl=True,Key=NumPadTwo)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey3",bCtrl=True,Key=NumPadThree)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey4",bCtrl=True,Key=NumPadFour)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey5",bCtrl=True,Key=NumPadFive)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey6",bCtrl=True,Key=NumPadSix)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey7",bCtrl=True,Key=NumPadSeven)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey8",bCtrl=True,Key=NumPadEight)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey9",bCtrl=True,Key=NumPadNine)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey0",bCtrl=True,bAlt=True,Key=NumPadZero)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey1",bCtrl=True,bAlt=True,Key=NumPadOne)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey2",bCtrl=True,bAlt=True,Key=NumPadTwo)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey3",bCtrl=True,bAlt=True,Key=NumPadThree)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey4",bCtrl=True,bAlt=True,Key=NumPadFour)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey5",bCtrl=True,bAlt=True,Key=NumPadFive)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey6",bCtrl=True,bAlt=True,Key=NumPadSix)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey7",bCtrl=True,bAlt=True,Key=NumPadSeven)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey8",bCtrl=True,bAlt=True,Key=NumPadEight)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey9",bCtrl=True,bAlt=True,Key=NumPadNine)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey0",Key=NumPadZero)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey1",Key=NumPadOne)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey2",Key=NumPadTwo)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey3",Key=NumPadThree)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey4",Key=NumPadFour)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey5",Key=NumPadFive)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey6",Key=NumPadSix)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey7",Key=NumPadSeven)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey8",Key=NumPadEight)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey9",Key=NumPadNine)
+ActionMappings=(ActionName="SpectatorCameraMode0",Key=One)
+ActionMappings=(ActionName="SpectatorCameraMode1",Key=Two)
+ActionMappings=(ActionName="SpectatorCameraMode2",Key=Three)
+ActionMappings=(ActionName="SpectatorCameraMode3",Key=Four)
+ActionMappings=(ActionName="SpectatorCameraMode4",Key=Five)
+ActionMappings=(ActionName="SpectatorCameraMode5",Key=Six)
+ActionMappings=(ActionName="SpectatorCameraMode6",Key=Seven)
+ActionMappings=(ActionName="SpectatorCameraMode7",Key=Eight)
+ActionMappings=(ActionName="SpectatorCameraMode8",Key=Nine)
+ActionMappings=(ActionName="SpectatorCameraMode9",Key=Zero)
+ActionMappings=(ActionName="SpectatorZoomOut",Key=LeftMouseButton)
;+ActionMappings=(ActionName="ToggleBroadcastOffAirOverlay",bShift=True,Key=Backspace)
+ActionMappings=(ActionName="ToggleBroadcastNetUI",bCtrl=True,Key=Backspace)
+ActionMappings=(ActionName="SortEventMatchInfoByEliminations",bShift=True,Key=One)
+ActionMappings=(ActionName="SortEventMatchInfoByPlace",bShift=True,Key=Two)
+ActionMappings=(ActionName="ToggleSquadIdsOnEventMatchScoreboard",bShift=True,Key=Three)
+ActionMappings=(ActionName="ToggleScoreOnEventMatchScoreboard",bShift=True,Key=Four)
+ActionMappings=(ActionName="SortEventMatchInfoByScore",bShift=True,Key=Five)
+ActionMappings=(ActionName="ToggleEventMatchScoreboardGroupByTeam",bShift=True,Key=Six)
; Axis Mappings aren't picked up correctly by keybind widgets, so as a workaround we have UI specific action bindings
+ActionMappings=(ActionName="ReplayUIIncreaseDistance",Key=E)
+ActionMappings=(ActionName="ReplayUIDecreaseDistance",Key=Q)
+ActionMappings=(ActionName="BroadcastToggleSquadIds",Key=LeftAlt)
; BattleMap
+ActionMappings=(ActionName="BattleMapToggleShowAllSquadMembers",bCtrl=True,bAlt=True,Key=S)
+ActionMappings=(ActionName="BattleMapToggleShowNearbyChests",bCtrl=True,bAlt=True,Key=D)

; Meta - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="Chat", Key=Enter)
+ActionMappings=(ActionName="ChatWithSlash", Key=Slash)

+ActionMappings=(ActionName="SquadQuickChatPicker", Key=F4)
+ActionMappings=(ActionName="BattleLabDevicePicker", Key=F4)
+ActionMappings=(ActionName="EmotePicker", Key=B)

+ActionMappings=(ActionName="EscapeKey", Key=Escape)
+ActionMappings=(ActionName="EscapeKey", Key=F10)

+ActionMappings=(ActionName="ToggleInventory", Key=Tab)
+ActionMappings=(ActionName="ToggleInventory", Key=I)

+ActionMappings=(ActionName="ToggleFullScreenMap", Key=M)

+ActionMappings=(ActionName="MenuMoveLeft", Key=Left)
+ActionMappings=(ActionName="MenuMoveRight", Key=Right)
+ActionMappings=(ActionName="MenuMoveUp", Key=Up)
+ActionMappings=(ActionName="MenuMoveDown", Key=Down)
+ActionMappings=(ActionName="MenuSelectTile", Key=SpaceBar)

+ActionMappings=(ActionName="SkipCutscene", Key=SpaceBar)
+ActionMappings=(ActionName="SkipCutscene", Key=Escape)

+ActionMappings=(ActionName="ToggleCursorMode", Key=LeftAlt)
+ActionMappings=(ActionName="ToggleCursorMode", Key=RightAlt)

+ActionMappings=(ActionName="LobbyCameraZoomOut", Key=MouseScrollDown)
+ActionMappings=(ActionName="LobbyCameraZoomIn", Key=MouseScrollUp)

+ActionMappings=(ActionName="CycleHeroBackward",Key=NumPadFive)
+ActionMappings=(ActionName="CycleHeroForward",Key=NumPadSix)
+ActionMappings=(ActionName="SaveCurrentLocation",Key=NumPadEight)
+ActionMappings=(ActionName="TeleportToSavedLocation",Key=NumPadNine)

+ActionMappings=(ActionName="PushToTalk", Key=T)

+ActionMappings=(ActionName="SetMapCursor", Key=LeftMouseButton)
+ActionMappings=(ActionName="RemoveMapCursor_Mouse", Key=RightMouseButton)
+ActionMappings=(ActionName="Map_SwitchContext", Key=T)
+ActionMappings=(ActionName="Map_PinUnpinVisibility", Key=Y)

+ActionMappings=(ActionName="OpenVoteDialog", Key=J)
+ActionMappings=(ActionName="GameChannelRecommendationHold", Key=E)
+ActionMappings=(ActionName="SubscriptionNudgeHold", Key=E)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CONFIG KBM RESET TO DEFAULTS (Athena - Keyboard/Mouse)
; This should be an exact copy of ConfigKBM so we can allow reset to default.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ConfigKBMResetToDefault_Athena2 FortPlayerInputSettings]
; Localized Strings - ConfigKBMResetToDefault_Athena2
FriendlyName=LOCTEXT("StandardConfiguration", "Old School")
Description=LOCTEXT("ConfigKBMResetToDefault_Athena2Description", "Original controls for Fortnite.")
SubDescription=LOCTEXT("ConfigKBMResetToDefault_Athena2SubDescription", "")

; Settings - ConfigKBMResetToDefault_Athena2
bBuildingPickerOnlyChoosesCategories=true
bWeaponPickerShowOnlySlottedItems=true
bTrapPickerUsesRadial=true
bRadialClosesOnRelease=true
NumActiveTrapSlots=1
bWeaponSlotsAreSharedWhenUsingGamepad=false
bEditModeUsableFromCombatMode=true
HoldInputTime=0.25
HoldCraftAmmoTime=0.75
bEnabledForCampaign=false
bEnabledForAthena=false

; Combat - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="Fire", Key=LeftMouseButton)
+ActionMappings=(ActionName="Reload", Key=R)
+ActionMappings=(ActionName="Target", Key=RightMouseButton)
+ActionMappings=(ActionName="AutoRun", Key=Equals)
+ActionMappings=(ActionName="AutoRun", Key=NumLock)
+ActionMappings=(ActionName="Crouch", Key=LeftControl)
+ActionMappings=(ActionName="Use", Key=E)

+ActionMappings=(ActionName="HotbarKey1", Key=One)
+ActionMappings=(ActionName="HotbarKey2", Key=Two)
+ActionMappings=(ActionName="HotbarKey3", Key=Three)
+ActionMappings=(ActionName="HotbarKey4", Key=Four)
+ActionMappings=(ActionName="HotbarKey5", Key=Five)
+ActionMappings=(ActionName="HotbarKey6", Key=Six)
+ActionMappings=(ActionName="HotbarKey7", Key=Invalid)
+ActionMappings=(ActionName="HotbarKey8", Key=Invalid)
+ActionMappings=(ActionName="HotbarKey9", Key=Invalid)

+ActionMappings=(ActionName="PlaceMapMarkerInWorld", Key=MiddleMouseButton)
+ActionMappings=(ActionName="PlaceEnemyMarkerInWorld")

; Direct play Emotes (not bound by default) - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="LockerEmote1")
+ActionMappings=(ActionName="LockerEmote2")
+ActionMappings=(ActionName="LockerEmote3")
+ActionMappings=(ActionName="LockerEmote4")
+ActionMappings=(ActionName="LockerEmote5")
+ActionMappings=(ActionName="LockerEmote6")
+ActionMappings=(ActionName="ReplayLastEmote")

; Building Only - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="BuildConfirm", Key=LeftMouseButton)
+ActionMappings=(ActionName="EditSelect", Key=LeftMouseButton)
+ActionMappings=(ActionName="RotatePrimitiveClockwise", Key=R)
+ActionMappings=(ActionName="BuildingEditReset", Key=RightMouseButton)
+ActionMappings=(ActionName="ChangeMaterial", Key=RightMouseButton)
+ActionMappings=(ActionName="CrouchWhileBuilding", Key=LeftControl)

+ActionMappings=(ActionName="HotbarKeyF1", Key=F1)
+ActionMappings=(ActionName="HotbarKeyF2", Key=F2)
+ActionMappings=(ActionName="HotbarKeyF3", Key=F3)
+ActionMappings=(ActionName="HotbarKeyF4", Key=F4)
+ActionMappings=(ActionName="HotbarKeyF5", Key=F5)

; All Modes - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="Jump", Key=SpaceBar)
+ActionMappings=(ActionName="Sprint", Key=LeftShift)
+ActionMappings=(ActionName="PerformBuildingImprovementInteraction", Key=F)
+ActionMappings=(ActionName="PerformBuildingImprovementInteraction", Key=ThumbMouseButton2)
+ActionMappings=(ActionName="PerformBuildingEditInteraction", Key=G)
+ActionMappings=(ActionName="SwitchQuickbar", Key=Q)
+ActionMappings=(ActionName="SwitchQuickbar", Key=ThumbMouseButton)
+ActionMappings=(ActionName="TogglePickAxe", Key=L)
+ActionMappings=(ActionName="SlotUp", Key=MouseScrollDown)
+ActionMappings=(ActionName="SlotDown", Key=MouseScrollUp)
+ActionMappings=(ActionName="TrapPicker", Key=T)

; Edit - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="CompleteBuildingEditInteraction", Key=G)
+ActionMappings=(ActionName="CrouchWhileEditing", Key=LeftControl)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Vehicle - ConfigKBMResetToDefault_Athena2

; Shopping Cart - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="ShoppingCartCoast", Key=SpaceBar)
+ActionMappings=(ActionName="ShoppingCartExit", Key=E)
+ActionMappings=(ActionName="ShoppingCartUseOrExit", Key=E)
+ActionMappings=(ActionName="ShoppingCartChangeSeat", Key=LeftControl)

; Ship Cannon - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="CannonCoast", Key=SpaceBar)
+ActionMappings=(ActionName="CannonShoot", Key=LeftMouseButton)
+ActionMappings=(ActionName="CannonExit", Key=E)
+ActionMappings=(ActionName="CannonUseOrExit", Key=E)
+ActionMappings=(ActionName="CannonChangeSeat", Key=LeftControl)

; Golf Cart - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="GolfCartEBrake", Key=SpaceBar)
+ActionMappings=(ActionName="GolfCartExit", Key=E)
+ActionMappings=(ActionName="GolfCartUseOrExit", Key=E)
+ActionMappings=(ActionName="GolfCartChangeSeat", Key=LeftControl)
+ActionMappings=(ActionName="GolfCartHonk", Key=RightMouseButton)

; Quad Crasher - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="QuadCrasherBoost", Key=SpaceBar)
+ActionMappings=(ActionName="QuadCrasherExit", Key=E)
+ActionMappings=(ActionName="QuadCrasherUseOrExit", Key=E)
+ActionMappings=(ActionName="QuadCrasherChangeSeat", Key=LeftControl)
+ActionMappings=(ActionName="QuadCrasherHonk", Key=RightMouseButton)

; Biplane - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="BiplaneBoost", Key=SpaceBar)
+ActionMappings=(ActionName="BiplaneShoot", Key=LeftMouseButton)
+ActionMappings=(ActionName="BiplaneFreelook", Key=RightMouseButton)
+ActionMappings=(ActionName="BiplaneRollRight", Key=C)
+ActionMappings=(ActionName="BiplaneRollLeft", Key=Z)
+ActionMappings=(ActionName="BiplaneRollInvert", Key=X)
+ActionMappings=(ActionName="BiplaneStartEngine", Key=W)
+ActionMappings=(ActionName="BiplaneStartEngine", Key=SpaceBar)
+ActionMappings=(ActionName="BiplaneStopEngine", Key=LeftShift)
+ActionMappings=(ActionName="BiplaneTaxiBackwards", Key=S)
+ActionMappings=(ActionName="BiplaneTaxiBackwards", Key=LeftShift)
+ActionMappings=(ActionName="BiplaneExit", Key=E)
+ActionMappings=(ActionName="BiplaneUseOrExit", Key=E)
+ActionMappings=(ActionName="BiplaneChangeSeat", Key=LeftControl)

; Hamsterball - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="HamsterballBoost", Key=SpaceBar)
+ActionMappings=(ActionName="HamsterballShoot", Key=LeftMouseButton)
+ActionMappings=(ActionName="HamsterballRetract", Key=RightMouseButton)
+ActionMappings=(ActionName="HamsterballExit", Key=E)

; Jackal - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="JackalBoost", Key=LeftShift)
+ActionMappings=(ActionName="JackalUseOrExit", Key=E)
+ActionMappings=(ActionName="JackalJump", Key=SpaceBar)

; Mounted Turret - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="MountedTurretExit", Key=E)

; Ostrich - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="OstrichBoost", Key=LeftShift)
+ActionMappings=(ActionName="OstrichJump", Key=SpaceBar)
+ActionMappings=(ActionName="OstrichStomp", Key=LeftMouseButton)
+ActionMappings=(ActionName="OstrichHonk", Key=RightMouseButton)
+ActionMappings=(ActionName="OstrichSelfDestructDriver", Key=Delete)
+ActionMappings=(ActionName="OstrichExitDriver", Key=E)
+ActionMappings=(ActionName="OstrichShotgun", Key=LeftMouseButton)
+ActionMappings=(ActionName="OstrichMissiles", Key=RightMouseButton)
+ActionMappings=(ActionName="OstrichShieldBoost", Key=Q)
+ActionMappings=(ActionName="OstrichSelfDestructPassenger", Key=Delete)
+ActionMappings=(ActionName="OstrichExitPassenger", Key=E)
+ActionMappings=(ActionName="OstrichChangeSeat", Key=LeftControl)

; Meatball - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="MeatballBoost", Key=LeftShift)
+ActionMappings=(ActionName="MeatballShoot", Key=LeftMouseButton)
+ActionMappings=(ActionName="MeatballTargeting", Key=RightMouseButton)
+ActionMappings=(ActionName="MeatballExit", Key=E)
+ActionMappings=(ActionName="MeatballUseOrExit", Key=E)
+ActionMappings=(ActionName="MeatballChangeSeat", Key=LeftControl)

; Hoagie - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="HoagieExit", Key=E)
+ActionMappings=(ActionName="HoagieChangeSeats", Key=LeftControl)
+ActionMappings=(ActionName="HoagieBoost", Key=LeftShift)
+ActionMappings=(ActionName="HoagieMoveDownButton", Key=RightMouseButton)
+ActionMappings=(ActionName="HoagieMoveUpButton", Key=LeftMouseButton)
+ActionMappings=(ActionName="HoagieHorn", Key=B)

; END VEHICLES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; DBNO Carry - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="DBNOCarryHoist", Key=F)
+ActionMappings=(ActionName="DBNOCarryThrow", Key=LeftMouseButton)
+ActionMappings=(ActionName="DBNOCarryDrop", Key=F)

; Interaction - ConfigKBMResetToDefault_Athena
+ActionMappings=(ActionName="AlternateInteractCarry", Key=F)
+ActionMappings=(ActionName="AlternateInteractPlace", Key=F)

; Creative Move Tool - CreativeAll - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="ToggleCreativePhone", Key=Tilde)
+ActionMappings=(ActionName="ToggleCreativePhone", Key=P)
+ActionMappings=(ActionName="ToggleQuickMenu", Key=B)
; Creative Move Tool - Equipped - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="CreativeMoveToolEquippedGrabOrLetGo", Key=RightMouseButton)
+ActionMappings=(ActionName="CreativeMoveToolEquippedCopyGrabOrDuplicate", Key=LeftMouseButton)
+ActionMappings=(ActionName="PossessPropActivate", Key=LeftMouseButton)
+ActionMappings=(ActionName="CreativeMoveToolEquippedDelete", Key=X)
+ActionMappings=(ActionName="CreativeMoveToolMultiSelect", Key=R)
+ActionMappings=(ActionName="CreativeMoveToolClearMultiSelect", Key=)
+ActionMappings=(ActionName="CreativeQuickbarKey1", Key=One)
+ActionMappings=(ActionName="CreativeQuickbarKey2", Key=Two)
+ActionMappings=(ActionName="CreativeQuickbarKey3", Key=Three)
+ActionMappings=(ActionName="CreativeQuickbarKey4", Key=Four)
+ActionMappings=(ActionName="CreativeQuickbarKey5", Key=Five)
+ActionMappings=(ActionName="CreativeQuickbarKey6", Key=Six)
+ActionMappings=(ActionName="CreativeQuickbarKey7", Key=Seven)
+ActionMappings=(ActionName="CreativeQuickbarKey8", Key=Eight)
; Creative Move Tool - MoveObjectsFreely - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDuplicate", Key=LeftMouseButton)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDropToFloor", Key=G)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateClockwise", Key=R)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateCounterclockwise", Key=E)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelySwitchAxis", Key=Tab)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPush", Key=F)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPull", Key=C)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyExit", Key=RightMouseButton)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyExit", Key=Escape)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyChangePrecisionLevel", Key=V)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyQuickbarClearFocusedSlot", Key=X)
; Creative Move Tool - MoveBuildingsOnGrid - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridDuplicate", Key=LeftMouseButton)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateClockwise", Key=R)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateCounterclockwise", Key=Z)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridMirror", Key=M)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridExit", Key=RightMouseButton)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridExit", Key=Escape)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridChangePrecisionLevel", Key=V)
; Creative Flying - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="CreativeFlyUp", Key=LeftShift)
+ActionMappings=(ActionName="CreativeFlyDown", Key=LeftControl)
+ActionMappings=(ActionName="CreativeToggleGhost", Key=N)
+ActionMappings=(ActionName="CreativeToggleHeatmap", Key=T)
; Creative Island Panel - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="CreativeIslandPanelSupportAffiliate", Key=Q)
+ActionMappings=(ActionName="CreativeIslandPanelStartMinigame", Key=E)
+ActionMappings=(ActionName="CreativeIslandPanelToggleDetails", Key=H)
+ActionMappings=(ActionName="CreativeToggleReady", Key=R)
; Creative Prop Selector - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="PossessedPropPlace", Key=LeftControl)
+ActionMappings=(ActionName="PossessedPropCancel", Key=RightMouseButton)
+ActionMappings=(ActionName="PossessedPropMakeNoise", Key=R)

; Picker - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="PickerConfirm", Key=LeftMouseButton)
+ActionMappings=(ActionName="PickerCancel", Key=RightMouseButton)
+ActionMappings=(ActionName="PickerCancel", Key=Escape)
; We shouldn't continue to add PickerCancel actions but instead set up the picker action to cancel on the PickerInputComponent.
+ActionMappings=(ActionName="PickerCancel", Key=Y)

+ActionMappings=(ActionName="PickerOption1", Key=One)
+ActionMappings=(ActionName="PickerOption2", Key=Two)
+ActionMappings=(ActionName="PickerOption3", Key=Three)
+ActionMappings=(ActionName="PickerOption4", Key=Four)
+ActionMappings=(ActionName="PickerOption5", Key=Five)
+ActionMappings=(ActionName="PickerOption6", Key=Six)
+ActionMappings=(ActionName="PickerOption7", Key=Seven)
+ActionMappings=(ActionName="PickerOption8", Key=Eight)

+ActionMappings=(ActionName="PickerNextOption")
+ActionMappings=(ActionName="PickerPreviousOption")
+ActionMappings=(ActionName="PickerNextWheel", Key=MouseScrollUp)
+ActionMappings=(ActionName="PickerPreviousWheel", Key=MouseScrollDown)
+ActionMappings=(ActionName="FrontEndPickerNextWheel", Key=MouseScrollUp)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheel", Key=MouseScrollDown)

; PickerNull hides inputs by ignoring them while the Picker is up
+ActionMappings=(ActionName="PickerNull", Key=E)
+ActionMappings=(ActionName="PickerNull", Key=F)
+ActionMappings=(ActionName="PickerNull", Key=G)
+ActionMappings=(ActionName="PickerNull", Key=R)
+ActionMappings=(ActionName="PickerNull", Key=V)
+ActionMappings=(ActionName="PickerNull", Key=Q)
+ActionMappings=(ActionName="PickerNull", Key=F1)
+ActionMappings=(ActionName="PickerNull", Key=F2)
+ActionMappings=(ActionName="PickerNull", Key=F3)
+ActionMappings=(ActionName="PickerNull", Key=F4)
+ActionMappings=(ActionName="PickerNull", Key=F5)
+ActionMappings=(ActionName="PickerNull", Key=F6)
+ActionMappings=(ActionName="PickerNull", Key=F7)
+ActionMappings=(ActionName="PickerNull", Key=MiddleMouseButton)

; Replay - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="HoverDrone_IncreaseSpeed", Key=Equals)
+ActionMappings=(ActionName="HoverDrone_DecreaseSpeed", Key=Hyphen)
+ActionMappings=(ActionName="ToggleSpectatorHUD",Key=H)
+ActionMappings=(ActionName="TogglePauseState",Key=SpaceBar)
+ActionMappings=(ActionName="ReplaySpeedIncrease",Key=G)
+ActionMappings=(ActionName="ReplaySpeedDecrease",bShift=True, Key=G)
+ActionMappings=(ActionName="ToggleReplaySequencer",Key=U)
+ActionMappings=(ActionName="NextSpectatorCameraMode",Key=C)
+ActionMappings=(ActionName="PrevSpectatorCameraMode",bShift=True,Key=C)
+ActionMappings=(ActionName="ArmProjectileCam", bShift=True,Key=P)
+ActionMappings=(ActionName="SpectatorSpecialAction", Key=B)
+ActionMappings=(ActionName="SpectateNextPlayer",Key=Period)
+ActionMappings=(ActionName="SpectatePrevPlayer",Key=Comma)
+ActionMappings=(ActionName="SpectateNextSquad",Key=O)
+ActionMappings=(ActionName="SpectatePrevSquad",Key=I)
+ActionMappings=(ActionName="SpectateNextTeam",Key=L)
+ActionMappings=(ActionName="SpectatePrevTeam",Key=K)
+ActionMappings=(ActionName="SpectateLastAttacker",Key=P)
+ActionMappings=(ActionName="ResetSpectatorCameraMode",Key=R)
+ActionMappings=(ActionName="HoverDrone_FaceLocationToggle",Key=F)
+ActionMappings=(ActionName="HoverDrone_FaceLocationDisable",bShift=True,Key=F)
+ActionMappings=(ActionName="TriggerLightningFlash",bShift=True,Key=L)
+ActionMappings=(ActionName="NextArenaCam",bShift=True,Key=K)
+ActionMappings=(ActionName="PrevArenaCam",bShift=True,Key=J)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey0",bCtrl=True,Key=NumPadZero)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey1",bCtrl=True,Key=NumPadOne)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey2",bCtrl=True,Key=NumPadTwo)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey3",bCtrl=True,Key=NumPadThree)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey4",bCtrl=True,Key=NumPadFour)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey5",bCtrl=True,Key=NumPadFive)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey6",bCtrl=True,Key=NumPadSix)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey7",bCtrl=True,Key=NumPadSeven)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey8",bCtrl=True,Key=NumPadEight)
+ActionMappings=(ActionName="AssignSpectatorCameraToHotKey9",bCtrl=True,Key=NumPadNine)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey0",bCtrl=True,bAlt=True,Key=NumPadZero)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey1",bCtrl=True,bAlt=True,Key=NumPadOne)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey2",bCtrl=True,bAlt=True,Key=NumPadTwo)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey3",bCtrl=True,bAlt=True,Key=NumPadThree)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey4",bCtrl=True,bAlt=True,Key=NumPadFour)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey5",bCtrl=True,bAlt=True,Key=NumPadFive)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey6",bCtrl=True,bAlt=True,Key=NumPadSix)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey7",bCtrl=True,bAlt=True,Key=NumPadSeven)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey8",bCtrl=True,bAlt=True,Key=NumPadEight)
+ActionMappings=(ActionName="AssignReplayShotStartToHotKey9",bCtrl=True,bAlt=True,Key=NumPadNine)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey0",Key=NumPadZero)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey1",Key=NumPadOne)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey2",Key=NumPadTwo)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey3",Key=NumPadThree)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey4",Key=NumPadFour)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey5",Key=NumPadFive)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey6",Key=NumPadSix)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey7",Key=NumPadSeven)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey8",Key=NumPadEight)
+ActionMappings=(ActionName="InvokeSpectatorCamHotKey9",Key=NumPadNine)
+ActionMappings=(ActionName="SpectatorCameraMode0",Key=One)
+ActionMappings=(ActionName="SpectatorCameraMode1",Key=Two)
+ActionMappings=(ActionName="SpectatorCameraMode2",Key=Three)
+ActionMappings=(ActionName="SpectatorCameraMode3",Key=Four)
+ActionMappings=(ActionName="SpectatorCameraMode4",Key=Five)
+ActionMappings=(ActionName="SpectatorCameraMode5",Key=Six)
+ActionMappings=(ActionName="SpectatorCameraMode6",Key=Seven)
+ActionMappings=(ActionName="SpectatorCameraMode7",Key=Eight)
+ActionMappings=(ActionName="SpectatorCameraMode8",Key=Nine)
+ActionMappings=(ActionName="SpectatorCameraMode9",Key=Zero)
+ActionMappings=(ActionName="SpectatorZoomOut",Key=LeftMouseButton)
;+ActionMappings=(ActionName="ToggleBroadcastOffAirOverlay",bShift=True,Key=Backspace)
+ActionMappings=(ActionName="ToggleBroadcastNetUI",bCtrl=True,Key=Backspace)
+ActionMappings=(ActionName="SortEventMatchInfoByEliminations",bShift=True,Key=One)
+ActionMappings=(ActionName="SortEventMatchInfoByPlace",bShift=True,Key=Two)
+ActionMappings=(ActionName="ToggleSquadIdsOnEventMatchScoreboard",bShift=True,Key=Three)
+ActionMappings=(ActionName="ToggleScoreOnEventMatchScoreboard",bShift=True,Key=Four)
+ActionMappings=(ActionName="SortEventMatchInfoByScore",bShift=True,Key=Five)
+ActionMappings=(ActionName="ToggleEventMatchScoreboardGroupByTeam",bShift=True,Key=Six)
; Axis Mappings aren't picked up correctly by keybind widgets, so as a workaround we have UI specific action bindings
+ActionMappings=(ActionName="ReplayUIIncreaseDistance",Key=E)
+ActionMappings=(ActionName="ReplayUIDecreaseDistance",Key=Q)
+ActionMappings=(ActionName="BroadcastToggleSquadIds",Key=LeftAlt)
; BattleMap
+ActionMappings=(ActionName="BattleMapToggleShowAllSquadMembers",bCtrl=True,bAlt=True,Key=S)
+ActionMappings=(ActionName="BattleMapToggleShowNearbyChests",bCtrl=True,bAlt=True,Key=D)

; Meta - ConfigKBMResetToDefault_Athena2
+ActionMappings=(ActionName="Chat", Key=Enter)
+ActionMappings=(ActionName="ChatWithSlash", Key=Slash)

+ActionMappings=(ActionName="SquadQuickChatPicker", Key=V)
+ActionMappings=(ActionName="BattleLabDevicePicker", Key=V)
+ActionMappings=(ActionName="EmotePicker", Key=B)

+ActionMappings=(ActionName="EscapeKey", Key=Escape)
+ActionMappings=(ActionName="EscapeKey", Key=F10)

+ActionMappings=(ActionName="ToggleInventory", Key=I)

+ActionMappings=(ActionName="ToggleFullScreenMap", Key=M)
+ActionMappings=(ActionName="ToggleFullScreenMap", Key=Tab)

+ActionMappings=(ActionName="MenuMoveLeft", Key=Left)
+ActionMappings=(ActionName="MenuMoveRight", Key=Right)
+ActionMappings=(ActionName="MenuMoveUp", Key=Up)
+ActionMappings=(ActionName="MenuMoveDown", Key=Down)
+ActionMappings=(ActionName="MenuSelectTile", Key=SpaceBar)

+ActionMappings=(ActionName="SkipCutscene", Key=SpaceBar)
+ActionMappings=(ActionName="SkipCutscene", Key=Escape)

+ActionMappings=(ActionName="ToggleCursorMode", Key=LeftAlt)
+ActionMappings=(ActionName="ToggleCursorMode", Key=RightAlt)

+ActionMappings=(ActionName="LobbyCameraZoomOut", Key=MouseScrollDown)
+ActionMappings=(ActionName="LobbyCameraZoomIn", Key=MouseScrollUp)

+ActionMappings=(ActionName="CycleHeroBackward",Key=NumPadFive)
+ActionMappings=(ActionName="CycleHeroForward",Key=NumPadSix)
+ActionMappings=(ActionName="SaveCurrentLocation",Key=NumPadEight)
+ActionMappings=(ActionName="TeleportToSavedLocation",Key=NumPadNine)

+ActionMappings=(ActionName="PushToTalk", Key=Y)

+ActionMappings=(ActionName="SetMapCursor", Key=LeftMouseButton)
+ActionMappings=(ActionName="RemoveMapCursor_Mouse", Key=RightMouseButton)
+ActionMappings=(ActionName="Map_SwitchContext", Key=T)
+ActionMappings=(ActionName="Map_PinUnpinVisibility", Key=Y)

+ActionMappings=(ActionName="OpenVoteDialog", Key=J)
+ActionMappings=(ActionName="GameChannelRecommendationHold", Key=E)
+ActionMappings=(ActionName="SubscriptionNudgeHold", Key=E)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CONFIG D (StW - Gamepad)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ConfigD FortPlayerInputSettings]
; Localized Strings
FriendlyName=LOCTEXT("StandardControllerConfiguration", "Old School")

; Settings
bBuildingPickerOnlyChoosesCategories=true
bWeaponPickerShowOnlySlottedItems=true
bTrapPickerUsesRadial=true
bRadialClosesOnRelease=true
NumActiveTrapSlots=1
bWeaponSlotsAreSharedWhenUsingGamepad=false
bEditModeUsableFromCombatMode=true
HoldInputTime=0.25
HoldCraftAmmoTime=0.75
bEnabledForCampaign=true
bEnabledForAthena=false

; Gamepad Action Key Aliases
+ActionKeyAliases=(ActionName="SwitchQuickbar", KeyAlias=Gamepad_FaceButton_Right)
+ActionKeyAliases=(ActionName="HotbarKey1", KeyAlias=Gamepad_FaceButton_Top, InputActionType=Hold)
+ActionKeyAliases=(ActionName="HotbarKey2", KeyAlias=Gamepad_FaceButton_Top)
+ActionKeyAliases=(ActionName="HotbarKey3", KeyAlias=Gamepad_FaceButton_Top)
+ActionKeyAliases=(ActionName="HotbarKey4", KeyAlias=Gamepad_FaceButton_Top)
+ActionKeyAliases=(ActionName="HotbarKey7", KeyAlias=Gamepad_LeftShoulder)
+ActionKeyAliases=(ActionName="HotbarKey8", KeyAlias=Gamepad_RightShoulder)
+ActionKeyAliases=(ActionName="HotbarKeyF1", KeyAlias=Gamepad_FaceButton_Top)
+ActionKeyAliases=(ActionName="HotbarKeyF2", KeyAlias=Gamepad_FaceButton_Top)
+ActionKeyAliases=(ActionName="HotbarKeyF3", KeyAlias=Gamepad_FaceButton_Top)
+ActionKeyAliases=(ActionName="HotbarKeyF4", KeyAlias=Gamepad_FaceButton_Top)
+ActionKeyAliases=(ActionName="HotbarKeyF5", KeyAlias=Gamepad_FaceButton_Left)
+ActionKeyAliases=(ActionName="HotbarKeyF6", KeyAlias=Gamepad_FaceButton_Left)
+ActionKeyAliases=(ActionName="HotbarKeyF7", KeyAlias=Gamepad_FaceButton_Left)
+ActionKeyAliases=(ActionName="Use", KeyAlias=Gamepad_FaceButton_Left)
+ActionKeyAliases=(ActionName="Reload", KeyAlias=Gamepad_FaceButton_Left)
+ActionKeyAliases=(ActionName="SpotActor", KeyAlias=Gamepad_RightThumbstick)
+ActionKeyAliases=(ActionName="PerformBuildingImprovementInteraction", KeyAlias=Gamepad_RightThumbstick)
+ActionKeyAliases=(ActionName="PerformBuildingEditInteraction", KeyAlias=Gamepad_FaceButton_Right, InputActionType=Hold)
+ActionKeyAliases=(ActionName="TrapPicker", KeyAlias=Gamepad_FaceButton_Left)
+ActionKeyAliases=(ActionName="ToggleInventory", KeyAlias=Gamepad_Special_Left)
+ActionKeyAliases=(ActionName="Chat", KeyAlias=Gamepad_Special_Left, InputActionType=Hold)

; Shared Movement - ConfigD
+ActionMappings=(ActionName="Jump", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadSprint", Key=Gamepad_LeftThumbstick)

; Combat - ConfigD
+ActionMappings=(ActionName="Fire", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="UseOrReload", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadNextWeaponOrHarvestHold", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="Target", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadAbility1", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadAbility2", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="HotbarKey5", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="HotbarKey6", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="GamepadImproveOrSpotActor", Key=Gamepad_RightThumbstick)

; Combat & Building - ConfigD
+ActionMappings=(ActionName="CompleteBuildingEditInteraction", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadPerformBuildingEditInteractionOrUsePersonalVehicle", Key=Gamepad_FaceButton_Right)

; Building Only - ConfigD
+ActionMappings=(ActionName="BuildConfirm", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="EditSelect", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadNextBuilding", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="GamepadUseOrTrapPicker", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="RotatePrimitiveClockwise", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="BuildingEditReset", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="ChangeMaterial", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="SwitchToSelectedBuildingType", Key=Gamepad_LeftTrigger)

; Death - ConfigD
+ActionMappings=(ActionName="ResurrectHere", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="RespawnAtStart", Key=Gamepad_FaceButton_Left)

; Picker - ConfigD
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="PickerCancel", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="PickerCancel", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="PickerNextWheel", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="PickerPreviousWheel", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="FrontEndPickerNextWheel", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheel", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="FrontEndPickerNextWheelGamepad", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheelGamepad", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="EndOfZonePickerConfirm", Key=Gamepad_RightTrigger)

; PickerNull hides inputs by ignoring them while the Picker is up
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftThumbstick)

; Meta - ConfigD
+ActionMappings=(ActionName="ChatPicker", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="EscapeKey", Key=Gamepad_Special_Right)
+ActionMappings=(ActionName="InventoryOrChatHold", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="ToggleFullScreenMap", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SkipCutscene", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="SetMapCursor", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="RemoveMapCursor_Gamepad", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="MapZoomIn_Gamepad",Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="MapZoomOut_Gamepad",Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="Map_SwitchContext",Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="Map_PinUnpinVisibility",Key=Gamepad_DPad_Up)

; Spectating - ConfigD
+ActionMappings=(ActionName="SwitchSpectatedPlayerUp", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SwitchSpectatedPlayerDown", Key=Gamepad_DPad_Down)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Vehicle - ConfigD

; Mounted Turret - ConfigD
+ActionMappings=(ActionName="GamepadMountedTurretExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadMountedTurretJump", Key=Gamepad_FaceButton_Bottom)

; END VEHICLES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CONFIG E (StW - Gamepad)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ConfigE FortPlayerInputSettings]
; Localized Strings
FriendlyName=LOCTEXT("AlternateControllerConfiguration", "Quick Builder")

; Settings
bBuildingPickerOnlyChoosesCategories=true
bWeaponPickerShowOnlySlottedItems=true
bTrapPickerUsesRadial=true
bRadialClosesOnRelease=true
NumActiveTrapSlots=1
bWeaponSlotsAreSharedWhenUsingGamepad=false
bEditModeUsableFromCombatMode=true
HoldInputTime=0.25
HoldCraftAmmoTime=0.75
bOnlyShowNextPrevBuildingSlotKeybinds=true
bEnabledForCampaign=true
bEnabledForAthena=false

; Gamepad Action Key Aliases
+ActionKeyAliases=(ActionName="SwitchQuickbar", KeyAlias=Gamepad_FaceButton_Right)
+ActionKeyAliases=(ActionName="HotbarKey1", KeyAlias=Gamepad_FaceButton_Top, InputActionType=Hold)
+ActionKeyAliases=(ActionName="HotbarKey2", KeyAlias=Gamepad_FaceButton_Top)
+ActionKeyAliases=(ActionName="HotbarKey3", KeyAlias=Gamepad_FaceButton_Top)
+ActionKeyAliases=(ActionName="HotbarKey4", KeyAlias=Gamepad_FaceButton_Top)
+ActionKeyAliases=(ActionName="HotbarKey7", KeyAlias=Gamepad_LeftShoulder)
+ActionKeyAliases=(ActionName="HotbarKey8", KeyAlias=Gamepad_RightShoulder)
+ActionKeyAliases=(ActionName="HotbarKeyF1", KeyAlias=Gamepad_RightShoulder)
+ActionKeyAliases=(ActionName="HotbarKeyF2", KeyAlias=Gamepad_RightShoulder)
+ActionKeyAliases=(ActionName="HotbarKeyF3", KeyAlias=Gamepad_RightShoulder)
+ActionKeyAliases=(ActionName="HotbarKeyF4", KeyAlias=Gamepad_RightShoulder)
+ActionKeyAliases=(ActionName="HotbarKeyF5", KeyAlias=Gamepad_FaceButton_Top)
+ActionKeyAliases=(ActionName="HotbarKeyF6", KeyAlias=Gamepad_FaceButton_Top)
+ActionKeyAliases=(ActionName="HotbarKeyF7", KeyAlias=Gamepad_FaceButton_Top)
+ActionKeyAliases=(ActionName="Use", KeyAlias=Gamepad_FaceButton_Left)
+ActionKeyAliases=(ActionName="Reload", KeyAlias=Gamepad_FaceButton_Left)
+ActionKeyAliases=(ActionName="SpotActor", KeyAlias=Gamepad_RightThumbstick)
+ActionKeyAliases=(ActionName="PerformBuildingImprovementInteraction", KeyAlias=Gamepad_RightThumbstick)
+ActionKeyAliases=(ActionName="PerformBuildingEditInteraction", KeyAlias=Gamepad_FaceButton_Right, InputActionType=Hold)
+ActionKeyAliases=(ActionName="ChangeMaterial", KeyAlias=Gamepad_FaceButton_Top)
+ActionKeyAliases=(ActionName="RotatePrimitiveClockwise", KeyAlias=Gamepad_RightThumbstick)
+ActionKeyAliases=(ActionName="TrapPicker", KeyAlias=Gamepad_FaceButton_Top)
+ActionKeyAliases=(ActionName="ToggleInventory", KeyAlias=Gamepad_Special_Left)
+ActionKeyAliases=(ActionName="Chat", KeyAlias=Gamepad_Special_Left, InputActionType=Hold)

; Shared Movement - ConfigE
+ActionMappings=(ActionName="Jump", Key=Gamepad_FaceButton_Bottom)

; Combat - ConfigE
; Sprint is Combat Only in ConfigE
+ActionMappings=(ActionName="Fire", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadSprint", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="UseOrReload", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadNextWeaponOrHarvestHold", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="Target", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadAbility1", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadAbility2", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="HotbarKey5", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="HotbarKey6", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="GamepadImproveOrSpotActor", Key=Gamepad_RightThumbstick)

; Combat & Building - ConfigE
+ActionMappings=(ActionName="CompleteBuildingEditInteraction", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadPerformBuildingEditInteractionOrUsePersonalVehicle", Key=Gamepad_FaceButton_Right)

; Building Only - ConfigE
+ActionMappings=(ActionName="BuildConfirm", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="EditSelect", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadTrapPicker", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="Use", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadPreviousBuilding", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadNextBuilding", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadImproveOrRotateBuildingPiece", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="BuildingEditReset", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="ChangeMaterial", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="SwitchToSelectedBuildingType", Key=Gamepad_LeftTrigger)

; Death - ConfigE
+ActionMappings=(ActionName="ResurrectHere", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="RespawnAtStart", Key=Gamepad_FaceButton_Left)

; Picker - ConfigE
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="PickerCancel", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="PickerCancel", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="PickerNextWheel", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="PickerPreviousWheel", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="FrontEndPickerNextWheel", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheel", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="FrontEndPickerNextWheelGamepad", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheelGamepad", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="EndOfZonePickerConfirm", Key=Gamepad_RightTrigger)

; PickerNull hides inputs by ignoring them while the Picker is up
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftThumbstick)

; Meta - ConfigE
+ActionMappings=(ActionName="ChatPicker", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="EscapeKey", Key=Gamepad_Special_Right)
+ActionMappings=(ActionName="InventoryOrChatHold", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="ToggleFullScreenMap", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SkipCutscene", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="SetMapCursor", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="RemoveMapCursor_Gamepad", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="MapZoomIn_Gamepad",Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="MapZoomOut_Gamepad",Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="Map_SwitchContext",Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="Map_PinUnpinVisibility",Key=Gamepad_DPad_Up)

; Spectating - ConfigE
+ActionMappings=(ActionName="SwitchSpectatedPlayerUp", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SwitchSpectatedPlayerDown", Key=Gamepad_DPad_Down)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Vehicle - ConfigE

; Mounted Turret - ConfigE
+ActionMappings=(ActionName="GamepadMountedTurretExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadMountedTurretJump", Key=Gamepad_FaceButton_Bottom)

; END VEHICLES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CONFIG F (StW - Gamepad)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ConfigF FortPlayerInputSettings]
; Localized Strings
FriendlyName=LOCTEXT("CombatControllerConfiguration", "Combat Pro")

; Settings
bBuildingPickerOnlyChoosesCategories=true
bWeaponPickerShowOnlySlottedItems=true
bTrapPickerUsesRadial=true
bRadialClosesOnRelease=true
NumActiveTrapSlots=1
bWeaponSlotsAreSharedWhenUsingGamepad=false
bEditModeUsableFromCombatMode=true
HoldInputTime=0.25
HoldCraftAmmoTime=0.75
bEnabledForCampaign=true
bEnabledForAthena=false

; Gamepad Action Key Aliases
+ActionKeyAliases=(ActionName="SwitchQuickbar", KeyAlias=Gamepad_FaceButton_Right)
+ActionKeyAliases=(ActionName="Use", KeyAlias=Gamepad_FaceButton_Left)
+ActionKeyAliases=(ActionName="Reload", KeyAlias=Gamepad_FaceButton_Left)
+ActionKeyAliases=(ActionName="PerformBuildingImprovementInteraction", KeyAlias=Gamepad_RightThumbstick)
+ActionKeyAliases=(ActionName="PerformBuildingEditInteraction", KeyAlias=Gamepad_FaceButton_Right, InputActionType=Hold)
+ActionKeyAliases=(ActionName="RotatePrimitiveClockwise", KeyAlias=Gamepad_RightThumbstick)
;+ActionKeyAliases=(ActionName="TrapPicker", KeyAlias=Gamepad_FaceButton_Left)
+ActionKeyAliases=(ActionName="ToggleInventory", KeyAlias=Gamepad_Dpad_Up)
+ActionKeyAliases=(ActionName="Chat", KeyAlias=Gamepad_DPad_Up, InputActionType=Hold)
+ActionKeyAliases=(ActionName="HotbarKeyF1", KeyAlias=Gamepad_RightShoulder)
+ActionKeyAliases=(ActionName="HotbarKeyF2", KeyAlias=Gamepad_RightShoulder)
+ActionKeyAliases=(ActionName="HotbarKeyF3", KeyAlias=Gamepad_RightShoulder)
+ActionKeyAliases=(ActionName="HotbarKeyF4", KeyAlias=Gamepad_RightShoulder)

; Shared Movement - ConfigF
+ActionMappings=(ActionName="Jump", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadSprint", Key=Gamepad_LeftThumbstick)

; Combat - ConfigF
+ActionMappings=(ActionName="Fire", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="UseOrReload", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadTapSelectPreviousWeaponForModalAbilities", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadTapSelectNextWeaponForModalAbilities", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadToggleHarvestWeapon", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="Target", Key=Gamepad_LeftTrigger)

+ActionMappings=(ActionName="GamepadAbility1PartA", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadAbility1PartB", Key=Gamepad_LeftTrigger)

+ActionMappings=(ActionName="GamepadAbility2PartA", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadAbility2PartB", Key=Gamepad_RightTrigger)

+ActionMappings=(ActionName="GamepadAbility3PartA", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadAbility3PartB", Key=Gamepad_RightShoulder)

;;;;;;;;
; Select Gadgets?
+ActionMappings=(ActionName="HotbarKey5", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="HotbarKey6", Key=Gamepad_DPad_Right)
;;;;;;;;

; Combat & Building - ConfigF
+ActionMappings=(ActionName="CompleteBuildingEditInteraction", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadPerformBuildingEditInteractionOrUsePersonalVehicle", Key=Gamepad_FaceButton_Right)

; Building Only - ConfigF
+ActionMappings=(ActionName="BuildConfirm", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="EditSelect", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadNextBuilding", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadPreviousBuilding", Key=Gamepad_LeftShoulder)

; TODO: Do we want Athena behavior?  Right now this uses Fortnite behavior.  Could make it an option.  I'd prefer press->Select, Hold->Radial, rather than Press->Select or Radial (Context), Hold->Inventory
+ActionMappings=(ActionName="GamepadUseOrTrapPicker", Key=Gamepad_FaceButton_Left)

+ActionMappings=(ActionName="GamepadImproveOrSpotActor", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadImproveOrRotateBuildingPiece", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="BuildingEditReset", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="ChangeMaterial", Key=Gamepad_LeftTrigger)

; TODO: Find a way to map this to gamepad.  For example: LeftShoulder+RightShoulder.  Could possibly also add back Mirroring (for stairs only) and have that use some RightShoulder+combination as well.
;+ActionMappings=(ActionName="SwitchToSelectedBuildingType", Key=Gamepad_LeftTrigger)

; Death - ConfigF
+ActionMappings=(ActionName="ResurrectHere", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="RespawnAtStart", Key=Gamepad_FaceButton_Left)

; Picker - ConfigF
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="PickerCancel", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="PickerCancel", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="PickerNextWheel", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="PickerPreviousWheel", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="FrontEndPickerNextWheel", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheel", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="FrontEndPickerNextWheelGamepad", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheelGamepad", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="EndOfZonePickerConfirm", Key=Gamepad_RightTrigger)

; PickerNull hides inputs by ignoring them while the Picker is up
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftThumbstick)

; Meta - ConfigF
+ActionMappings=(ActionName="ChatPicker", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="EscapeKey", Key=Gamepad_Special_Right)
+ActionMappings=(ActionName="InventoryOrChatHold", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="ToggleFullScreenMap", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="SkipCutscene", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="SetMapCursor", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="RemoveMapCursor_Gamepad", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="MapZoomIn_Gamepad",Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="MapZoomOut_Gamepad",Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="Map_SwitchContext",Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="Map_PinUnpinVisibility",Key=Gamepad_DPad_Up)

; Spectating - ConfigF
+ActionMappings=(ActionName="SwitchSpectatedPlayerUp", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SwitchSpectatedPlayerDown", Key=Gamepad_DPad_Down)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Vehicle - ConfigF

; Mounted Turret - ConfigF
+ActionMappings=(ActionName="GamepadMountedTurretExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadMountedTurretJump", Key=Gamepad_FaceButton_Bottom)

; END VEHICLES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CONFIG G (StW - Gamepad)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ConfigG FortPlayerInputSettings]
; Localized Strings - ConfigG
FriendlyName=LOCTEXT("BuilderControllerConfiguration", "Builder Pro")

; Settings - ConfigG
bBuildingPickerOnlyChoosesCategories=true
bWeaponPickerShowOnlySlottedItems=true
bTrapPickerUsesRadial=true
bRadialClosesOnRelease=true
NumActiveTrapSlots=1
bWeaponSlotsAreSharedWhenUsingGamepad=false
bEditModeUsableFromCombatMode=true
HoldInputTime=0.25
HoldCraftAmmoTime=0.75
bEnabledForCampaign=true
bEnabledForAthena=false

; Gamepad Action Key Aliases - ConfigG
+ActionKeyAliases=(ActionName="SwitchQuickbar", KeyAlias=Gamepad_FaceButton_Right)
+ActionKeyAliases=(ActionName="Use", KeyAlias=Gamepad_FaceButton_Left)
+ActionKeyAliases=(ActionName="Reload", KeyAlias=Gamepad_FaceButton_Left)
+ActionKeyAliases=(ActionName="PerformBuildingImprovementInteraction", KeyAlias=Gamepad_RightThumbstick)
+ActionKeyAliases=(ActionName="PerformBuildingEditInteraction", KeyAlias=Gamepad_FaceButton_Right, InputActionType=Hold)
+ActionKeyAliases=(ActionName="RotatePrimitiveClockwise", KeyAlias=Gamepad_RightThumbstick)
; +ActionKeyAliases=(ActionName="TrapPicker", KeyAlias=Gamepad_FaceButton_Left)
+ActionKeyAliases=(ActionName="GamepadTrapPicker", KeyAlias=Gamepad_FaceButton_Left)
; TODO: This was in ConfigF
+ActionKeyAliases=(ActionName="ToggleInventory", KeyAlias=Gamepad_Dpad_Up)
+ActionKeyAliases=(ActionName="Chat", KeyAlias=Gamepad_DPad_Up, InputActionType=Hold)
+ActionKeyAliases=(ActionName="HotbarKeyF1", KeyAlias=Gamepad_RightTrigger)
+ActionKeyAliases=(ActionName="HotbarKeyF2", KeyAlias=Gamepad_RightShoulder)
+ActionKeyAliases=(ActionName="HotbarKeyF3", KeyAlias=Gamepad_LeftTrigger)
+ActionKeyAliases=(ActionName="HotbarKeyF4", KeyAlias=Gamepad_LeftShoulder)

; Shared Movement - ConfigG
+ActionMappings=(ActionName="Jump", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadSprint", Key=Gamepad_LeftThumbstick)
; TODO: This was only in COnfigG_Athena
; +ActionMappings=(ActionName="CrouchOrRepair", Key=Gamepad_RightThumbstick)

; Combat - ConfigG
+ActionMappings=(ActionName="Fire", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="UseOrReload", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadTapSelectPreviousWeaponForModalAbilities", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadTapSelectNextWeaponForModalAbilities", Key=Gamepad_RightShoulder)
; TODO: Remove these Athena versions
;+ActionMappings=(ActionName="GamepadSelectPreviousWeapon", Key=Gamepad_LeftShoulder)
;+ActionMappings=(ActionName="GamepadSelectNextWeapon", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadToggleHarvestWeapon", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="Target", Key=Gamepad_LeftTrigger)

; TODO: These are StW specific
+ActionMappings=(ActionName="GamepadAbility1PartA", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadAbility1PartB", Key=Gamepad_LeftTrigger)

+ActionMappings=(ActionName="GamepadAbility2PartA", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadAbility2PartB", Key=Gamepad_RightTrigger)

+ActionMappings=(ActionName="GamepadAbility3PartA", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadAbility3PartB", Key=Gamepad_RightShoulder)

;;;;;;;;
; Select Gadgets (Combat mode only!)
+ActionMappings=(ActionName="HotbarKey5", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="HotbarKey6", Key=Gamepad_DPad_Right)
;;;;;;;;

; Combat & Building - ConfigG
+ActionMappings=(ActionName="CompleteBuildingEditInteraction", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadPerformBuildingEditInteractionOrUsePersonalVehicle", Key=Gamepad_FaceButton_Right)
; TODO: Remove this Athena binding.  See above
; +ActionMappings=(ActionName="GamepadSwitchModeOrEditBuilding", Key=Gamepad_FaceButton_Right)

; Building - ConfigG
+ActionMappings=(ActionName="GamepadBuildingSlot1", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadBuildingSlot2", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadBuildingSlot3", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadBuildingSlot4", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadUseOrTrapPickerAndPlace", Key=Gamepad_FaceButton_Left)
; TODO: Do we want Athena behavior?  Right now this uses Fortnite behavior.  Could make it an option.  I'd prefer press->Select, Hold->Radial, rather than Press->Select or Radial (Context), Hold->Inventory
; +ActionMappings=(ActionName="GamepadUseOrTrapPicker", Key=Gamepad_FaceButton_Left)

; +ActionMappings=(ActionName="GamepadRepairHoldOrRotateBuildingPiece", Key=Gamepad_RightThumbstick)
; TODO: Need to make version of below that matches version above.
+ActionMappings=(ActionName="GamepadImproveOrRotateBuildingPiece", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadImproveOrSpotActor", Key=Gamepad_RightThumbstick)

; Since ChangeMaterial is only valid in build mode, it's OK here.  Gadgets are now only usable in Combat mode.
+ActionMappings=(ActionName="ChangeMaterial", Key=Gamepad_DPad_Left)
; +ActionMappings=(ActionName="ChangeMaterial", Key=Gamepad_LeftTrigger)

; TODO: These are CombatPro...
; +ActionMappings=(ActionName="BuildConfirm", Key=Gamepad_RightTrigger)
; +ActionMappings=(ActionName="GamepadNextBuilding", Key=Gamepad_RightShoulder)
; +ActionMappings=(ActionName="GamepadPreviousBuilding", Key=Gamepad_LeftShoulder)

; Edit - ConfigG
+ActionMappings=(ActionName="EditSelect", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="BuildingEditReset", Key=Gamepad_RightThumbstick)

; TODO: Find a way to map this to gamepad.  For example: LeftShoulder+RightShoulder.  Could possibly also add back Mirroring (for stairs only) and have that use some RightShoulder+combination as well.
;+ActionMappings=(ActionName="SwitchToSelectedBuildingType", Key=Gamepad_LeftTrigger)

; Death - ConfigG
+ActionMappings=(ActionName="ResurrectHere", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="RespawnAtStart", Key=Gamepad_FaceButton_Left)

; Picker - ConfigG
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="PickerCancel", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="PickerCancel", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="PickerNextOption")
+ActionMappings=(ActionName="PickerPreviousOption")
+ActionMappings=(ActionName="PickerNextWheel", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="PickerPreviousWheel", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="FrontEndPickerNextWheel", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheel", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="FrontEndPickerNextWheelGamepad", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheelGamepad", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="EndOfZonePickerConfirm", Key=Gamepad_RightTrigger)

; PickerNull hides inputs by ignoring them while the Picker is up - ConfigG
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftThumbstick)

; Meta - ConfigG
+ActionMappings=(ActionName="EscapeKey", Key=Gamepad_Special_Right)
+ActionMappings=(ActionName="ToggleFullScreenMap", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="InventoryOrChatHold", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SetMapCursor", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="RemoveMapCursor_Gamepad", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="MapZoomIn_Gamepad",Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="MapZoomOut_Gamepad",Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="Map_SwitchContext",Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="Map_PinUnpinVisibility",Key=Gamepad_DPad_Up)

+ActionMappings=(ActionName="EmotePicker", Key=Gamepad_DPad_Down)
; TODO: This BR binding is a problem.  :(  At most it can only work in Build mode, since we use it for gadgets in combat mode.
; +ActionMappings=(ActionName="SquadQuickChatPicker", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="SkipCutscene", Key=Gamepad_FaceButton_Bottom)

; Spectating - ConfigG
+ActionMappings=(ActionName="SwitchSpectatedPlayerUp", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SwitchSpectatedPlayerDown", Key=Gamepad_DPad_Down)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Vehicle - ConfigG

; Mounted Turret - ConfigG
+ActionMappings=(ActionName="GamepadMountedTurretExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadMountedTurretJump", Key=Gamepad_FaceButton_Bottom)

; END VEHICLES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CONFIG D (Athena - Gamepad)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ConfigD_Athena FortPlayerInputSettings]
; Localized Strings - ConfigD_Athena
FriendlyName=LOCTEXT("StandardControllerConfiguration", "Old School")

; Settings - ConfigD_Athena
bBuildingPickerOnlyChoosesCategories=true
bWeaponPickerShowOnlySlottedItems=true
bTrapPickerUsesRadial=true
bRadialClosesOnRelease=true
NumActiveTrapSlots=1
bWeaponSlotsAreSharedWhenUsingGamepad=false
bEditModeUsableFromCombatMode=true
HoldInputTime=0.25
HoldCraftAmmoTime=0.75
bEnabledForCampaign=false
bEnabledForAthena=true

; Combat - ConfigD_Athena
+ActionMappings=(ActionName="Fire", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="UseOrReload", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="Target", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadSprint", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="Crouch", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHold", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="GamepadToggleFullScreenMap", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="GamepadToggleInventory", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="GamepadSquadQuickChatPicker", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="PlaceMapMarkerInWorld", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="GamepadStartRecordingHighlights", Key=Gamepad_DPad_Left)

; Building - ConfigD_Athena
+ActionMappings=(ActionName="BuildConfirm", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadNextBuilding", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="GamepadUseOrTrapPicker", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="RotatePrimitiveClockwise", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="ChangeMaterial", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadSprintWhileBuilding", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHoldWhileBuilding", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="GamepadToggleFullScreenMapWhileBuilding", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="GamepadToggleInventoryWhileBuilding", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="GamepadSquadQuickChatPickerWhileBuilding", Key=Gamepad_DPad_Right)

; Combat And Building - ConfigD_Athena
+ActionMappings=(ActionName="PerformBuildingImprovementInteraction", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadSwitchModeOrEditBuilding", Key=Gamepad_FaceButton_Right)

; All Modes - ConfigD_Athena
+ActionMappings=(ActionName="GamepadNextWeaponOrAltInteractOrHarvestHold", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="GamepadJump", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadEscapeKey", Key=Gamepad_Special_Right)

; Edit - ConfigD_Athena
+ActionMappings=(ActionName="EditSelect", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CompleteBuildingEditInteraction", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="BuildingEditReset", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadSprintWhileEditing", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadToggleFullScreenMapWhileEditing", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="GamepadToggleInventoryWhileEditing", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="GamepadSquadQuickChatPickerWhileEditing", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHoldWhileEditing", Key=Gamepad_DPad_Down)

; Fullscreen Map - ConfigD_Athena
+ActionMappings=(ActionName="SetMapCursor", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="RemoveMapCursor_Gamepad", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="MapZoomIn_Gamepad",Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="MapZoomOut_Gamepad",Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="Map_SwitchContext",Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="Map_PinUnpinVisibility",Key=Gamepad_DPad_Up)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Vehicle - ConfigD_Athena

; Shopping Cart - ConfigD_Athena
+ActionMappings=(ActionName="ShoppingCartCoast", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadShoppingCartExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadShoppingCartUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="ShoppingCartChangeSeat", Key=Gamepad_RightThumbstick)

; Cannon - ConfigD_Athena
+ActionMappings=(ActionName="GamepadCannonCoast", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadCannonShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadCannonExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadCannonUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="CannonChangeSeat", Key=Gamepad_RightThumbstick)

; Golf Cart - ConfigD_Athena
+ActionMappings=(ActionName="GamepadGolfCartEBrakeLeft", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadGolfCartEBrakeRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadGolfCartForward",Key=Gamepad_RightTriggerAxis)
+ActionMappings=(ActionName="GamepadGolfCartReverse",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="GamepadGolfCartExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadGolfCartUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GolfCartChangeSeat", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GolfCartHonk", Key=Gamepad_DPad_Down)

; Quad Crasher - ConfigD_Athena
+ActionMappings=(ActionName="GamepadQuadCrasherBoostLeft", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadQuadCrasherBoostRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadQuadCrasherBoostExtra", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadQuadCrasherForward",Key=Gamepad_RightTriggerAxis)
+ActionMappings=(ActionName="GamepadQuadCrasherReverse",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="GamepadQuadCrasherExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadQuadCrasherUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="QuadCrasherChangeSeat", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="QuadCrasherHonk", Key=Gamepad_DPad_Down)

; Biplane - ConfigD_Athena
+ActionMappings=(ActionName="GamepadBiplaneBoost", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadBiplaneShoot", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadBiplaneRollRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadBiplaneRollLeft", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadBiplaneStartEngine", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadBiplaneStopEngine", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadBiplaneTaxiBackwards", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadBiplaneExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadBiplaneUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="BiplaneChangeSeat", Key=Gamepad_RightThumbstick)

; Hamsterball - ConfigD_Athena
+ActionMappings=(ActionName="GamepadHamsterballBoostLeft", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadHamsterballBoostRight", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadHamsterballShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadHamsterballRetract", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadHamsterballExit", Key=Gamepad_FaceButton_Left)

; Jackal - ConfigD_Athena
+ActionMappings=(ActionName="GamepadJackalBoostLeft", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadJackalBoostRight", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadJackalUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadJackalJump", Key=Gamepad_FaceButton_Bottom)

; Mounted Turret - ConfigD_Athena
+ActionMappings=(ActionName="GamepadMountedTurretExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadMountedTurretJump", Key=Gamepad_FaceButton_Bottom)

; Ostrich - ConfigD_Athena
+ActionMappings=(ActionName="GamepadOstrichJump", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadOstrichBoost", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadOstrichSelfDestructDriver", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadOstrichStomp", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadOstrichHonk", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="OstrichExitDriver", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadOstrichShieldBoost", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="GamepadOstrichSelfDestructPassenger", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadOstrichShotgun", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadOstrichMissiles", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="OstrichExitPassenger", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="OstrichChangeSeat", Key=Gamepad_RightThumbstick)

; Meatball - ConfigD_Athena
+ActionMappings=(ActionName="GamepadMeatballBoostLeft", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadMeatballBoostRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadMeatballBoostExtra", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadMeatballShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadMeatballTargeting", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadMeatballExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadMeatballUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="MeatballChangeSeat", Key=Gamepad_RightThumbstick)

; Hoagie - ConfigD_Athena
+ActionMappings=(ActionName="GamepadHoagieExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="HoagieChangeSeats", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadHoagieBoost", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadHoagieHonk", Key=Gamepad_Dpad_Down)
+ActionMappings=(ActionName="GamepadHoagieMoveUpButton", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadHoagieMoveDownButton", Key=Gamepad_LeftTrigger)

; END VEHICLES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; DBNO Carry - ConfigD_Athena
+ActionMappings=(ActionName="DBNOCarryHoist", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="DBNOCarryThrow", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="DBNOCarryDrop", Key=Gamepad_FaceButton_Top)

; Interaction - ConfigD_Athena
; We don't bind AlternateInteractCarry because for gamepad we have GamepadNextWeaponOrAltInteractOrHarvestHold for this config.
+ActionMappings=(ActionName="AlternateInteractPlace", Key=Gamepad_FaceButton_Top)

; Creative Move Tool - Equipped - ConfigD_Athena
+ActionMappings=(ActionName="CreativeMoveToolEquippedGrabOrLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveToolEquippedCopyGrabOrDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="PossessPropActivate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeQuickbarActivateClutch", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeQuickbarKey1", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeQuickbarKey2", Key=Gamepad_Dpad_Right)
+ActionMappings=(ActionName="CreativeQuickbarKey3", Key=Gamepad_Dpad_Down)
+ActionMappings=(ActionName="CreativeQuickbarKey4", Key=Gamepad_Dpad_Left)
+ActionMappings=(ActionName="CreativeQuickbarKey5", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="CreativeQuickbarKey6", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="CreativeQuickbarKey7", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="CreativeQuickbarKey8", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="CreativeMoveToolEquippedDelete", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="CreativeMoveToolMultiSelect", Key=Gamepad_Dpad_Right)
+ActionMappings=(ActionName="CreativeMoveToolClearMultiSelect", Key=)
+ActionMappings=(ActionName="GamepadCreativeQuickbarSelectNext", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadCreativeQuickbarSelectPrevious", Key=Gamepad_LeftShoulder)
; Creative Move Tool - MoveObjectsFreely - ConfigD_Athena
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDropToFloor", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateClockwise", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateCounterclockwise", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelySwitchAxis", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPush", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPull", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyExit", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyChangePrecisionLevel", Key=Gamepad_DPad_Left)
; Creative Move Tool - MoveBuildingsOnGrid - ConfigD_Athena
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateClockwise", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateCounterclockwise", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridMirror", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridExit", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridChangePrecisionLevel", Key=Gamepad_DPad_Left)
; Creative All - ConfigD_Athena
+ActionMappings=(ActionName="CreativeFlyUp", Key=)
+ActionMappings=(ActionName="CreativeFlyDown", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="CreativeToggleGhost", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="CreativeToggleHeatmap", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadToggleCreativePhoneWeapon", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="ToggleQuickMenu", Key=Gamepad_Special_Left)
; Creative Island Panel - ConfigD_Athena
+ActionMappings=(ActionName="CreativeIslandPanelSupportAffiliate", Key=Gamepad_Facebutton_Top)
+ActionMappings=(ActionName="CreativeIslandPanelStartMinigame", Key=Gamepad_Facebutton_Left)
+ActionMappings=(ActionName="CreativeIslandPanelToggleDetails", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeToggleReady", Key=Gamepad_Facebutton_Left)
; Creative Prop Selector - ConfigD_Athena
+ActionMappings=(ActionName="PossessedPropPlace", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="PossessedPropCancel", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="PossessedPropMakeNoise", Key=Gamepad_Facebutton_Top)

; Picker - ConfigD_Athena
; Do not add more PickerCancel actions because the same action to open it should close it on the PickerInputComponent.
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="PickerCancel", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="PickerNextWheel", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="PickerPreviousWheel", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="FrontEndPickerNextWheel", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheel", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="FrontEndPickerNextWheelGamepad", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheelGamepad", Key=Gamepad_DPad_Left)

; PickerNull hides inputs by ignoring them while the Picker is up - ConfigD_Athena
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftThumbstick)

; Replay - ConfigD_Athena
+AxisMappings=(AxisName="ReplayLeftstick_HUD",Scale=1.000000,Key=Gamepad_LeftThumbstick)
+AxisMappings=(AxisName="ReplayRightstick_HUD",Scale=1.000000,Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="HoverDrone_IncreaseSpeed", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="HoverDrone_DecreaseSpeed", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="ToggleSpectatorHUD",Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="SpectatorSpecialAction", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="BroadcastToggleSquadIds",Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="TogglePauseState",Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="ReplaySpeedIncrease",Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="ReplaySpeedDecrease",Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="NextSpectatorCameraMode",Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="SpectatorZoomIn",Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="SwitchSpectatedPlayerUp", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SwitchSpectatedPlayerDown", Key=Gamepad_DPad_Down)
; Axis Mappings aren't picked up correctly by keybind widgets, so as a workaround we have UI specific action bindings
+ActionMappings=(ActionName="ReplayUIIncreaseDistance",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="ReplayUIDecreaseDistance",Key=Gamepad_RightTriggerAxis)

; Spectating - ConfigD_Athena
+ActionMappings=(ActionName="SwitchSpectatedPlayerUp", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SwitchSpectatedPlayerDown", Key=Gamepad_DPad_Down)

; Chat Channel Recommendation - ConfigD_Athena
+ActionMappings=(ActionName="GamepadGameChannelRecommendationHold", Key=Gamepad_Special_Right)

; Kairos Subscription Nudge - ConfigD_Athena
+ActionMappings=(ActionName="GamepadSubscriptionNudgeHold", Key=Gamepad_Special_Right)

; Battle Lab - ConfigD_Athena
+ActionMappings=(ActionName="GamepadBattleLabDevicePicker", Key=Gamepad_DPad_Right)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CONFIG E (Atena - Gamepad)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ConfigE_Athena FortPlayerInputSettings]
; Localized Strings - ConfigE_Athena
FriendlyName=LOCTEXT("AlternateControllerConfiguration", "Quick Builder")

; Settings - ConfigE_Athena
bBuildingPickerOnlyChoosesCategories=true
bWeaponPickerShowOnlySlottedItems=true
bTrapPickerUsesRadial=true
bRadialClosesOnRelease=true
NumActiveTrapSlots=1
bWeaponSlotsAreSharedWhenUsingGamepad=false
bEditModeUsableFromCombatMode=true
HoldInputTime=0.25
HoldCraftAmmoTime=0.75
bEnabledForCampaign=false
bEnabledForAthena=true

; Combat - ConfigE_Athena
+ActionMappings=(ActionName="Fire", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="UseOrReload", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="Target", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadSprint", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="Crouch", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHold", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="GamepadToggleFullScreenMap", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="GamepadToggleInventory", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="GamepadSquadQuickChatPicker", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="PlaceMapMarkerInWorld", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="GamepadStartRecordingHighlights", Key=Gamepad_DPad_Left)

; Building - ConfigE_Athena
+ActionMappings=(ActionName="BuildConfirm", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadTrapPicker", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="GamepadPreviousBuilding", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadNextBuilding", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadImproveOrRotateBuildingPiece", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="ChangeMaterial", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHoldWhileBuilding", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="GamepadToggleFullScreenMapWhileBuilding", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="GamepadToggleInventoryWhileBuilding", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="GamepadSquadQuickChatPickerWhileBuilding", Key=Gamepad_DPad_Right)

; Combat And Building - ConfigE_Athena
+ActionMappings=(ActionName="PerformBuildingImprovementInteraction", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadSwitchModeOrEditBuilding", Key=Gamepad_FaceButton_Right)

; All Modes - ConfigE_Athena
+ActionMappings=(ActionName="GamepadNextWeaponOrAltInteractOrHarvestHold", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="GamepadJump", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadEscapeKey", Key=Gamepad_Special_Right)

; Edit - ConfigE_Athena
+ActionMappings=(ActionName="EditSelect", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CompleteBuildingEditInteraction", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="BuildingEditReset", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadSprintWhileEditing", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadToggleFullScreenMapWhileEditing", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="GamepadToggleInventoryWhileEditing", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="GamepadSquadQuickChatPickerWhileEditing", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHoldWhileEditing", Key=Gamepad_DPad_Down)

; Fullscreen Map - ConfigE_Athena
+ActionMappings=(ActionName="SetMapCursor", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="RemoveMapCursor_Gamepad", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="MapZoomIn_Gamepad",Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="MapZoomOut_Gamepad",Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="Map_SwitchContext",Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="Map_PinUnpinVisibility",Key=Gamepad_DPad_Up)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Vehicle - ConfigE_Athena

; Shopping Cart - ConfigE_Athena
+ActionMappings=(ActionName="ShoppingCartCoast", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadShoppingCartExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadShoppingCartUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="ShoppingCartChangeSeat", Key=Gamepad_RightThumbstick)

; Cannon - ConfigE_Athena
+ActionMappings=(ActionName="GamepadCannonCoast", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadCannonShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadCannonExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadCannonUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="CannonChangeSeat", Key=Gamepad_RightThumbstick)

; Golf Cart - ConfigE_Athena
+ActionMappings=(ActionName="GamepadGolfCartEBrakeLeft", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadGolfCartEBrakeRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadGolfCartForward",Key=Gamepad_RightTriggerAxis)
+ActionMappings=(ActionName="GamepadGolfCartReverse",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="GamepadGolfCartExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadGolfCartUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GolfCartChangeSeat", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GolfCartHonk", Key=Gamepad_DPad_Down)

; Quad Crasher - ConfigE_Athena
+ActionMappings=(ActionName="GamepadQuadCrasherBoostLeft", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadQuadCrasherBoostRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadQuadCrasherBoostExtra", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadQuadCrasherForward",Key=Gamepad_RightTriggerAxis)
+ActionMappings=(ActionName="GamepadQuadCrasherReverse",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="GamepadQuadCrasherExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadQuadCrasherUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="QuadCrasherChangeSeat", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="QuadCrasherHonk", Key=Gamepad_DPad_Down)

; Biplane - ConfigE_Athena
+ActionMappings=(ActionName="GamepadBiplaneBoost", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadBiplaneShoot", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadBiplaneRollRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadBiplaneRollLeft", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadBiplaneStartEngine", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadBiplaneStopEngine", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadBiplaneTaxiBackwards", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadBiplaneExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadBiplaneUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="BiplaneChangeSeat", Key=Gamepad_RightThumbstick)

; Hamsterball - ConfigE_Athena
+ActionMappings=(ActionName="GamepadHamsterballBoostLeft", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadHamsterballBoostRight", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadHamsterballShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadHamsterballRetract", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadHamsterballExit", Key=Gamepad_FaceButton_Left)

; Jackal - ConfigE_Athena
+ActionMappings=(ActionName="GamepadJackalBoostLeft", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadJackalBoostRight", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadJackalUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadJackalJump", Key=Gamepad_FaceButton_Bottom)

; Mounted Turret - ConfigE_Athena
+ActionMappings=(ActionName="GamepadMountedTurretExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadMountedTurretJump", Key=Gamepad_FaceButton_Bottom)

; Ostrich - ConfigE_Athena
+ActionMappings=(ActionName="GamepadOstrichJump", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadOstrichBoost", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadOstrichSelfDestructDriver", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadOstrichStomp", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadOstrichHonk", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="OstrichExitDriver", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadOstrichShieldBoost", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="GamepadOstrichSelfDestructPassenger", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadOstrichShotgun", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadOstrichMissiles", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="OstrichExitPassenger", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="OstrichChangeSeat", Key=Gamepad_RightThumbstick)

; Meatball - ConfigE_Athena
+ActionMappings=(ActionName="GamepadMeatballBoostLeft", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadMeatballBoostRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadMeatballBoostExtra", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadMeatballShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadMeatballTargeting", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadMeatballExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadMeatballUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="MeatballChangeSeat", Key=Gamepad_RightThumbstick)

; Hoagie - ConfigE_Athena
+ActionMappings=(ActionName="GamepadHoagieExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="HoagieChangeSeats", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadHoagieBoost", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadHoagieHonk", Key=Gamepad_Dpad_Down)
+ActionMappings=(ActionName="GamepadHoagieMoveUpButton", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadHoagieMoveDownButton", Key=Gamepad_LeftTrigger)

; END VEHICLES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; DBNO Carry - ConfigE_Athena
+ActionMappings=(ActionName="DBNOCarryHoist", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="DBNOCarryThrow", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="DBNOCarryDrop", Key=Gamepad_FaceButton_Top)

; Interaction - ConfigE_Athena
; We don't bind AlternateInteractCarry because for gamepad we have GamepadNextWeaponOrAltInteractOrHarvestHold for this config.
+ActionMappings=(ActionName="AlternateInteractPlace", Key=Gamepad_FaceButton_Top)

; Creative Move Tool - Equipped - ConfigE_Athena
+ActionMappings=(ActionName="CreativeMoveToolEquippedGrabOrLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveToolEquippedCopyGrabOrDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="PossessPropActivate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeQuickbarActivateClutch", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeQuickbarKey1", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeQuickbarKey2", Key=Gamepad_Dpad_Right)
+ActionMappings=(ActionName="CreativeQuickbarKey3", Key=Gamepad_Dpad_Down)
+ActionMappings=(ActionName="CreativeQuickbarKey4", Key=Gamepad_Dpad_Left)
+ActionMappings=(ActionName="CreativeQuickbarKey5", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="CreativeQuickbarKey6", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="CreativeQuickbarKey7", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="CreativeQuickbarKey8", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="CreativeMoveToolEquippedDelete", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="CreativeMoveToolMultiSelect", Key=Gamepad_Dpad_Right)
+ActionMappings=(ActionName="CreativeMoveToolClearMultiSelect", Key=)
+ActionMappings=(ActionName="GamepadCreativeQuickbarSelectNext", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadCreativeQuickbarSelectPrevious", Key=Gamepad_LeftShoulder)
; Creative Move Tool - MoveObjectsFreely - ConfigE_Athena
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDropToFloor", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateClockwise", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateCounterclockwise", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelySwitchAxis", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPush", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPull", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyExit", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyChangePrecisionLevel", Key=Gamepad_DPad_Left)
; Creative Move Tool - MoveBuildingsOnGrid - ConfigE_Athena
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateClockwise", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateCounterclockwise", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridMirror", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridExit", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridChangePrecisionLevel", Key=Gamepad_DPad_Left)
; Creative All - ConfigE_Athena
+ActionMappings=(ActionName="CreativeFlyUp", Key=)
+ActionMappings=(ActionName="CreativeFlyDown", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="CreativeToggleGhost", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="CreativeToggleHeatmap", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadToggleCreativePhoneWeapon", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="ToggleQuickMenu", Key=Gamepad_Special_Left)
; Creative Island Panel - ConfigE_Athena
+ActionMappings=(ActionName="CreativeIslandPanelSupportAffiliate", Key=Gamepad_Facebutton_Top)
+ActionMappings=(ActionName="CreativeIslandPanelStartMinigame", Key=Gamepad_Facebutton_Left)
+ActionMappings=(ActionName="CreativeIslandPanelToggleDetails", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeToggleReady", Key=Gamepad_Facebutton_Left)
; Creative Prop Selector - ConfigE_Athena
+ActionMappings=(ActionName="PossessedPropPlace", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="PossessedPropCancel", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="PossessedPropMakeNoise", Key=Gamepad_Facebutton_Top)

; Picker - ConfigE_Athena
; Do not add more PickerCancel actions because the same action to open it should close it on the PickerInputComponent.
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="PickerCancel", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="PickerNextWheel", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="PickerPreviousWheel", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="FrontEndPickerNextWheel", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheel", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="FrontEndPickerNextWheelGamepad", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheelGamepad", Key=Gamepad_DPad_Left)

; PickerNull hides inputs by ignoring them while the Picker is up - ConfigE_Athena
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftThumbstick)

; Replay - ConfigE_Athena
+AxisMappings=(AxisName="ReplayLeftstick_HUD",Scale=1.000000,Key=Gamepad_LeftThumbstick)
+AxisMappings=(AxisName="ReplayRightstick_HUD",Scale=1.000000,Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="HoverDrone_IncreaseSpeed", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="HoverDrone_DecreaseSpeed", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="ToggleSpectatorHUD",Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="SpectatorSpecialAction", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="BroadcastToggleSquadIds",Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="TogglePauseState",Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="ReplaySpeedIncrease",Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="ReplaySpeedDecrease",Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="NextSpectatorCameraMode",Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="SpectatorZoomIn",Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="SwitchSpectatedPlayerUp", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SwitchSpectatedPlayerDown", Key=Gamepad_DPad_Down)
; Axis Mappings aren't picked up correctly by keybind widgets, so as a workaround we have UI specific action bindings
+ActionMappings=(ActionName="ReplayUIIncreaseDistance",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="ReplayUIDecreaseDistance",Key=Gamepad_RightTriggerAxis)

; Spectating - ConfigE_Athena
+ActionMappings=(ActionName="SwitchSpectatedPlayerUp", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SwitchSpectatedPlayerDown", Key=Gamepad_DPad_Down)

; Chat Channel Recommendation - ConfigE_Athena
+ActionMappings=(ActionName="GamepadGameChannelRecommendationHold", Key=Gamepad_Special_Right)

; Kairos Subscription Nudge - ConfigE_Athena
+ActionMappings=(ActionName="GamepadSubscriptionNudgeHold", Key=Gamepad_Special_Right)

; Battle Lab - ConfigE_Athena
+ActionMappings=(ActionName="GamepadBattleLabDevicePicker", Key=Gamepad_DPad_Right)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CONFIG F (Athena - Gamepad)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ConfigF_Athena FortPlayerInputSettings]
; Localized Strings - ConfigF_Athena
FriendlyName=LOCTEXT("CombatControllerConfiguration", "Combat Pro")

; Settings - ConfigF_Athena
bBuildingPickerOnlyChoosesCategories=true
bWeaponPickerShowOnlySlottedItems=true
bTrapPickerUsesRadial=true
bRadialClosesOnRelease=true
NumActiveTrapSlots=1
bWeaponSlotsAreSharedWhenUsingGamepad=false
bEditModeUsableFromCombatMode=true
HoldInputTime=0.25
HoldCraftAmmoTime=0.75
bEnabledForCampaign=false
bEnabledForAthena=true

; Combat - ConfigF_Athena
+ActionMappings=(ActionName="Fire", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="UseOrReload", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadSelectNextWeapon", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadSelectPreviousWeapon", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="Target", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadSprint", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="CrouchOrRepair", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHold", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="GamepadToggleFullScreenMap", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="GamepadToggleInventory", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="GamepadSquadQuickChatPicker", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="PlaceMapMarkerInWorld", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="GamepadStartRecordingHighlights", Key=Gamepad_DPad_Left)

; Building - ConfigF_Athena
+ActionMappings=(ActionName="BuildConfirm", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadNextBuilding", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadPreviousBuilding", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadUseOrTrapPicker", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadRepairHoldOrRotateBuildingPiece", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="ChangeMaterial", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHoldWhileBuilding", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="GamepadToggleFullScreenMapWhileBuilding", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="GamepadToggleInventoryWhileBuilding", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="GamepadSquadQuickChatPickerWhileBuilding", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="GamepadSprintWhileBuilding", Key=Gamepad_LeftThumbstick)

; Combat And Building - ConfigF_Athena
+ActionMappings=(ActionName="GamepadSwitchModeOrEditBuilding", Key=Gamepad_FaceButton_Right)

; All Modes - ConfigF_Athena
+ActionMappings=(ActionName="GamepadToggleHarvestWeaponOrAltInteract", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="GamepadJump", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadEscapeKey", Key=Gamepad_Special_Right)

; Edit - ConfigF_Athena
+ActionMappings=(ActionName="EditSelect", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CompleteBuildingEditInteraction", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="BuildingEditReset", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadSprintWhileEditing", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadToggleFullScreenMapWhileEditing", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="GamepadToggleInventoryWhileEditing", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="GamepadSquadQuickChatPickerWhileEditing", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHoldWhileEditing", Key=Gamepad_DPad_Down)

; Fullscreen Map - ConfigF_Athena
+ActionMappings=(ActionName="SetMapCursor", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="RemoveMapCursor_Gamepad", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="MapZoomIn_Gamepad",Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="MapZoomOut_Gamepad",Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="Map_SwitchContext",Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="Map_PinUnpinVisibility",Key=Gamepad_DPad_Up)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Vehicle - ConfigF_Athena

; Shopping Cart - ConfigF_Athena
+ActionMappings=(ActionName="ShoppingCartCoast", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadShoppingCartExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadShoppingCartUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="ShoppingCartChangeSeat", Key=Gamepad_RightThumbstick)

; Cannon - ConfigF_Athena
+ActionMappings=(ActionName="GamepadCannonCoast", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadCannonShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadCannonExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadCannonUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="CannonChangeSeat", Key=Gamepad_RightThumbstick)

; Golf Cart - ConfigF_Athena
+ActionMappings=(ActionName="GamepadGolfCartEBrakeLeft", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadGolfCartEBrakeRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadGolfCartForward",Key=Gamepad_RightTriggerAxis)
+ActionMappings=(ActionName="GamepadGolfCartReverse",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="GamepadGolfCartExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadGolfCartUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GolfCartChangeSeat", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GolfCartHonk", Key=Gamepad_DPad_Down)

; Quad Crasher - ConfigF_Athena
+ActionMappings=(ActionName="GamepadQuadCrasherBoostLeft", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadQuadCrasherBoostRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadQuadCrasherBoostExtra", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadQuadCrasherForward",Key=Gamepad_RightTriggerAxis)
+ActionMappings=(ActionName="GamepadQuadCrasherReverse",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="GamepadQuadCrasherExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadQuadCrasherUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="QuadCrasherChangeSeat", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="QuadCrasherHonk", Key=Gamepad_DPad_Down)

; Biplane - ConfigF_Athena
+ActionMappings=(ActionName="GamepadBiplaneBoost", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadBiplaneShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadBiplaneRollRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadBiplaneRollLeft", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadBiplaneStartEngine", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadBiplaneStopEngine", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadBiplaneTaxiBackwards", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadBiplaneExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadBiplaneUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="BiplaneChangeSeat", Key=Gamepad_RightThumbstick)

; Hamsterball - ConfigF_Athena
+ActionMappings=(ActionName="GamepadHamsterballBoostLeft", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadHamsterballBoostRight", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadHamsterballShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadHamsterballRetract", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadHamsterballExit", Key=Gamepad_FaceButton_Left)

; Jackal - ConfigF_Athena
+ActionMappings=(ActionName="GamepadJackalBoostLeft", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadJackalBoostRight", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadJackalUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadJackalJump", Key=Gamepad_FaceButton_Bottom)

; Mounted Turret - ConfigF_Athena
+ActionMappings=(ActionName="GamepadMountedTurretExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadMountedTurretJump", Key=Gamepad_FaceButton_Bottom)

; Ostrich - ConfigF_Athena
+ActionMappings=(ActionName="GamepadOstrichJump", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadOstrichBoost", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadOstrichSelfDestructDriver", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadOstrichStomp", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadOstrichHonk", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="OstrichExitDriver", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadOstrichShieldBoost", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="GamepadOstrichSelfDestructPassenger", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadOstrichShotgun", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadOstrichMissiles", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="OstrichExitPassenger", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="OstrichChangeSeat", Key=Gamepad_RightThumbstick)

; Meatball - ConfigF_Athena
+ActionMappings=(ActionName="GamepadMeatballBoostLeft", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadMeatballBoostRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadMeatballBoostExtra", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadMeatballShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadMeatballTargeting", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadMeatballExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadMeatballUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="MeatballChangeSeat", Key=Gamepad_RightThumbstick)

; Hoagie - ConfigF_Athena
+ActionMappings=(ActionName="GamepadHoagieExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="HoagieChangeSeats", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadHoagieBoost", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadHoagieHonk", Key=Gamepad_Dpad_Down)
+ActionMappings=(ActionName="GamepadHoagieMoveUpButton", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadHoagieMoveDownButton", Key=Gamepad_LeftTrigger)

; END VEHICLES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; DBNO Carry - ConfigF_Athena
+ActionMappings=(ActionName="DBNOCarryHoist", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="DBNOCarryThrow", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="DBNOCarryDrop", Key=Gamepad_FaceButton_Top)

; Interaction - ConfigF_Athena
; We don't bind AlternateInteractCarry because for gamepad we have GamepadToggleHarvestWeaponOrAltInteract for this config.
+ActionMappings=(ActionName="AlternateInteractPlace", Key=Gamepad_FaceButton_Top)

; Creative Move Tool - Equipped - ConfigF_Athena
+ActionMappings=(ActionName="CreativeMoveToolEquippedGrabOrLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveToolEquippedCopyGrabOrDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="PossessPropActivate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeQuickbarActivateClutch", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeQuickbarKey1", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeQuickbarKey2", Key=Gamepad_Dpad_Right)
+ActionMappings=(ActionName="CreativeQuickbarKey3", Key=Gamepad_Dpad_Down)
+ActionMappings=(ActionName="CreativeQuickbarKey4", Key=Gamepad_Dpad_Left)
+ActionMappings=(ActionName="CreativeQuickbarKey5", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="CreativeQuickbarKey6", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="CreativeQuickbarKey7", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="CreativeQuickbarKey8", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="CreativeMoveToolEquippedDelete", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="CreativeMoveToolMultiSelect", Key=Gamepad_Dpad_Right)
+ActionMappings=(ActionName="CreativeMoveToolClearMultiSelect", Key=)
+ActionMappings=(ActionName="GamepadCreativeQuickbarSelectNext", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadCreativeQuickbarSelectPrevious", Key=Gamepad_LeftShoulder)
; Creative Move Tool - MoveObjectsFreely - ConfigF_Athena
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDropToFloor", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateClockwise", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateCounterclockwise", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelySwitchAxis", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPush", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPull", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyExit", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyChangePrecisionLevel", Key=Gamepad_DPad_Left)
; Creative Move Tool - MoveBuildingsOnGrid - ConfigF_Athena
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateClockwise", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateCounterclockwise", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridMirror", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridExit", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridChangePrecisionLevel", Key=Gamepad_DPad_Left)
; Creative All - ConfigF_Athena
+ActionMappings=(ActionName="CreativeFlyUp", Key=)
+ActionMappings=(ActionName="CreativeFlyDown", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="CreativeToggleGhost", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="CreativeToggleHeatmap", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadToggleHarvestOrHoldCreativePhone", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="ToggleQuickMenu", Key=Gamepad_Special_Left)
; Creative Island Panel - ConfigF_Athena
+ActionMappings=(ActionName="CreativeIslandPanelSupportAffiliate", Key=Gamepad_Facebutton_Top)
+ActionMappings=(ActionName="CreativeIslandPanelStartMinigame", Key=Gamepad_Facebutton_Left)
+ActionMappings=(ActionName="CreativeIslandPanelToggleDetails", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeToggleReady", Key=Gamepad_Facebutton_Left)
; Creative Prop Selector - ConfigF_Athena
+ActionMappings=(ActionName="PossessedPropPlace", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="PossessedPropCancel", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="PossessedPropMakeNoise", Key=Gamepad_Facebutton_Top)

; Picker - ConfigF_Athena
; Do not add more PickerCancel actions because the same action to open it should close it on the PickerInputComponent.
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="PickerCancel", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="PickerNextWheel", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="PickerPreviousWheel", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="FrontEndPickerNextWheel", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheel", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="FrontEndPickerNextWheelGamepad", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheelGamepad", Key=Gamepad_DPad_Left)

; PickerNull hides inputs by ignoring them while the Picker is up - ConfigF_Athena
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftThumbstick)

; Replay - ConfigF_Athena
+AxisMappings=(AxisName="ReplayLeftstick_HUD",Scale=1.000000,Key=Gamepad_LeftThumbstick)
+AxisMappings=(AxisName="ReplayRightstick_HUD",Scale=1.000000,Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="HoverDrone_IncreaseSpeed", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="HoverDrone_DecreaseSpeed", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="ToggleSpectatorHUD",Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="SpectatorSpecialAction", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="BroadcastToggleSquadIds",Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="TogglePauseState",Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="ReplaySpeedIncrease",Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="ReplaySpeedDecrease",Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="NextSpectatorCameraMode",Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="SpectatorZoomIn",Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="SwitchSpectatedPlayerUp", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SwitchSpectatedPlayerDown", Key=Gamepad_DPad_Down)
; Axis Mappings aren't picked up correctly by keybind widgets, so as a workaround we have UI specific action bindings
+ActionMappings=(ActionName="ReplayUIIncreaseDistance",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="ReplayUIDecreaseDistance",Key=Gamepad_RightTriggerAxis)

; Spectating - ConfigF_Athena
+ActionMappings=(ActionName="SwitchSpectatedPlayerUp", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SwitchSpectatedPlayerDown", Key=Gamepad_DPad_Down)

; Chat Channel Recommendation - ConfigF_Athena
+ActionMappings=(ActionName="GamepadGameChannelRecommendationHold", Key=Gamepad_Special_Right)

; Kairos Subscription Nudge - ConfigF_Athena
+ActionMappings=(ActionName="GamepadSubscriptionNudgeHold", Key=Gamepad_Special_Right)

; Battle Lab - ConfigF_Athena
+ActionMappings=(ActionName="GamepadBattleLabDevicePicker", Key=Gamepad_DPad_Right)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CONFIG G (Athena - Gamepad)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ConfigG_Athena FortPlayerInputSettings]
; Localized Strings - ConfigG_Athena
FriendlyName=LOCTEXT("BuilderProControllerConfiguration", "Builder Pro")

; Settings - ConfigG_Athena
bBuildingPickerOnlyChoosesCategories=true
bWeaponPickerShowOnlySlottedItems=true
bTrapPickerUsesRadial=true
bRadialClosesOnRelease=true
NumActiveTrapSlots=1
bWeaponSlotsAreSharedWhenUsingGamepad=false
bEditModeUsableFromCombatMode=true
HoldInputTime=0.25
HoldCraftAmmoTime=0.75
bEnabledForCampaign=false
bEnabledForAthena=true

; Combat - ConfigG_Athena
+ActionMappings=(ActionName="Fire", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="UseOrReload", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadSelectNextWeapon", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadSelectPreviousWeapon", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="Target", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadSprint", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="CrouchOrRepair", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHold", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="GamepadToggleFullScreenMap", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="GamepadToggleInventory", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="GamepadSquadQuickChatPicker", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="PlaceMapMarkerInWorld", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="GamepadStartRecordingHighlights", Key=Gamepad_DPad_Left)

; Building - ConfigG_Athena
+ActionMappings=(ActionName="GamepadBuildingSlot1", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadBuildingSlot2", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadBuildingSlot3", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadBuildingSlot4", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadUseOrTrapPickerAndPlace", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadRepairHoldOrRotateBuildingPiece", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="ChangeMaterial", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHoldWhileBuilding", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="GamepadToggleFullScreenMapWhileBuilding", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="GamepadToggleInventoryWhileBuilding", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="GamepadSquadQuickChatPickerWhileBuilding", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="GamepadSprintWhileBuilding", Key=Gamepad_LeftThumbstick)

; Combat And Building - ConfigG_Athena
+ActionMappings=(ActionName="GamepadSwitchModeOrEditBuilding", Key=Gamepad_FaceButton_Right)

; All Modes - ConfigG_Athena
+ActionMappings=(ActionName="GamepadToggleHarvestWeaponOrAltInteract", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="GamepadJump", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadEscapeKey", Key=Gamepad_Special_Right)

; Edit - ConfigG_Athena
+ActionMappings=(ActionName="EditSelect", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CompleteBuildingEditInteraction", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="BuildingEditReset", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadSprintWhileEditing", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadToggleFullScreenMapWhileEditing", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="GamepadToggleInventoryWhileEditing", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="GamepadSquadQuickChatPickerWhileEditing", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHoldWhileEditing", Key=Gamepad_DPad_Down)

; Fullscreen Map - ConfigG_Athena
+ActionMappings=(ActionName="SetMapCursor", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="RemoveMapCursor_Gamepad", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="MapZoomIn_Gamepad",Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="MapZoomOut_Gamepad",Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="Map_SwitchContext",Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="Map_PinUnpinVisibility",Key=Gamepad_DPad_Up)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Vehicle - ConfigG_Athena

; Shopping Cart - ConfigG_Athena
+ActionMappings=(ActionName="ShoppingCartCoast", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadShoppingCartExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadShoppingCartUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="ShoppingCartChangeSeat", Key=Gamepad_RightThumbstick)

; Cannon - ConfigG_Athena
+ActionMappings=(ActionName="GamepadCannonCoast", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadCannonShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadCannonExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadCannonUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="CannonChangeSeat", Key=Gamepad_RightThumbstick)

; Golf Cart - ConfigG_Athena
+ActionMappings=(ActionName="GamepadGolfCartEBrakeLeft", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadGolfCartEBrakeRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadGolfCartForward",Key=Gamepad_RightTriggerAxis)
+ActionMappings=(ActionName="GamepadGolfCartReverse",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="GamepadGolfCartExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadGolfCartUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GolfCartChangeSeat", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GolfCartHonk", Key=Gamepad_DPad_Down)

; Quad Crasher - ConfigG_Athena
+ActionMappings=(ActionName="GamepadQuadCrasherBoostLeft", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadQuadCrasherBoostRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadQuadCrasherBoostExtra", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadQuadCrasherForward",Key=Gamepad_RightTriggerAxis)
+ActionMappings=(ActionName="GamepadQuadCrasherReverse",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="GamepadQuadCrasherExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadQuadCrasherUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="QuadCrasherChangeSeat", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="QuadCrasherHonk", Key=Gamepad_DPad_Down)

; Biplane - ConfigG_Athena
+ActionMappings=(ActionName="GamepadBiplaneBoost", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadBiplaneShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadBiplaneRollRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadBiplaneRollLeft", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadBiplaneStartEngine", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadBiplaneStopEngine", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadBiplaneTaxiBackwards", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadBiplaneExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadBiplaneUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="BiplaneChangeSeat", Key=Gamepad_RightThumbstick)

; Hamsterball - ConfigG_Athena
+ActionMappings=(ActionName="GamepadHamsterballBoostLeft", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadHamsterballBoostRight", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadHamsterballShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadHamsterballRetract", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadHamsterballExit", Key=Gamepad_FaceButton_Left)

; Jackal - ConfigG_Athena
+ActionMappings=(ActionName="GamepadJackalBoostLeft", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadJackalBoostRight", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadJackalUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadJackalJump", Key=Gamepad_FaceButton_Bottom)

; Mounted Turret - ConfigG_Athena
+ActionMappings=(ActionName="GamepadMountedTurretExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadMountedTurretJump", Key=Gamepad_FaceButton_Bottom)

; Ostrich - ConfigG_Athena
+ActionMappings=(ActionName="GamepadOstrichJump", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadOstrichBoost", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadOstrichSelfDestructDriver", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadOstrichStomp", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadOstrichHonk", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="OstrichExitDriver", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadOstrichShieldBoost", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="GamepadOstrichSelfDestructPassenger", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadOstrichShotgun", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadOstrichMissiles", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="OstrichExitPassenger", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="OstrichChangeSeat", Key=Gamepad_RightThumbstick)

; Meatball - ConfigG_Athena
+ActionMappings=(ActionName="GamepadMeatballBoostLeft", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadMeatballBoostRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadMeatballBoostExtra", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadMeatballShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadMeatballTargeting", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadMeatballExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadMeatballUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="MeatballChangeSeat", Key=Gamepad_RightThumbstick)

; Hoagie - ConfigG_Athena
+ActionMappings=(ActionName="GamepadHoagieExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="HoagieChangeSeats", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadHoagieBoost", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadHoagieHonk", Key=Gamepad_Dpad_Down)
+ActionMappings=(ActionName="GamepadHoagieMoveUpButton", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadHoagieMoveDownButton", Key=Gamepad_LeftTrigger)

; END VEHICLES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; DBNO Carry - ConfigG_Athena
+ActionMappings=(ActionName="DBNOCarryHoist", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="DBNOCarryThrow", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="DBNOCarryDrop", Key=Gamepad_FaceButton_Top)

; Interaction - ConfigG_Athena
; We don't bind AlternateInteractCarry because for gamepad we have GamepadToggleHarvestWeaponOrAltInteract for this config.
+ActionMappings=(ActionName="AlternateInteractPlace", Key=Gamepad_FaceButton_Top)

; Creative Move Tool - Equipped - ConfigG_Athena
+ActionMappings=(ActionName="CreativeMoveToolEquippedGrabOrLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveToolEquippedCopyGrabOrDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="PossessPropActivate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeQuickbarActivateClutch", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeQuickbarKey1", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeQuickbarKey2", Key=Gamepad_Dpad_Right)
+ActionMappings=(ActionName="CreativeQuickbarKey3", Key=Gamepad_Dpad_Down)
+ActionMappings=(ActionName="CreativeQuickbarKey4", Key=Gamepad_Dpad_Left)
+ActionMappings=(ActionName="CreativeQuickbarKey5", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="CreativeQuickbarKey6", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="CreativeQuickbarKey7", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="CreativeQuickbarKey8", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="CreativeMoveToolEquippedDelete", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="CreativeMoveToolMultiSelect", Key=Gamepad_Dpad_Right)
+ActionMappings=(ActionName="CreativeMoveToolClearMultiSelect", Key=)
+ActionMappings=(ActionName="GamepadCreativeQuickbarSelectNext", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadCreativeQuickbarSelectPrevious", Key=Gamepad_LeftShoulder)
; Creative Move Tool - MoveObjectsFreely - ConfigG_Athena
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDropToFloor", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateClockwise", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateCounterclockwise", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelySwitchAxis", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPush", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPull", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyExit", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyChangePrecisionLevel", Key=Gamepad_DPad_Left)
; Creative Move Tool - MoveBuildingsOnGrid - ConfigG_Athena
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateClockwise", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateCounterclockwise", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridMirror", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridExit", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridChangePrecisionLevel", Key=Gamepad_DPad_Left)
; Creative All - ConfigG_Athena
+ActionMappings=(ActionName="CreativeFlyUp", Key=)
+ActionMappings=(ActionName="CreativeFlyDown", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="CreativeToggleGhost", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="CreativeToggleHeatmap", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadToggleHarvestOrHoldCreativePhone", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="ToggleQuickMenu", Key=Gamepad_Special_Left)
; Creative Island Panel - ConfigG_Athena
+ActionMappings=(ActionName="CreativeIslandPanelSupportAffiliate", Key=Gamepad_Facebutton_Top)
+ActionMappings=(ActionName="CreativeIslandPanelStartMinigame", Key=Gamepad_Facebutton_Left)
+ActionMappings=(ActionName="CreativeIslandPanelToggleDetails", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeToggleReady", Key=Gamepad_Facebutton_Left)
; Creative Prop Selector - ConfigG_Athena
+ActionMappings=(ActionName="PossessedPropPlace", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="PossessedPropCancel", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="PossessedPropMakeNoise", Key=Gamepad_Facebutton_Top)

; Picker - ConfigG_Athena
; Do not add more PickerCancel actions because the same action to open it should close it on the PickerInputComponent.
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="PickerCancel", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="PickerNextWheel", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="PickerPreviousWheel", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="FrontEndPickerNextWheel", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheel", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="FrontEndPickerNextWheelGamepad", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheelGamepad", Key=Gamepad_DPad_Left)

; PickerNull hides inputs by ignoring them while the Picker is up - ConfigG_Athena
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftThumbstick)

; Replay - ConfigG_Athena
+AxisMappings=(AxisName="ReplayLeftstick_HUD",Scale=1.000000,Key=Gamepad_LeftThumbstick)
+AxisMappings=(AxisName="ReplayRightstick_HUD",Scale=1.000000,Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="HoverDrone_IncreaseSpeed", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="HoverDrone_DecreaseSpeed", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="ToggleSpectatorHUD",Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="SpectatorSpecialAction", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="BroadcastToggleSquadIds",Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="TogglePauseState",Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="ReplaySpeedIncrease",Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="ReplaySpeedDecrease",Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="NextSpectatorCameraMode",Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="SpectatorZoomIn",Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="SwitchSpectatedPlayerUp", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SwitchSpectatedPlayerDown", Key=Gamepad_DPad_Down)
; Axis Mappings aren't picked up correctly by keybind widgets, so as a workaround we have UI specific action bindings
+ActionMappings=(ActionName="ReplayUIIncreaseDistance",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="ReplayUIDecreaseDistance",Key=Gamepad_RightTriggerAxis)

; Spectating - ConfigG_Athena
+ActionMappings=(ActionName="SwitchSpectatedPlayerUp", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SwitchSpectatedPlayerDown", Key=Gamepad_DPad_Down)

; Chat Channel Recommendation - ConfigG_Athena
+ActionMappings=(ActionName="GamepadGameChannelRecommendationHold", Key=Gamepad_Special_Right)

; Kairos Subscription Nudge - ConfigG_Athena
+ActionMappings=(ActionName="GamepadSubscriptionNudgeHold", Key=Gamepad_Special_Right)

; Battle Lab - ConfigG_Athena
+ActionMappings=(ActionName="GamepadBattleLabDevicePicker", Key=Gamepad_DPad_Right)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CONFIG H (Athena - Mobile Gamepad With Fewer Available Keys)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ConfigH_Athena FortPlayerInputSettings]
; Localized Strings - ConfigH_Athena
FriendlyName=LOCTEXT("LimitedControllerConfiguration", "Limited")

; Settings - ConfigH_Athena
bBuildingPickerOnlyChoosesCategories=true
bWeaponPickerShowOnlySlottedItems=true
bTrapPickerUsesRadial=true
bRadialClosesOnRelease=true
NumActiveTrapSlots=1
bWeaponSlotsAreSharedWhenUsingGamepad=false
bEditModeUsableFromCombatMode=true
HoldInputTime=0.25
HoldCraftAmmoTime=0.75
bEnabledForCampaign=false
bEnabledForAthena=false

; Combat - ConfigH_Athena
+ActionMappings=(ActionName="Fire", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="UseOrReload", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadSelectNextWeapon", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadSelectPreviousWeapon", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="Target", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHold", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CrouchOrRepair", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="GamepadToggleFullScreenMap", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="GamepadToggleInventory", Key=Gamepad_DPad_Left)

; Building - ConfigH_Athena
+ActionMappings=(ActionName="GamepadBuildingSlot1", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadBuildingSlot2", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadBuildingSlot3", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadBuildingSlot4", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadUseOrTrapPickerAndPlace", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="ChangeMaterial", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="GamepadRepairHoldOrRotateBuildingPiece", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="GamepadToggleFullScreenMapWhileBuilding", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="GamepadToggleInventoryWhileBuilding", Key=Gamepad_DPad_Left)

; Combat And Building - ConfigH_Athena
+ActionMappings=(ActionName="GamepadSwitchModeOrEditBuilding", Key=Gamepad_FaceButton_Right)

; All Modes - ConfigH_Athena
+ActionMappings=(ActionName="GamepadToggleHarvestWeaponOrAltInteract", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="GamepadJump", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadEscapeKey", Key=Gamepad_Special_Right)

; Edit - ConfigH_Athena
+ActionMappings=(ActionName="EditSelect", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CompleteBuildingEditInteraction", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="BuildingEditReset", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadSprintWhileEditing", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadToggleFullScreenMapWhileEditing", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="GamepadToggleInventoryWhileEditing", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHoldWhileEditing", Key=Gamepad_DPad_Up)

; Fullscreen Map - ConfigH_Athena
+ActionMappings=(ActionName="SetMapCursor", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="RemoveMapCursor_Gamepad", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="MapZoomIn_Gamepad",Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="MapZoomOut_Gamepad",Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="Map_SwitchContext",Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="Map_PinUnpinVisibility",Key=Gamepad_DPad_Up)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Vehicle - ConfigH_Athena

; Shopping Cart - ConfigH_Athena
+ActionMappings=(ActionName="ShoppingCartCoast", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadShoppingCartExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadShoppingCartUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="ShoppingCartChangeSeat", Key=Gamepad_DPad_Left)

; Cannon - ConfigH_Athena
+ActionMappings=(ActionName="GamepadCannonCoast", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadCannonShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadCannonExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadCannonUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="CannonChangeSeat", Key=Gamepad_DPad_Left)

; Golf Cart - ConfigH_Athena
+ActionMappings=(ActionName="GamepadGolfCartEBrakeLeft", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadGolfCartEBrakeRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadGolfCartForward",Key=Gamepad_RightTriggerAxis)
+ActionMappings=(ActionName="GamepadGolfCartReverse",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="GamepadGolfCartExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadGolfCartUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GolfCartChangeSeat", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="GolfCartHonk", Key=Gamepad_DPad_Down)

; Quad Crasher - ConfigH_Athena
+ActionMappings=(ActionName="GamepadQuadCrasherBoostLeft", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadQuadCrasherBoostRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadQuadCrasherBoostExtra", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadQuadCrasherForward",Key=Gamepad_RightTriggerAxis)
+ActionMappings=(ActionName="GamepadQuadCrasherReverse",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="GamepadQuadCrasherExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadQuadCrasherUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="QuadCrasherChangeSeat", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="QuadCrasherHonk", Key=Gamepad_DPad_Down)

; Biplane - ConfigH_Athena
+ActionMappings=(ActionName="GamepadBiplaneBoost", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadBiplaneShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadBiplaneRollRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadBiplaneRollLeft", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadBiplaneStartEngine", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadBiplaneStopEngine", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadBiplaneTaxiBackwards", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadBiplaneExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadBiplaneUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="BiplaneChangeSeat", Key=Gamepad_DPad_Left)

; Hamsterball - ConfigH_Athena
+ActionMappings=(ActionName="GamepadHamsterballBoostLeft", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadHamsterballBoostRight", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadHamsterballShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadHamsterballRetract", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadHamsterballExit", Key=Gamepad_FaceButton_Left)

; Jackal - ConfigH_Athena
+ActionMappings=(ActionName="GamepadJackalBoostLeft", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadJackalBoostRight", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="GamepadJackalUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadJackalJump", Key=Gamepad_FaceButton_Bottom)

; Mounted Turret - ConfigH_Athena
+ActionMappings=(ActionName="GamepadMountedTurretExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadMountedTurretJump", Key=Gamepad_FaceButton_Bottom)

; Ostrich - ConfigH_Athena
+ActionMappings=(ActionName="GamepadOstrichJump", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadOstrichBoost", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadOstrichSelfDestructDriver", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadOstrichStomp", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadOstrichHonk", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="OstrichExitDriver", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadOstrichShieldBoost", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="GamepadOstrichSelfDestructPassenger", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadOstrichShotgun", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadOstrichMissiles", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="OstrichExitPassenger", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="OstrichChangeSeat", Key=Gamepad_DPad_Left)

; Meatball - ConfigH_Athena
+ActionMappings=(ActionName="GamepadMeatballBoostLeft", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadMeatballBoostRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadMeatballBoostExtra", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadMeatballShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadMeatballTargeting", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadMeatballExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadMeatballUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="MeatballChangeSeat", Key=Gamepad_DPad_Left)

; Hoagie - ConfigH_Athena
+ActionMappings=(ActionName="GamepadHoagieExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="HoagieChangeSeats", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadHoagieBoost", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadHoagieHonk", Key=Gamepad_Dpad_Down)
+ActionMappings=(ActionName="GamepadHoagieMoveUpButton", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadHoagieMoveDownButton", Key=Gamepad_LeftTrigger)

; END VEHICLES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; DBNO Carry - ConfigH_Athena
+ActionMappings=(ActionName="DBNOCarryHoist", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="DBNOCarryThrow", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="DBNOCarryDrop", Key=Gamepad_FaceButton_Top)

; Interaction - ConfigH_Athena
; We don't bind AlternateInteractCarry because for gamepad we have GamepadToggleHarvestWeaponOrAltInteract for this config.
+ActionMappings=(ActionName="AlternateInteractPlace", Key=Gamepad_FaceButton_Top)

; Creative Move Tool - Equipped - ConfigH_Athena
+ActionMappings=(ActionName="CreativeMoveToolEquippedGrabOrLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveToolEquippedCopyGrabOrDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="PossessPropActivate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeQuickbarActivateClutch", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeQuickbarKey1", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeQuickbarKey2", Key=Gamepad_Dpad_Right)
+ActionMappings=(ActionName="CreativeQuickbarKey3", Key=Gamepad_Dpad_Down)
+ActionMappings=(ActionName="CreativeQuickbarKey4", Key=Gamepad_Dpad_Left)
+ActionMappings=(ActionName="CreativeQuickbarKey5", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="CreativeQuickbarKey6", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="CreativeQuickbarKey7", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="CreativeQuickbarKey8", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="CreativeMoveToolEquippedDelete", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="CreativeMoveToolMultiSelect", Key=Gamepad_Dpad_Right)
+ActionMappings=(ActionName="CreativeMoveToolClearMultiSelect", Key=)
+ActionMappings=(ActionName="GamepadCreativeQuickbarSelectNext", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadCreativeQuickbarSelectPrevious", Key=Gamepad_LeftShoulder)
; Creative Move Tool - MoveObjectsFreely - ConfigH_Athena
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDropToFloor", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateClockwise", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateCounterclockwise", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelySwitchAxis", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPush", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPull", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyExit", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyChangePrecisionLevel", Key=Gamepad_DPad_Left)
; Creative Move Tool - MoveBuildingsOnGrid - ConfigH_Athena
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateClockwise", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateCounterclockwise", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridMirror", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridExit", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridChangePrecisionLevel", Key=Gamepad_DPad_Left)
; Creative All - ConfigH_Athena
+ActionMappings=(ActionName="CreativeFlyUp", Key=)
+ActionMappings=(ActionName="CreativeFlyDown", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="CreativeToggleGhost", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="CreativeToggleHeatmap", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadToggleHarvestOrHoldCreativePhone", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="ToggleQuickMenu", Key=Gamepad_Special_Left)
; Creative Island Panel - ConfigH_Athena
+ActionMappings=(ActionName="CreativeIslandPanelSupportAffiliate", Key=Gamepad_Facebutton_Top)
+ActionMappings=(ActionName="CreativeIslandPanelStartMinigame", Key=Gamepad_Facebutton_Left)
+ActionMappings=(ActionName="CreativeIslandPanelToggleDetails", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeToggleReady", Key=Gamepad_Facebutton_Left)
; Creative Prop Selector - ConfigH_Athena
+ActionMappings=(ActionName="PossessedPropPlace", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="PossessedPropCancel", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="PossessedPropMakeNoise", Key=Gamepad_Facebutton_Top)

; Picker - ConfigH_Athena
; Do not add more PickerCancel actions because the same action to open it should close it on the PickerInputComponent.
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="PickerCancel", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="PickerNextWheel", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="PickerPreviousWheel", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="FrontEndPickerNextWheel", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheel", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="FrontEndPickerNextWheelGamepad", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheelGamepad", Key=Gamepad_DPad_Left)

; PickerNull hides inputs by ignoring them while the Picker is up - ConfigH_Athena
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftThumbstick)

; Replay - ConfigH_Athena
+AxisMappings=(AxisName="ReplayLeftstick_HUD",Scale=1.000000,Key=Gamepad_LeftThumbstick)
+AxisMappings=(AxisName="ReplayRightstick_HUD",Scale=1.000000,Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="HoverDrone_IncreaseSpeed", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="HoverDrone_DecreaseSpeed", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="ToggleSpectatorHUD",Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="SpectatorSpecialAction", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="BroadcastToggleSquadIds",Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="TogglePauseState",Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="ReplaySpeedIncrease",Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="ReplaySpeedDecrease",Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="NextSpectatorCameraMode",Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="SpectatorZoomIn",Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="SwitchSpectatedPlayerUp", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SwitchSpectatedPlayerDown", Key=Gamepad_DPad_Down)
; Axis Mappings aren't picked up correctly by keybind widgets, so as a workaround we have UI specific action bindings
+ActionMappings=(ActionName="ReplayUIIncreaseDistance",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="ReplayUIDecreaseDistance",Key=Gamepad_RightTriggerAxis)

; Spectating - ConfigH_Athena
+ActionMappings=(ActionName="SwitchSpectatedPlayerUp", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SwitchSpectatedPlayerDown", Key=Gamepad_DPad_Down)

; Chat Channel Recommendation - ConfigH_Athena
+ActionMappings=(ActionName="GamepadGameChannelRecommendationHold", Key=Gamepad_Special_Right)

; Kairos Subscription Nudge - ConfigH_Athena
+ActionMappings=(ActionName="GamepadSubscriptionNudgeHold", Key=Gamepad_Special_Right)

; Battle Lab - ConfigH_Athena
+ActionMappings=(ActionName="GamepadBattleLabDevicePicker", Key=Gamepad_DPad_Right)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CONFIG CUSTOM (Athena - Gamepad, this is a copy of ConfigG_Athena)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ConfigCustom_Athena FortPlayerInputSettings]
; Localized Strings - ConfigCustom_Athena
FriendlyName=LOCTEXT("CustomControllerConfiguration", "Custom")

; Settings - ConfigCustom_Athena
bBuildingPickerOnlyChoosesCategories=true
bWeaponPickerShowOnlySlottedItems=true
bTrapPickerUsesRadial=true
bRadialClosesOnRelease=true
NumActiveTrapSlots=1
bWeaponSlotsAreSharedWhenUsingGamepad=false
bEditModeUsableFromCombatMode=true
HoldInputTime=0.25
HoldCraftAmmoTime=0.75
bEnabledForCampaign=false
bEnabledForAthena=true

; Important bindings, we should warn the user if unbound.
+ActionsThatShouldAlwaysBeBound=(ActionName="Fire")
+ActionsThatShouldAlwaysBeBound=(ActionName="BuildConfirm", AlternateActionNames[0]="GamepadBuildingSlot1", AlternateActionNames[1]="GamepadBuildingSlot2", AlternateActionNames[2]="GamepadBuildingSlot3", AlternateActionNames[3]="GamepadBuildingSlot4")
+ActionsThatShouldAlwaysBeBound=(ActionName="Target")
+ActionsThatShouldAlwaysBeBound=(ActionName="GamepadJump")
+ActionsThatShouldAlwaysBeBound=(ActionName="GamepadSwitchMode", AlternateActionNames[0]="GamepadSwitchModeOrEditBuilding")
+ActionsThatShouldAlwaysBeBound=(ActionName="Use", AlternateActionNames[0]="UseOrReload")
+ActionsThatShouldAlwaysBeBound=(ActionName="Reload", AlternateActionNames[0]="UseOrReload")
+ActionsThatShouldAlwaysBeBound=(ActionName="GamepadSprint")
+ActionsThatShouldAlwaysBeBound=(ActionName="GamepadToggleFullScreenMap")
+ActionsThatShouldAlwaysBeBound=(ActionName="GamepadToggleInventory")

; Gamepad Action Key Aliases - ConfigCustom_Athena
; Trying to keep nothing in the Aliases because we don't want to show input unless it's bound.

; Combat - ConfigCustom_Athena
+ActionMappings=(ActionName="Fire", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="UseOrReload", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadSelectNextWeapon", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadSelectPreviousWeapon", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="Target", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="Use", Key=Invalid)
+ActionMappings=(ActionName="Reload", Key=Invalid)
+ActionMappings=(ActionName="GamepadSprint", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="CrouchOrRepair", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="Crouch", Key=Invalid)
+ActionMappings=(ActionName="GamepadEmotePicker", Key=Invalid)
+ActionMappings=(ActionName="GamepadLockerEmote1", Key=Invalid)
+ActionMappings=(ActionName="GamepadLockerEmote2", Key=Invalid)
+ActionMappings=(ActionName="GamepadLockerEmote3", Key=Invalid)
+ActionMappings=(ActionName="GamepadLockerEmote4", Key=Invalid)
+ActionMappings=(ActionName="GamepadLockerEmote5", Key=Invalid)
+ActionMappings=(ActionName="GamepadLockerEmote6", Key=Invalid)
+ActionMappings=(ActionName="GamepadReplayLastEmote", Key=Invalid)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHold", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="GamepadToggleFullScreenMap", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="GamepadToggleInventory", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="GamepadSquadQuickChatPicker", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="PlaceMapMarkerInWorld", Key=Gamepad_DPad_Left)

; Building - ConfigCustom_Athena
+ActionMappings=(ActionName="GamepadBuildingSlot1", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadBuildingSlot2", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadBuildingSlot3", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadBuildingSlot4", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadUseOrTrapPickerAndPlace", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="BuildConfirm", Key=Invalid)
+ActionMappings=(ActionName="GamepadNextBuilding", Key=Invalid)
+ActionMappings=(ActionName="GamepadPreviousBuilding", Key=Invalid)
+ActionMappings=(ActionName="GamepadUseOrTrapPicker", Key=Invalid)
+ActionMappings=(ActionName="GamepadRepairHoldOrRotateBuildingPiece", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="ChangeMaterial", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="RotatePrimitiveClockwise", Key=Invalid)
+ActionMappings=(ActionName="CrouchOrRepairWhileBuilding", Key=Invalid)
+ActionMappings=(ActionName="CrouchWhileBuilding", Key=Invalid)
+ActionMappings=(ActionName="GamepadEmotePickerWhileBuilding", Key=Invalid)
+ActionMappings=(ActionName="GamepadReplayLastEmoteWhileBuilding", Key=Invalid)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHoldWhileBuilding", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="GamepadToggleFullScreenMapWhileBuilding", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="GamepadToggleInventoryWhileBuilding", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="GamepadSquadQuickChatPickerWhileBuilding", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="GamepadSprintWhileBuilding", Key=Gamepad_LeftThumbstick)

; Combat And Building - ConfigCustom_Athena
+ActionMappings=(ActionName="PerformBuildingEditInteraction", Key=Invalid)
+ActionMappings=(ActionName="PerformBuildingImprovementInteraction", Key=Invalid)
+ActionMappings=(ActionName="GamepadSwitchModeOrEditBuilding", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadSwitchMode", Key=Invalid)

; All Modes - ConfigCustom_Athena
+ActionMappings=(ActionName="GamepadToggleHarvestWeaponOrAltInteract", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="GamepadJump", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadEscapeKey", Key=Gamepad_Special_Right)
+ActionMappings=(ActionName="PushToTalk", Key=Invalid)

; Edit - ConfigCustom_Athena
+ActionMappings=(ActionName="EditSelect", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CompleteBuildingEditInteraction", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="BuildingEditReset", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadSprintWhileEditing", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadToggleFullScreenMapWhileEditing", Key=Gamepad_Special_Left)
+ActionMappings=(ActionName="GamepadToggleInventoryWhileEditing", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="GamepadSquadQuickChatPickerWhileEditing", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="GamepadEmotePickerOrReplayLastEmoteHoldWhileEditing", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="CrouchWhileEditing", Key=Invalid)
+ActionMappings=(ActionName="CrouchOrRepairWhileEditing", Key=Invalid)
+ActionMappings=(ActionName="GamepadEmotePickerWhileEditing", Key=Invalid)
+ActionMappings=(ActionName="GamepadReplayLastEmoteWhileEditing", Key=Invalid)

; Fullscreen Map - ConfigCustom_Athena
+ActionMappings=(ActionName="SetMapCursor", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="RemoveMapCursor_Gamepad", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="MapZoomIn_Gamepad",Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="MapZoomOut_Gamepad",Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="Map_SwitchContext",Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="Map_PinUnpinVisibility",Key=Gamepad_DPad_Up)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Vehicle - ConfigCustom_Athena

; Shopping Cart - ConfigCustom_Athena
+ActionMappings=(ActionName="ShoppingCartCoast", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadShoppingCartExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadShoppingCartUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="ShoppingCartChangeSeat", Key=Gamepad_RightThumbstick)

; Cannon - ConfigCustom_Athena
+ActionMappings=(ActionName="GamepadCannonCoast", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadCannonShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadCannonExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadCannonUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="CannonChangeSeat", Key=Gamepad_RightThumbstick)

; Golf Cart - ConfigCustom_Athena
+ActionMappings=(ActionName="GamepadGolfCartEBrakeLeft", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadGolfCartEBrakeRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadGolfCartForward",Key=Gamepad_RightTriggerAxis)
+ActionMappings=(ActionName="GamepadGolfCartReverse",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="GamepadGolfCartExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadGolfCartUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GolfCartChangeSeat", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GolfCartHonk", Key=Gamepad_DPad_Down)

; Quad Crasher - ConfigCustom_Athena
+ActionMappings=(ActionName="GamepadQuadCrasherBoostLeft", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadQuadCrasherBoostRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadQuadCrasherBoostExtra", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadQuadCrasherForward",Key=Gamepad_RightTriggerAxis)
+ActionMappings=(ActionName="GamepadQuadCrasherReverse",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="GamepadQuadCrasherExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadQuadCrasherUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="QuadCrasherChangeSeat", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="QuadCrasherHonk", Key=Gamepad_DPad_Down)

; Biplane - ConfigCustom_Athena
+ActionMappings=(ActionName="GamepadBiplaneBoost", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadBiplaneShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadBiplaneRollRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadBiplaneRollLeft", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadBiplaneStartEngine", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadBiplaneStopEngine", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadBiplaneTaxiBackwards", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadBiplaneExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadBiplaneUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="BiplaneChangeSeat", Key=Gamepad_RightThumbstick)

; Hamsterball - ConfigCustom_Athena
+ActionMappings=(ActionName="GamepadHamsterballBoostLeft", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadHamsterballBoostRight", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadHamsterballShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadHamsterballRetract", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadHamsterballExit", Key=Gamepad_FaceButton_Left)

; Jackal - ConfigCustom_Athena
+ActionMappings=(ActionName="GamepadJackalBoostLeft", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadJackalBoostRight", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadJackalUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadJackalJump", Key=Gamepad_FaceButton_Bottom)

; Mounted Turret - ConfigCustom_Athena
+ActionMappings=(ActionName="GamepadMountedTurretExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadMountedTurretJump", Key=Gamepad_FaceButton_Bottom)

; Ostrich - ConfigCustom_Athena
+ActionMappings=(ActionName="GamepadOstrichJump", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="GamepadOstrichBoost", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadOstrichSelfDestructDriver", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadOstrichStomp", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadOstrichHonk", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="OstrichExitDriver", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadOstrichShieldBoost", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="GamepadOstrichSelfDestructPassenger", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="GamepadOstrichShotgun", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadOstrichMissiles", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="OstrichExitPassenger", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="OstrichChangeSeat", Key=Gamepad_RightThumbstick)

; Meatball - ConfigCustom_Athena
+ActionMappings=(ActionName="GamepadMeatballBoostLeft", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="GamepadMeatballBoostRight", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadMeatballBoostExtra", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="GamepadMeatballShoot", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadMeatballTargeting", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="GamepadMeatballExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="GamepadMeatballUseOrExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="MeatballChangeSeat", Key=Gamepad_RightThumbstick)

; Hoagie - ConfigCustom_Athena
+ActionMappings=(ActionName="GamepadHoagieExit", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="HoagieChangeSeats", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="GamepadHoagieBoost", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="GamepadHoagieHonk", Key=Gamepad_Dpad_Down)
+ActionMappings=(ActionName="GamepadHoagieMoveUpButton", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="GamepadHoagieMoveDownButton", Key=Gamepad_LeftTrigger)

; END VEHICLES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; DBNO Carry - ConfigCustom_Athena
+ActionMappings=(ActionName="DBNOCarryHoist", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="DBNOCarryThrow", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="DBNOCarryDrop", Key=Gamepad_FaceButton_Top)

; Interaction - ConfigCustom_Athena
; We don't bind AlternateInteractCarry because for gamepad we have GamepadToggleHarvestWeaponOrAltInteract for this config.
+ActionMappings=(ActionName="AlternateInteractCarry", Key=Invalid)
+ActionMappings=(ActionName="AlternateInteractPlace", Key=Gamepad_FaceButton_Top)

; Creative Move Tool - Equipped - ConfigCustom_Athena
+ActionMappings=(ActionName="CreativeMoveToolEquippedGrabOrLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveToolEquippedCopyGrabOrDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="PossessPropActivate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeQuickbarActivateClutch", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeQuickbarKey1", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeQuickbarKey2", Key=Gamepad_Dpad_Right)
+ActionMappings=(ActionName="CreativeQuickbarKey3", Key=Gamepad_Dpad_Down)
+ActionMappings=(ActionName="CreativeQuickbarKey4", Key=Gamepad_Dpad_Left)
+ActionMappings=(ActionName="CreativeQuickbarKey5", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="CreativeQuickbarKey6", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="CreativeQuickbarKey7", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="CreativeQuickbarKey8", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="CreativeMoveToolEquippedDelete", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="CreativeMoveToolMultiSelect", Key=Gamepad_Dpad_Right)
+ActionMappings=(ActionName="CreativeMoveToolClearMultiSelect", Key=)
+ActionMappings=(ActionName="GamepadCreativeQuickbarSelectNext", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="GamepadCreativeQuickbarSelectPrevious", Key=Gamepad_LeftShoulder)
; Creative Move Tool - MoveObjectsFreely - ConfigCustom_Athena
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyDropToFloor", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateClockwise", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyRotateCounterclockwise", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelySwitchAxis", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPush", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyPull", Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyExit", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeMoveObjectsFreelyChangePrecisionLevel", Key=Gamepad_DPad_Left)
; Creative Move Tool - MoveBuildingsOnGrid - ConfigCustom_Athena
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridLetGo", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridDuplicate", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateClockwise", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridRotateCounterclockwise", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridMirror", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridExit", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeMoveBuildingsOnGridChangePrecisionLevel", Key=Gamepad_DPad_Left)
; Creative Flying - ConfigCustom_Athena
+ActionMappings=(ActionName="CreativeFlyUp", Key=)
+ActionMappings=(ActionName="CreativeFlyDown", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="CreativeToggleGhost", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="CreativeToggleHeatmap", Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="ToggleQuickMenu", Key=Gamepad_Special_Left)
; Creative All - ConfigCustom_Athena
+ActionMappings=(ActionName="GamepadToggleCreativePhoneWeapon", Key=Invalid)
+ActionMappings=(ActionName="GamepadToggleHarvestOrHoldCreativePhone", Key=Gamepad_FaceButton_Top)
; Creative Island Panel - ConfigCustom_Athena
+ActionMappings=(ActionName="CreativeIslandPanelSupportAffiliate", Key=Gamepad_Facebutton_Top)
+ActionMappings=(ActionName="CreativeIslandPanelStartMinigame", Key=Gamepad_Facebutton_Left)
+ActionMappings=(ActionName="CreativeIslandPanelToggleDetails", Key=Gamepad_Facebutton_Right)
+ActionMappings=(ActionName="CreativeToggleReady", Key=Gamepad_Facebutton_Left)
; Creative Prop Selector - ConfigCustom_Athena
+ActionMappings=(ActionName="PossessedPropPlace", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="PossessedPropCancel", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="PossessedPropMakeNoise", Key=Gamepad_Facebutton_Top)

; Picker - ConfigCustom_Athena
; Do not add more PickerCancel actions because the same action to open it should close it on the PickerInputComponent.
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_FaceButton_Bottom)
+ActionMappings=(ActionName="PickerConfirm", Key=Gamepad_RightTrigger)
+ActionMappings=(ActionName="PickerCancel", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="PickerNextWheel", Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="PickerPreviousWheel", Key=Gamepad_LeftShoulder)
+ActionMappings=(ActionName="FrontEndPickerNextWheel", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheel", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="FrontEndPickerNextWheelGamepad", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="FrontEndPickerPreviousWheelGamepad", Key=Gamepad_DPad_Left)

; PickerNull hides inputs by ignoring them while the Picker is up - ConfigCustom_Athena
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftTrigger)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Left)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_DPad_Right)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="PickerNull", Key=Gamepad_LeftThumbstick)

; Replay - ConfigCustom_Athena
+AxisMappings=(AxisName="ReplayLeftstick_HUD",Scale=1.000000,Key=Gamepad_LeftThumbstick)
+AxisMappings=(AxisName="ReplayRightstick_HUD",Scale=1.000000,Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="HoverDrone_IncreaseSpeed", Key=Gamepad_FaceButton_Right)
+ActionMappings=(ActionName="HoverDrone_DecreaseSpeed", Key=Gamepad_FaceButton_Left)
+ActionMappings=(ActionName="ToggleSpectatorHUD",Key=Gamepad_LeftThumbstick)
+ActionMappings=(ActionName="SpectatorSpecialAction", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="BroadcastToggleSquadIds",Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="TogglePauseState",Key=Gamepad_FaceButton_Top)
+ActionMappings=(ActionName="ReplaySpeedIncrease",Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="ReplaySpeedDecrease",Key=Gamepad_DPad_Down)
+ActionMappings=(ActionName="NextSpectatorCameraMode",Key=Gamepad_RightThumbstick)
+ActionMappings=(ActionName="SpectatorZoomIn",Key=Gamepad_RightShoulder)
+ActionMappings=(ActionName="SwitchSpectatedPlayerUp", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SwitchSpectatedPlayerDown", Key=Gamepad_DPad_Down)
; Axis Mappings aren't picked up correctly by keybind widgets, so as a workaround we have UI specific action bindings
+ActionMappings=(ActionName="ReplayUIIncreaseDistance",Key=Gamepad_LeftTriggerAxis)
+ActionMappings=(ActionName="ReplayUIDecreaseDistance",Key=Gamepad_RightTriggerAxis)

; Spectating - ConfigCustom_Athena
+ActionMappings=(ActionName="SwitchSpectatedPlayerUp", Key=Gamepad_DPad_Up)
+ActionMappings=(ActionName="SwitchSpectatedPlayerDown", Key=Gamepad_DPad_Down)

; Chat Channel Recommendation - ConfigCustom_Athena
+ActionMappings=(ActionName="GamepadGameChannelRecommendationHold", Key=Gamepad_Special_Right)

; Kairos Subscription Nudge - ConfigCustom_Athena
+ActionMappings=(ActionName="GamepadSubscriptionNudgeHold", Key=Gamepad_Special_Right)

; Battle Lab - ConfigCustom_Athena
+ActionMappings=(ActionName="GamepadBattleLabDevicePicker", Key=Gamepad_DPad_Right)


[/Script/EngineSettings.ConsoleSettings]
;There are too many maps, and it causes the console to lag trying to find them all
!AutoCompleteMapPaths=ClearArray
+ManualAutoCompleteList=(Command="STARTSAFEZONE",Desc="Start safe zones")
+ManualAutoCompleteList=(Command="SKIPSHRINKSAFEZONE",Desc="Go to the next safe zone size")
+ManualAutoCompleteList=(Command="STARTSHRINKSAFEZONE",Desc="Skip the hold timer for safe zones")
+ManualAutoCompleteList=(Command="PAUSESAFEZONE",Desc="Pause the safe zone")
+ManualAutoCompleteList=(Command="UNPAUSEWARMUP",Desc="Start the warmup countdown if it was paused.")
+ManualAutoCompleteList=(Command="STARTAIRCRAFT",Desc="Force the aircraft phase to start")
+ManualAutoCompleteList=(Command="UNPAUSEAIRCRAFT",Desc="Start the aircraft along it's path if it was paused.")
+ManualAutoCompleteList=(Command="AIRCRAFTUNLOCK",Desc="Unlock the aircraft and allow jumps")
+ManualAutoCompleteList=(Command="SPAWNSUPPLYDROP",Desc="Spawn a supply drop")
+ManualAutoCompleteList=(Command="SPAWNEXITCRAFT",Desc="Spawns an Exit Craft")
+ManualAutoCompleteList=(Command="SPAWNEXITCRAFTFAST",Desc="Spawns an Exit Craft")
+ManualAutoCompleteList=(Command="SPAWNLLAMA",Desc="Spawn a llama")
+ManualAutoCompleteList=(Command="SPAWNMEGASTORM",Desc="Spawn a mega storm at the safezone edge")
+ManualAutoCompleteList=(Command="MATCHMAKE",Desc="Start Athena matchmaking")
+ManualAutoCompleteList=(Command="ShowDebug PlayerInput",Desc="ShowDebug PlayerInput (Toggles whether player input data is being displayed on the debug canvas or not)")
+ManualAutoCompleteList=(Command="DebugCreatePlayerWithLoginInfo 1",Desc="<Email> <Password> Create a splitscreen player")
+ManualAutoCompleteList=(Command="FNPIESet",Desc="<ClassName> <PropertyName> <Value> Sets property to value on objects active in a PIE session")

[/Script/Engine.InputSettings]
+AxisConfig=(AxisKeyName="Gamepad_LeftX",AxisProperties=(DeadZone=0.250000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="Gamepad_LeftY",AxisProperties=(DeadZone=0.250000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="Gamepad_RightX",AxisProperties=(DeadZone=0.250000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="Gamepad_RightY",AxisProperties=(DeadZone=0.250000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="MouseX",AxisProperties=(DeadZone=0.000000,Sensitivity=0.070000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="MouseY",AxisProperties=(DeadZone=0.000000,Sensitivity=0.070000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="MouseWheelAxis",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="Gamepad_LeftTriggerAxis",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="Gamepad_RightTriggerAxis",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="MotionController_Left_Thumbstick_X",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="MotionController_Left_Thumbstick_Y",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="MotionController_Left_TriggerAxis",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="MotionController_Left_Grip1Axis",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="MotionController_Left_Grip2Axis",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="MotionController_Right_Thumbstick_X",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="MotionController_Right_Thumbstick_Y",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="MotionController_Right_TriggerAxis",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="MotionController_Right_Grip1Axis",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="MotionController_Right_Grip2Axis",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="Gamepad_Special_Left_X",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="Gamepad_Special_Left_Y",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="TouchMoveX",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="TouchMoveY",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="TouchLookMouseX",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="TouchLookMouseY",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="TouchLookStickX",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="TouchLookStickY",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="MotionController_Left_Thumbstick_Z",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="MotionController_Right_Thumbstick_Z",AxisProperties=(DeadZone=0.000000,Sensitivity=1.000000,Exponent=1.000000,bInvert=False))
+AxisConfig=(AxisKeyName="RotationRate",AxisProperties=(DeadZone=0.000000,Sensitivity=0.000000,Exponent=1.500000,bInvert=False))
bAltEnterTogglesFullscreen=True
bF11TogglesFullscreen=True
bUseMouseForTouch=False
bEnableMouseSmoothing=True
bEnableFOVScaling=True
bCaptureMouseOnLaunch=True
bDefaultViewportMouseLock=False
bAlwaysShowTouchInterface=False
bShowConsoleOnFourFingerTap=True
bEnableGestureRecognizer=False
bUseAutocorrect=True
+ExcludedAutocorrectCultures=zh
+ExcludedAutocorrectCultures=ko
+ExcludedAutocorrectCultures=ja
+ExcludedAutocorrectDeviceModels=SM-G
DefaultViewportMouseCaptureMode=CapturePermanently_IncludingInitialMouseDown
DefaultViewportMouseLockMode=LockOnCapture
FOVScale=0.011110
DoubleClickTime=0.200000
+ActionMappings=(ActionName="",bShift=False,bCtrl=False,bAlt=False,bCmd=False,Key=None)
+AxisMappings=(AxisName="MoveForward",Scale=1.000000,Key=W)
+AxisMappings=(AxisName="MoveForward",Scale=-1.000000,Key=S)
+AxisMappings=(AxisName="MoveForward",Scale=1.000000,Key=Up)
+AxisMappings=(AxisName="MoveForward",Scale=-1.000000,Key=Down)
+AxisMappings=(AxisName="MoveForward_Gamepad",Scale=1.000000,Key=Gamepad_LeftY)
+AxisMappings=(AxisName="MoveRight",Scale=-1.000000,Key=A)
+AxisMappings=(AxisName="MoveRight",Scale=1.000000,Key=D)
+AxisMappings=(AxisName="MoveRight",Scale=1.000000,Key=Right)
+AxisMappings=(AxisName="MoveRight",Scale=-1.000000,Key=Left)
+AxisMappings=(AxisName="MoveRight_Gamepad",Scale=1.000000,Key=Gamepad_LeftX)
+AxisMappings=(AxisName="MoveUp",Scale=1.000000,Key=Gamepad_LeftThumbstick)
+AxisMappings=(AxisName="MoveUp",Scale=1.000000,Key=Gamepad_FaceButton_Bottom)
+AxisMappings=(AxisName="MoveUp",Scale=1.000000,Key=SpaceBar)
+AxisMappings=(AxisName="Turn_Gamepad",Scale=1.000000,Key=Gamepad_RightX)
+AxisMappings=(AxisName="Turn",Scale=1.000000,Key=MouseX)
+AxisMappings=(AxisName="Turn_Key",Scale=-1.000000,Key=A)
+AxisMappings=(AxisName="Turn_Key",Scale=1.000000,Key=D)
+AxisMappings=(AxisName="Turn_Key",Scale=-1.000000,Key=Left)
+AxisMappings=(AxisName="Turn_Key",Scale=1.000000,Key=Right)
+AxisMappings=(AxisName="LookUp_Gamepad",Scale=1.000000,Key=Gamepad_RightY)
+AxisMappings=(AxisName="LookUp",Scale=-1.000000,Key=MouseY)
+AxisMappings=(AxisName="LookUp_Key",Scale=-1.000000,Key=W)
+AxisMappings=(AxisName="LookUp_Key",Scale=1.000000,Key=S)
+AxisMappings=(AxisName="LookUp_Key",Scale=-1.000000,Key=Up)
+AxisMappings=(AxisName="LookUp_Key",Scale=1.000000,Key=Down)
+AxisMappings=(AxisName="HoverDrone_SlideUp_World",Scale=1.000000,Key=E)
+AxisMappings=(AxisName="HoverDrone_SlideUp_World",Scale=-1.000000,Key=Q)
+AxisMappings=(AxisName="HoverDrone_SlideUp_World",Scale=1.000000,Key=Gamepad_RightTriggerAxis)
+AxisMappings=(AxisName="HoverDrone_SlideUp_World",Scale=-1.000000,Key=Gamepad_LeftTriggerAxis)
+AxisMappings=(AxisName="SpectatorFOVAdjust",Scale=-3.000000,Key=MouseWheelAxis)
+AxisMappings=(AxisName="SpectatorFOVAdjust",Scale=-1.000000,Key=Gamepad_RightShoulder)
+AxisMappings=(AxisName="SpectatorFOVAdjust",Scale=1.000000,Key=Gamepad_LeftShoulder)
+AxisMappings=(AxisName="SpectatorFOVAdjust",Scale=1.000000,Key=Z)
+AxisMappings=(AxisName="SpectatorFOVAdjust",Scale=-1.000000,Key=X)
+AxisMappings=(AxisName="SpectatorNormDistance",Scale=-1.000000,Key=Gamepad_RightTriggerAxis)
+AxisMappings=(AxisName="SpectatorNormDistance",Scale=1.000000,Key=Gamepad_LeftTriggerAxis)
+AxisMappings=(AxisName="SpectatorNormDistance",Scale=1.000000,Key=E)
+AxisMappings=(AxisName="SpectatorNormDistance",Scale=-1.000000,Key=Q)
+AxisMappings=(AxisName="MapZoom_Mouse",Scale=0.200000,Key=MouseWheelAxis)
+AxisMappings=(AxisName="MapZoomIn_Gamepad",Scale=3.000000,Key=Gamepad_RightTriggerAxis)
+AxisMappings=(AxisName="MapZoomOut_Gamepad",Scale=-3.000000,Key=Gamepad_LeftTriggerAxis)
+AxisMappings=(AxisName="BiplanePitchForward",Scale=-1.000000,Key=W)
+AxisMappings=(AxisName="BiplanePitchForward",Scale=1.000000,Key=S)
+AxisMappings=(AxisName="BiplanePitchForward",Scale=-1.000000,Key=Up)
+AxisMappings=(AxisName="BiplanePitchForward",Scale=1.000000,Key=Down)
+AxisMappings=(AxisName="BiplanePitchForward_Gamepad",Scale=-1.000000,Key=Gamepad_LeftY)
+AxisMappings=(AxisName="BiplanePitchForwardSecondary",Scale=-1.000000,Key=MouseY)
+AxisMappings=(AxisName="CannonPitchForward",Scale=-1.000000,Key=W)
+AxisMappings=(AxisName="CannonPitchForward",Scale=1.000000,Key=S)
+AxisMappings=(AxisName="CannonPitchForward",Scale=-1.000000,Key=Up)
+AxisMappings=(AxisName="CannonPitchForward",Scale=1.000000,Key=Down)
+AxisMappings=(AxisName="CannonPitchForward_Gamepad",Scale=-1.000000,Key=Gamepad_LeftY)
+AxisMappings=(AxisName="CannonPitchForwardSecondary",Scale=-1.000000,Key=MouseY)
+AxisMappings=(AxisName="ShoppingCartPitchForward",Scale=-1.000000,Key=W)
+AxisMappings=(AxisName="ShoppingCartPitchForward",Scale=1.000000,Key=S)
+AxisMappings=(AxisName="ShoppingCartPitchForward",Scale=-1.000000,Key=Up)
+AxisMappings=(AxisName="ShoppingCartPitchForward",Scale=1.000000,Key=Down)
+AxisMappings=(AxisName="ShoppingCartPitchForward_Gamepad",Scale=-1.000000,Key=Gamepad_LeftY)
+AxisMappings=(AxisName="ShoppingCartPitchForwardSecondary",Scale=-1.000000,Key=MouseY)
+AxisMappings=(AxisName="GolfCartPitchForward",Scale=-1.000000,Key=W)
+AxisMappings=(AxisName="GolfCartPitchForward",Scale=1.000000,Key=S)
+AxisMappings=(AxisName="GolfCartPitchForward",Scale=-1.000000,Key=Up)
+AxisMappings=(AxisName="GolfCartPitchForward",Scale=1.000000,Key=Down)
+AxisMappings=(AxisName="GolfCartPitchForward_Gamepad",Scale=-1.000000,Key=Gamepad_LeftY)
+AxisMappings=(AxisName="GolfCartPitchForwardSecondary",Scale=-1.000000,Key=MouseY)
+AxisMappings=(AxisName="GamepadGolfCartForward",Scale=1.000000,Key=Gamepad_RightTriggerAxis)
+AxisMappings=(AxisName="GamepadGolfCartReverse",Scale=-1.000000,Key=Gamepad_LeftTriggerAxis)
+AxisMappings=(AxisName="QuadCrasherPitchForward",Scale=-1.000000,Key=W)
+AxisMappings=(AxisName="QuadCrasherPitchForward",Scale=1.000000,Key=S)
+AxisMappings=(AxisName="QuadCrasherPitchForward",Scale=-1.000000,Key=Up)
+AxisMappings=(AxisName="QuadCrasherPitchForward",Scale=1.000000,Key=Down)
+AxisMappings=(AxisName="QuadCrasherPitchForward_Gamepad",Scale=-1.000000,Key=Gamepad_LeftY)
+AxisMappings=(AxisName="QuadCrasherPitchForwardSecondary",Scale=-1.000000,Key=MouseY)
+AxisMappings=(AxisName="GamepadQuadCrasherForward",Scale=1.000000,Key=Gamepad_RightTriggerAxis)
+AxisMappings=(AxisName="GamepadQuadCrasherReverse",Scale=-1.000000,Key=Gamepad_LeftTriggerAxis)
+AxisMappings=(AxisName="HamsterballPitchForward",Scale=-1.000000,Key=W)
+AxisMappings=(AxisName="HamsterballPitchForward",Scale=1.000000,Key=S)
+AxisMappings=(AxisName="HamsterballPitchForward",Scale=-1.000000,Key=Up)
+AxisMappings=(AxisName="HamsterballPitchForward",Scale=1.000000,Key=Down)
+AxisMappings=(AxisName="HamsterballPitchForward_Gamepad",Scale=-1.000000,Key=Gamepad_LeftY)
+AxisMappings=(AxisName="HamsterballPitchForwardSecondary",Scale=-1.000000,Key=MouseY)
+AxisMappings=(AxisName="JackalPitchForward",Scale=-1.000000,Key=W)
+AxisMappings=(AxisName="JackalPitchForward",Scale=1.000000,Key=S)
+AxisMappings=(AxisName="JackalPitchForward",Scale=-1.000000,Key=Up)
+AxisMappings=(AxisName="JackalPitchForward",Scale=1.000000,Key=Down)
+AxisMappings=(AxisName="JackalPitchForward_Gamepad",Scale=-1.000000,Key=Gamepad_LeftY)
+AxisMappings=(AxisName="JackalPitchForwardSecondary",Scale=-1.000000,Key=MouseY)
+AxisMappings=(AxisName="MeatballPitchForward",Scale=-1.000000,Key=W)
+AxisMappings=(AxisName="MeatballPitchForward",Scale=1.000000,Key=S)
+AxisMappings=(AxisName="MeatballPitchForward",Scale=-1.000000,Key=Up)
+AxisMappings=(AxisName="MeatballPitchForward",Scale=1.000000,Key=Down)
+AxisMappings=(AxisName="MeatballPitchForward_Gamepad",Scale=-1.000000,Key=Gamepad_LeftY)
+AxisMappings=(AxisName="MeatballPitchForwardSecondary",Scale=-1.000000,Key=MouseY)
+AxisMappings=(AxisName="HoagieMoveUp",Scale=-1.000000,Key=RightMouseButton)
+AxisMappings=(AxisName="HoagieMoveUp",Scale=1.000000,Key=LeftMouseButton)

DefaultTouchInterface=None
ConsoleKey=None
+ConsoleKeys=Tilde

[/Script/CommonUI.CommonUIInputSettings]
bLinkCursorToGamepadFocus=True
UIActionProcessingPriority=10000
+InputActions=(ActionTag=UI.Action.Cancel,DefaultDisplayName="",KeyMappings=((Key=Escape),(Key=Gamepad_FaceButton_Right),(Key=Android_Back)))
+InputActions=(ActionTag=UI.Action.PreviousTab,DefaultDisplayName="",KeyMappings=((Key=Gamepad_LeftShoulder)))
+InputActions=(ActionTag=UI.Action.NextTab,DefaultDisplayName="",KeyMappings=((Key=Gamepad_RightShoulder)))
+InputActions=(ActionTag=UI.Action.FocusChat,DefaultDisplayName="",KeyMappings=((Key=Gamepad_Special_Left,HoldTime=1.000000),(Key=Enter)))
+InputActions=(ActionTag=UI.Action.OpenSocial,DefaultDisplayName=NSLOCTEXT("[/Script/CommonUI]", "F24F341641A4FA3F48ABCB8574D8C08C", "Social"),KeyMappings=((Key=Gamepad_Special_Left)))
+InputActions=(ActionTag=UI.Action.MainMenu,DefaultDisplayName=NSLOCTEXT("[/Script/CommonUI]", "299611F34A25E91C690A2C92C252B793", "Menu"),KeyMappings=((Key=Escape),(Key=Gamepad_Special_Right)))
+InputActions=(ActionTag=UI.Action.SwitchProfile,DefaultDisplayName=NSLOCTEXT("[/Script/CommonUI]", "E928E3A54C017ABB67564BB0EE06B190", "Switch Profile"),KeyMappings=((Key=Gamepad_RightThumbstick)))
AnalogCursorSettings=(PreprocessorPriority=2,bEnableCursorAcceleration=True,CursorAcceleration=1500.000000,CursorMaxSpeed=2200.000000,CursorDeadZone=0.250000,HoverSlowdownFactor=0.400000,ScrollDeadZone=0.200000,ScrollUpdatePeriod=0.100000,ScrollMultiplier=2.500000)

